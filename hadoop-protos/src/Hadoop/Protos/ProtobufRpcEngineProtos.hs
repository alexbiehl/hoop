{-# LANGUAGE BangPatterns, DataKinds, DeriveDataTypeable, FlexibleInstances, MultiParamTypeClasses #-}
{-# OPTIONS_GHC -fno-warn-unused-imports #-}
module Hadoop.Protos.ProtobufRpcEngineProtos (protoInfo, fileDescriptorProto) where
import Prelude ((+), (/))
import qualified Prelude as Prelude'
import qualified Data.Typeable as Prelude'
import qualified Data.Data as Prelude'
import qualified Text.ProtocolBuffers.Header as P'
import Text.DescriptorProtos.FileDescriptorProto (FileDescriptorProto)
import Text.ProtocolBuffers.Reflections (ProtoInfo)
import qualified Text.ProtocolBuffers.WireMessage as P' (wireGet,getFromBS)
 
protoInfo :: ProtoInfo
protoInfo
 = Prelude'.read
    "ProtoInfo {protoMod = ProtoName {protobufName = FIName \".hadoop.common\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [], baseName = MName \"ProtobufRpcEngineProtos\"}, protoFilePath = [\"Hadoop\",\"Protos\",\"ProtobufRpcEngineProtos.hs\"], protoSource = \"ProtobufRpcEngine.proto\", extensionKeys = fromList [], messages = [DescriptorInfo {descName = ProtoName {protobufName = FIName \".hadoop.common.RequestHeaderProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"ProtobufRpcEngineProtos\"], baseName = MName \"RequestHeaderProto\"}, descFilePath = [\"Hadoop\",\"Protos\",\"ProtobufRpcEngineProtos\",\"RequestHeaderProto.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.common.RequestHeaderProto.methodName\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"ProtobufRpcEngineProtos\",MName \"RequestHeaderProto\"], baseName' = FName \"methodName\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.common.RequestHeaderProto.declaringClassProtocolName\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"ProtobufRpcEngineProtos\",MName \"RequestHeaderProto\"], baseName' = FName \"declaringClassProtocolName\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 18}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.common.RequestHeaderProto.clientProtocolVersion\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"ProtobufRpcEngineProtos\",MName \"RequestHeaderProto\"], baseName' = FName \"clientProtocolVersion\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 24}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 4}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False}], enums = [], oneofs = [], services = [], knownKeyMap = fromList []}"
 
fileDescriptorProto :: FileDescriptorProto
fileDescriptorProto
 = P'.getFromBS (P'.wireGet 11)
    (P'.pack
      "\186\DLE\n\ETBProtobufRpcEngine.proto\DC2\rhadoop.common\"k\n\DC2RequestHeaderProto\DC2\DC2\n\nmethodName\CAN\SOH \STX(\t\DC2\"\n\SUBdeclaringClassProtocolName\CAN\STX \STX(\t\DC2\GS\n\NAKclientProtocolVersion\CAN\ETX \STX(\EOTBR\n\RSorg.apache.hadoop.ipc.protobufB\ETBProtobufRpcEngineProtosH\SOHP\NUL\128\SOH\NUL\136\SOH\NUL\144\SOH\NUL\160\SOH\SOH\184\SOH\NUL\216\SOH\NUL\248\SOH\NULJ\206\SO\n\b\n\NUL\DC2\EOT\RS\NULB\SOH\n\b\n\SOH\b\DC2\ETX\RS\NUL7\n\241\SOH\n\EOT\b\231\a\NUL\DC2\ETX\RS\NUL7\SUB\227\SOH*\n These are the messages used by Hadoop RPC for the Rpc Engine Protocol Buffer\n to marshal the request and response in the RPC layer.\n The messages are sent in addition to the normal RPC header as \n defined in RpcHeader.proto\n\n\f\n\ENQ\b\231\a\NUL\STX\DC2\ETX\RS\a\DC3\n\r\n\ACK\b\231\a\NUL\STX\NUL\DC2\ETX\RS\a\DC3\n\SO\n\a\b\231\a\NUL\STX\NUL\SOH\DC2\ETX\RS\a\DC3\n\f\n\ENQ\b\231\a\NUL\a\DC2\ETX\RS\SYN6\n\b\n\SOH\b\DC2\ETX\US\NUL8\n\v\n\EOT\b\231\a\SOH\DC2\ETX\US\NUL8\n\f\n\ENQ\b\231\a\SOH\STX\DC2\ETX\US\a\ESC\n\r\n\ACK\b\231\a\SOH\STX\NUL\DC2\ETX\US\a\ESC\n\SO\n\a\b\231\a\SOH\STX\NUL\SOH\DC2\ETX\US\a\ESC\n\f\n\ENQ\b\231\a\SOH\a\DC2\ETX\US\RS7\n\b\n\SOH\b\DC2\ETX \NUL,\n\v\n\EOT\b\231\a\STX\DC2\ETX \NUL,\n\f\n\ENQ\b\231\a\STX\STX\DC2\ETX \a$\n\r\n\ACK\b\231\a\STX\STX\NUL\DC2\ETX \a$\n\SO\n\a\b\231\a\STX\STX\NUL\SOH\DC2\ETX \a$\n\f\n\ENQ\b\231\a\STX\ETX\DC2\ETX '+\n\b\n\SOH\STX\DC2\ETX!\b\NAK\n\221\STX\n\STX\EOT\NUL\DC2\EOT+\NULB\SOH\SUB\208\STX*\n This message is the header for the Protobuf Rpc Engine\n when sending a RPC request from  RPC client to the RPC server.\n The actual request (serialized as protobuf) follows this request.\n\n No special header is needed for the Rpc Response for Protobuf Rpc Engine.\n The normal RPC response header (see RpcHeader.proto) are sufficient. \n\n\n\n\ETX\EOT\NUL\SOH\DC2\ETX+\b\SUB\n&\n\EOT\EOT\NUL\STX\NUL\DC2\ETX-\STX!\SUB\EM* Name of the RPC method \n\f\n\ENQ\EOT\NUL\STX\NUL\EOT\DC2\ETX-\STX\n\n\f\n\ENQ\EOT\NUL\STX\NUL\ENQ\DC2\ETX-\v\DC1\n\f\n\ENQ\EOT\NUL\STX\NUL\SOH\DC2\ETX-\DC2\FS\n\f\n\ENQ\EOT\NUL\STX\NUL\ETX\DC2\ETX-\US \n\215\ENQ\n\EOT\EOT\NUL\STX\SOH\DC2\ETX>\STX1\SUB\201\ENQ* \n RPCs for a particular interface (ie protocol) are done using a\n IPC connection that is setup using rpcProxy.\n The rpcProxy's has a declared protocol name that is \n sent form client to server at connection time. \n \n Each Rpc call also sends a protocol name \n (called declaringClassprotocolName). This name is usually the same\n as the connection protocol name except in some cases. \n For example metaProtocols such ProtocolInfoProto which get metainfo\n about the protocol reuse the connection but need to indicate that\n the actual protocol is different (i.e. the protocol is\n ProtocolInfoProto) since they reuse the connection; in this case\n the declaringClassProtocolName field is set to the ProtocolInfoProto\n\n\f\n\ENQ\EOT\NUL\STX\SOH\EOT\DC2\ETX>\STX\n\n\f\n\ENQ\EOT\NUL\STX\SOH\ENQ\DC2\ETX>\v\DC1\n\f\n\ENQ\EOT\NUL\STX\SOH\SOH\DC2\ETX>\DC2,\n\f\n\ENQ\EOT\NUL\STX\SOH\ETX\DC2\ETX>/0\nE\n\EOT\EOT\NUL\STX\STX\DC2\ETXA\STX,\SUB8* protocol version of class declaring the called method \n\f\n\ENQ\EOT\NUL\STX\STX\EOT\DC2\ETXA\STX\n\n\f\n\ENQ\EOT\NUL\STX\STX\ENQ\DC2\ETXA\v\DC1\n\f\n\ENQ\EOT\NUL\STX\STX\SOH\DC2\ETXA\DC2'\n\f\n\ENQ\EOT\NUL\STX\STX\ETX\DC2\ETXA*+")