{-# LANGUAGE BangPatterns, DataKinds, DeriveDataTypeable, FlexibleInstances, MultiParamTypeClasses #-}
{-# OPTIONS_GHC -fno-warn-unused-imports #-}
module Hadoop.Protos.EditLogProtos (protoInfo, fileDescriptorProto) where
import Prelude ((+), (/))
import qualified Prelude as Prelude'
import qualified Data.Typeable as Prelude'
import qualified Data.Data as Prelude'
import qualified Text.ProtocolBuffers.Header as P'
import Text.DescriptorProtos.FileDescriptorProto (FileDescriptorProto)
import Text.ProtocolBuffers.Reflections (ProtoInfo)
import qualified Text.ProtocolBuffers.WireMessage as P' (wireGet,getFromBS)
 
protoInfo :: ProtoInfo
protoInfo
 = Prelude'.read
    "ProtoInfo {protoMod = ProtoName {protobufName = FIName \".hadoop.hdfs\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [], baseName = MName \"EditLogProtos\"}, protoFilePath = [\"Hadoop\",\"Protos\",\"EditLogProtos.hs\"], protoSource = \"editlog.proto\", extensionKeys = fromList [], messages = [DescriptorInfo {descName = ProtoName {protobufName = FIName \".hadoop.hdfs.AclEditLogProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"EditLogProtos\"], baseName = MName \"AclEditLogProto\"}, descFilePath = [\"Hadoop\",\"Protos\",\"EditLogProtos\",\"AclEditLogProto.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.AclEditLogProto.src\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"EditLogProtos\",MName \"AclEditLogProto\"], baseName' = FName \"src\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.AclEditLogProto.entries\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"EditLogProtos\",MName \"AclEditLogProto\"], baseName' = FName \"entries\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 18}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = True, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".hadoop.hdfs.AclEntryProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"AclProtos\"], baseName = MName \"AclEntryProto\"}), hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".hadoop.hdfs.XAttrEditLogProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"EditLogProtos\"], baseName = MName \"XAttrEditLogProto\"}, descFilePath = [\"Hadoop\",\"Protos\",\"EditLogProtos\",\"XAttrEditLogProto.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.XAttrEditLogProto.src\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"EditLogProtos\",MName \"XAttrEditLogProto\"], baseName' = FName \"src\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.XAttrEditLogProto.xAttrs\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"EditLogProtos\",MName \"XAttrEditLogProto\"], baseName' = FName \"xAttrs\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 18}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = True, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".hadoop.hdfs.XAttrProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"XAttrProtos\"], baseName = MName \"XAttrProto\"}), hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False}], enums = [], oneofs = [], services = [], knownKeyMap = fromList []}"
 
fileDescriptorProto :: FileDescriptorProto
fileDescriptorProto
 = P'.getFromBS (P'.wireGet 11)
    (P'.pack
      "\132\a\n\reditlog.proto\DC2\vhadoop.hdfs\SUB\tacl.proto\SUB\vxattr.proto\"K\n\SIAclEditLogProto\DC2\v\n\ETXsrc\CAN\SOH \STX(\t\DC2+\n\aentries\CAN\STX \ETX(\v2\SUB.hadoop.hdfs.AclEntryProto\"I\n\DC1XAttrEditLogProto\DC2\v\n\ETXsrc\CAN\SOH \SOH(\t\DC2'\n\ACKxAttrs\CAN\STX \ETX(\v2\ETB.hadoop.hdfs.XAttrProtoBO\n%org.apache.hadoop.hdfs.protocol.protoB\rEditLogProtosH\SOHP\NUL\128\SOH\NUL\136\SOH\NUL\144\SOH\NUL\160\SOH\SOH\184\SOH\NUL\216\SOH\NUL\248\SOH\NULJ\228\EOT\n\b\n\NUL\DC2\EOT\DC2\NUL\"\SOH\n\b\n\SOH\b\DC2\ETX\DC2\NUL>\n\v\n\EOT\b\231\a\NUL\DC2\ETX\DC2\NUL>\n\f\n\ENQ\b\231\a\NUL\STX\DC2\ETX\DC2\a\DC3\n\r\n\ACK\b\231\a\NUL\STX\NUL\DC2\ETX\DC2\a\DC3\n\SO\n\a\b\231\a\NUL\STX\NUL\SOH\DC2\ETX\DC2\a\DC3\n\f\n\ENQ\b\231\a\NUL\a\DC2\ETX\DC2\SYN=\n\b\n\SOH\b\DC2\ETX\DC3\NUL.\n\v\n\EOT\b\231\a\SOH\DC2\ETX\DC3\NUL.\n\f\n\ENQ\b\231\a\SOH\STX\DC2\ETX\DC3\a\ESC\n\r\n\ACK\b\231\a\SOH\STX\NUL\DC2\ETX\DC3\a\ESC\n\SO\n\a\b\231\a\SOH\STX\NUL\SOH\DC2\ETX\DC3\a\ESC\n\f\n\ENQ\b\231\a\SOH\a\DC2\ETX\DC3\RS-\n\b\n\SOH\b\DC2\ETX\DC4\NUL,\n\v\n\EOT\b\231\a\STX\DC2\ETX\DC4\NUL,\n\f\n\ENQ\b\231\a\STX\STX\DC2\ETX\DC4\a$\n\r\n\ACK\b\231\a\STX\STX\NUL\DC2\ETX\DC4\a$\n\SO\n\a\b\231\a\STX\STX\NUL\SOH\DC2\ETX\DC4\a$\n\f\n\ENQ\b\231\a\STX\ETX\DC2\ETX\DC4'+\n\b\n\SOH\STX\DC2\ETX\NAK\b\DC3\n\t\n\STX\ETX\NUL\DC2\ETX\ETB\a\DC2\n\t\n\STX\ETX\SOH\DC2\ETX\CAN\a\DC4\n\n\n\STX\EOT\NUL\DC2\EOT\SUB\NUL\GS\SOH\n\n\n\ETX\EOT\NUL\SOH\DC2\ETX\SUB\b\ETB\n\v\n\EOT\EOT\NUL\STX\NUL\DC2\ETX\ESC\STX%\n\f\n\ENQ\EOT\NUL\STX\NUL\EOT\DC2\ETX\ESC\STX\n\n\f\n\ENQ\EOT\NUL\STX\NUL\ENQ\DC2\ETX\ESC\v\DC1\n\f\n\ENQ\EOT\NUL\STX\NUL\SOH\DC2\ETX\ESC\DC2\NAK\n\f\n\ENQ\EOT\NUL\STX\NUL\ETX\DC2\ETX\ESC#$\n\v\n\EOT\EOT\NUL\STX\SOH\DC2\ETX\FS\STX%\n\f\n\ENQ\EOT\NUL\STX\SOH\EOT\DC2\ETX\FS\STX\n\n\f\n\ENQ\EOT\NUL\STX\SOH\ACK\DC2\ETX\FS\v\CAN\n\f\n\ENQ\EOT\NUL\STX\SOH\SOH\DC2\ETX\FS\EM \n\f\n\ENQ\EOT\NUL\STX\SOH\ETX\DC2\ETX\FS#$\n\n\n\STX\EOT\SOH\DC2\EOT\US\NUL\"\SOH\n\n\n\ETX\EOT\SOH\SOH\DC2\ETX\US\b\EM\n\v\n\EOT\EOT\SOH\STX\NUL\DC2\ETX \STX\SUB\n\f\n\ENQ\EOT\SOH\STX\NUL\EOT\DC2\ETX \STX\n\n\f\n\ENQ\EOT\SOH\STX\NUL\ENQ\DC2\ETX \v\DC1\n\f\n\ENQ\EOT\SOH\STX\NUL\SOH\DC2\ETX \DC2\NAK\n\f\n\ENQ\EOT\SOH\STX\NUL\ETX\DC2\ETX \CAN\EM\n\v\n\EOT\EOT\SOH\STX\SOH\DC2\ETX!\STX!\n\f\n\ENQ\EOT\SOH\STX\SOH\EOT\DC2\ETX!\STX\n\n\f\n\ENQ\EOT\SOH\STX\SOH\ACK\DC2\ETX!\v\NAK\n\f\n\ENQ\EOT\SOH\STX\SOH\SOH\DC2\ETX!\SYN\FS\n\f\n\ENQ\EOT\SOH\STX\SOH\ETX\DC2\ETX!\US ")