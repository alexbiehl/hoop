{-# LANGUAGE BangPatterns, DeriveDataTypeable, FlexibleInstances, MultiParamTypeClasses, TemplateHaskell #-}
{-# OPTIONS_GHC -fno-warn-unused-imports #-}
module Hadoop.Protos.NamenodeProtocolProtos (protoInfo, fileDescriptorProto) where
import Prelude ((+), (/))
import qualified Prelude as Prelude'
import qualified Data.Typeable as Prelude'
import qualified Data.Data as Prelude'
import qualified Text.ProtocolBuffers.Header as P'
import Text.DescriptorProtos.FileDescriptorProto (FileDescriptorProto)
import Text.ProtocolBuffers.Reflections (ProtoInfo)
import qualified Text.ProtocolBuffers.WireMessage as P' (wireGet,getFromBS)
 
protoInfo :: ProtoInfo
protoInfo
 = Prelude'.read
    "ProtoInfo {protoMod = ProtoName {protobufName = FIName \".hadoop.hdfs.namenode\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [], baseName = MName \"NamenodeProtocolProtos\"}, protoFilePath = [\"Hadoop\",\"Protos\",\"NamenodeProtocolProtos.hs\"], protoSource = \"NamenodeProtocol.proto\", extensionKeys = fromList [], messages = [DescriptorInfo {descName = ProtoName {protobufName = FIName \".hadoop.hdfs.namenode.GetBlocksRequestProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"NamenodeProtocolProtos\"], baseName = MName \"GetBlocksRequestProto\"}, descFilePath = [\"Hadoop\",\"Protos\",\"NamenodeProtocolProtos\",\"GetBlocksRequestProto.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.namenode.GetBlocksRequestProto.datanode\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"NamenodeProtocolProtos\",MName \"GetBlocksRequestProto\"], baseName' = FName \"datanode\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".hadoop.hdfs.DatanodeIDProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"HdfsProtos\"], baseName = MName \"DatanodeIDProto\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.namenode.GetBlocksRequestProto.size\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"NamenodeProtocolProtos\",MName \"GetBlocksRequestProto\"], baseName' = FName \"size\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 16}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 4}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".hadoop.hdfs.namenode.GetBlocksResponseProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"NamenodeProtocolProtos\"], baseName = MName \"GetBlocksResponseProto\"}, descFilePath = [\"Hadoop\",\"Protos\",\"NamenodeProtocolProtos\",\"GetBlocksResponseProto.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.namenode.GetBlocksResponseProto.blocks\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"NamenodeProtocolProtos\",MName \"GetBlocksResponseProto\"], baseName' = FName \"blocks\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".hadoop.hdfs.BlocksWithLocationsProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"HdfsProtos\"], baseName = MName \"BlocksWithLocationsProto\"}), hsRawDefault = Nothing, hsDefault = Nothing}], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".hadoop.hdfs.namenode.GetBlockKeysRequestProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"NamenodeProtocolProtos\"], baseName = MName \"GetBlockKeysRequestProto\"}, descFilePath = [\"Hadoop\",\"Protos\",\"NamenodeProtocolProtos\",\"GetBlockKeysRequestProto.hs\"], isGroup = False, fields = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".hadoop.hdfs.namenode.GetBlockKeysResponseProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"NamenodeProtocolProtos\"], baseName = MName \"GetBlockKeysResponseProto\"}, descFilePath = [\"Hadoop\",\"Protos\",\"NamenodeProtocolProtos\",\"GetBlockKeysResponseProto.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.namenode.GetBlockKeysResponseProto.keys\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"NamenodeProtocolProtos\",MName \"GetBlockKeysResponseProto\"], baseName' = FName \"keys\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".hadoop.hdfs.ExportedBlockKeysProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"HdfsProtos\"], baseName = MName \"ExportedBlockKeysProto\"}), hsRawDefault = Nothing, hsDefault = Nothing}], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".hadoop.hdfs.namenode.GetTransactionIdRequestProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"NamenodeProtocolProtos\"], baseName = MName \"GetTransactionIdRequestProto\"}, descFilePath = [\"Hadoop\",\"Protos\",\"NamenodeProtocolProtos\",\"GetTransactionIdRequestProto.hs\"], isGroup = False, fields = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".hadoop.hdfs.namenode.GetTransactionIdResponseProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"NamenodeProtocolProtos\"], baseName = MName \"GetTransactionIdResponseProto\"}, descFilePath = [\"Hadoop\",\"Protos\",\"NamenodeProtocolProtos\",\"GetTransactionIdResponseProto.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.namenode.GetTransactionIdResponseProto.txId\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"NamenodeProtocolProtos\",MName \"GetTransactionIdResponseProto\"], baseName' = FName \"txId\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 8}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 4}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".hadoop.hdfs.namenode.RollEditLogRequestProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"NamenodeProtocolProtos\"], baseName = MName \"RollEditLogRequestProto\"}, descFilePath = [\"Hadoop\",\"Protos\",\"NamenodeProtocolProtos\",\"RollEditLogRequestProto.hs\"], isGroup = False, fields = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".hadoop.hdfs.namenode.RollEditLogResponseProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"NamenodeProtocolProtos\"], baseName = MName \"RollEditLogResponseProto\"}, descFilePath = [\"Hadoop\",\"Protos\",\"NamenodeProtocolProtos\",\"RollEditLogResponseProto.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.namenode.RollEditLogResponseProto.signature\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"NamenodeProtocolProtos\",MName \"RollEditLogResponseProto\"], baseName' = FName \"signature\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".hadoop.hdfs.CheckpointSignatureProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"HdfsProtos\"], baseName = MName \"CheckpointSignatureProto\"}), hsRawDefault = Nothing, hsDefault = Nothing}], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".hadoop.hdfs.namenode.GetMostRecentCheckpointTxIdRequestProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"NamenodeProtocolProtos\"], baseName = MName \"GetMostRecentCheckpointTxIdRequestProto\"}, descFilePath = [\"Hadoop\",\"Protos\",\"NamenodeProtocolProtos\",\"GetMostRecentCheckpointTxIdRequestProto.hs\"], isGroup = False, fields = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".hadoop.hdfs.namenode.GetMostRecentCheckpointTxIdResponseProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"NamenodeProtocolProtos\"], baseName = MName \"GetMostRecentCheckpointTxIdResponseProto\"}, descFilePath = [\"Hadoop\",\"Protos\",\"NamenodeProtocolProtos\",\"GetMostRecentCheckpointTxIdResponseProto.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.namenode.GetMostRecentCheckpointTxIdResponseProto.txId\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"NamenodeProtocolProtos\",MName \"GetMostRecentCheckpointTxIdResponseProto\"], baseName' = FName \"txId\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 8}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 4}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".hadoop.hdfs.namenode.ErrorReportRequestProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"NamenodeProtocolProtos\"], baseName = MName \"ErrorReportRequestProto\"}, descFilePath = [\"Hadoop\",\"Protos\",\"NamenodeProtocolProtos\",\"ErrorReportRequestProto.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.namenode.ErrorReportRequestProto.registration\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"NamenodeProtocolProtos\",MName \"ErrorReportRequestProto\"], baseName' = FName \"registration\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".hadoop.hdfs.NamenodeRegistrationProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"HdfsProtos\"], baseName = MName \"NamenodeRegistrationProto\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.namenode.ErrorReportRequestProto.errorCode\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"NamenodeProtocolProtos\",MName \"ErrorReportRequestProto\"], baseName' = FName \"errorCode\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 16}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.namenode.ErrorReportRequestProto.msg\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"NamenodeProtocolProtos\",MName \"ErrorReportRequestProto\"], baseName' = FName \"msg\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 26}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".hadoop.hdfs.namenode.ErrorReportResponseProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"NamenodeProtocolProtos\"], baseName = MName \"ErrorReportResponseProto\"}, descFilePath = [\"Hadoop\",\"Protos\",\"NamenodeProtocolProtos\",\"ErrorReportResponseProto.hs\"], isGroup = False, fields = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".hadoop.hdfs.namenode.RegisterRequestProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"NamenodeProtocolProtos\"], baseName = MName \"RegisterRequestProto\"}, descFilePath = [\"Hadoop\",\"Protos\",\"NamenodeProtocolProtos\",\"RegisterRequestProto.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.namenode.RegisterRequestProto.registration\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"NamenodeProtocolProtos\",MName \"RegisterRequestProto\"], baseName' = FName \"registration\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".hadoop.hdfs.NamenodeRegistrationProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"HdfsProtos\"], baseName = MName \"NamenodeRegistrationProto\"}), hsRawDefault = Nothing, hsDefault = Nothing}], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".hadoop.hdfs.namenode.RegisterResponseProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"NamenodeProtocolProtos\"], baseName = MName \"RegisterResponseProto\"}, descFilePath = [\"Hadoop\",\"Protos\",\"NamenodeProtocolProtos\",\"RegisterResponseProto.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.namenode.RegisterResponseProto.registration\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"NamenodeProtocolProtos\",MName \"RegisterResponseProto\"], baseName' = FName \"registration\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".hadoop.hdfs.NamenodeRegistrationProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"HdfsProtos\"], baseName = MName \"NamenodeRegistrationProto\"}), hsRawDefault = Nothing, hsDefault = Nothing}], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".hadoop.hdfs.namenode.StartCheckpointRequestProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"NamenodeProtocolProtos\"], baseName = MName \"StartCheckpointRequestProto\"}, descFilePath = [\"Hadoop\",\"Protos\",\"NamenodeProtocolProtos\",\"StartCheckpointRequestProto.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.namenode.StartCheckpointRequestProto.registration\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"NamenodeProtocolProtos\",MName \"StartCheckpointRequestProto\"], baseName' = FName \"registration\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".hadoop.hdfs.NamenodeRegistrationProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"HdfsProtos\"], baseName = MName \"NamenodeRegistrationProto\"}), hsRawDefault = Nothing, hsDefault = Nothing}], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".hadoop.hdfs.namenode.StartCheckpointResponseProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"NamenodeProtocolProtos\"], baseName = MName \"StartCheckpointResponseProto\"}, descFilePath = [\"Hadoop\",\"Protos\",\"NamenodeProtocolProtos\",\"StartCheckpointResponseProto.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.namenode.StartCheckpointResponseProto.command\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"NamenodeProtocolProtos\",MName \"StartCheckpointResponseProto\"], baseName' = FName \"command\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".hadoop.hdfs.NamenodeCommandProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"HdfsProtos\"], baseName = MName \"NamenodeCommandProto\"}), hsRawDefault = Nothing, hsDefault = Nothing}], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".hadoop.hdfs.namenode.EndCheckpointRequestProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"NamenodeProtocolProtos\"], baseName = MName \"EndCheckpointRequestProto\"}, descFilePath = [\"Hadoop\",\"Protos\",\"NamenodeProtocolProtos\",\"EndCheckpointRequestProto.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.namenode.EndCheckpointRequestProto.registration\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"NamenodeProtocolProtos\",MName \"EndCheckpointRequestProto\"], baseName' = FName \"registration\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".hadoop.hdfs.NamenodeRegistrationProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"HdfsProtos\"], baseName = MName \"NamenodeRegistrationProto\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.namenode.EndCheckpointRequestProto.signature\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"NamenodeProtocolProtos\",MName \"EndCheckpointRequestProto\"], baseName' = FName \"signature\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 18}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".hadoop.hdfs.CheckpointSignatureProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"HdfsProtos\"], baseName = MName \"CheckpointSignatureProto\"}), hsRawDefault = Nothing, hsDefault = Nothing}], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".hadoop.hdfs.namenode.EndCheckpointResponseProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"NamenodeProtocolProtos\"], baseName = MName \"EndCheckpointResponseProto\"}, descFilePath = [\"Hadoop\",\"Protos\",\"NamenodeProtocolProtos\",\"EndCheckpointResponseProto.hs\"], isGroup = False, fields = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".hadoop.hdfs.namenode.GetEditLogManifestRequestProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"NamenodeProtocolProtos\"], baseName = MName \"GetEditLogManifestRequestProto\"}, descFilePath = [\"Hadoop\",\"Protos\",\"NamenodeProtocolProtos\",\"GetEditLogManifestRequestProto.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.namenode.GetEditLogManifestRequestProto.sinceTxId\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"NamenodeProtocolProtos\",MName \"GetEditLogManifestRequestProto\"], baseName' = FName \"sinceTxId\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 8}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 4}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".hadoop.hdfs.namenode.GetEditLogManifestResponseProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"NamenodeProtocolProtos\"], baseName = MName \"GetEditLogManifestResponseProto\"}, descFilePath = [\"Hadoop\",\"Protos\",\"NamenodeProtocolProtos\",\"GetEditLogManifestResponseProto.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.namenode.GetEditLogManifestResponseProto.manifest\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"NamenodeProtocolProtos\",MName \"GetEditLogManifestResponseProto\"], baseName' = FName \"manifest\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".hadoop.hdfs.RemoteEditLogManifestProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"HdfsProtos\"], baseName = MName \"RemoteEditLogManifestProto\"}), hsRawDefault = Nothing, hsDefault = Nothing}], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".hadoop.hdfs.namenode.IsUpgradeFinalizedRequestProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"NamenodeProtocolProtos\"], baseName = MName \"IsUpgradeFinalizedRequestProto\"}, descFilePath = [\"Hadoop\",\"Protos\",\"NamenodeProtocolProtos\",\"IsUpgradeFinalizedRequestProto.hs\"], isGroup = False, fields = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".hadoop.hdfs.namenode.IsUpgradeFinalizedResponseProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"NamenodeProtocolProtos\"], baseName = MName \"IsUpgradeFinalizedResponseProto\"}, descFilePath = [\"Hadoop\",\"Protos\",\"NamenodeProtocolProtos\",\"IsUpgradeFinalizedResponseProto.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.namenode.IsUpgradeFinalizedResponseProto.isUpgradeFinalized\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"NamenodeProtocolProtos\",MName \"IsUpgradeFinalizedResponseProto\"], baseName' = FName \"isUpgradeFinalized\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 8}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 8}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False}], enums = [], knownKeyMap = fromList []}"
 
fileDescriptorProto :: FileDescriptorProto
fileDescriptorProto
 = P'.getFromBS (P'.wireGet 11)
    (P'.pack
      "\199M\n\SYNNamenodeProtocol.proto\DC2\DC4hadoop.hdfs.namenode\SUB\nhdfs.proto\"U\n\NAKGetBlocksRequestProto\DC2.\n\bdatanode\CAN\SOH \STX(\v2\FS.hadoop.hdfs.DatanodeIDProto\DC2\f\n\EOTsize\CAN\STX \STX(\EOT\"O\n\SYNGetBlocksResponseProto\DC25\n\ACKblocks\CAN\SOH \STX(\v2%.hadoop.hdfs.BlocksWithLocationsProto\"\SUB\n\CANGetBlockKeysRequestProto\"N\n\EMGetBlockKeysResponseProto\DC21\n\EOTkeys\CAN\SOH \SOH(\v2#.hadoop.hdfs.ExportedBlockKeysProto\"\RS\n\FSGetTransactionIdRequestProto\"-\n\GSGetTransactionIdResponseProto\DC2\f\n\EOTtxId\CAN\SOH \STX(\EOT\"\EM\n\ETBRollEditLogRequestProto\"T\n\CANRollEditLogResponseProto\DC28\n\tsignature\CAN\SOH \STX(\v2%.hadoop.hdfs.CheckpointSignatureProto\")\n'GetMostRecentCheckpointTxIdRequestProto\"8\n(GetMostRecentCheckpointTxIdResponseProto\DC2\f\n\EOTtxId\CAN\SOH \STX(\EOT\"w\n\ETBErrorReportRequestProto\DC2<\n\fregistration\CAN\SOH \STX(\v2&.hadoop.hdfs.NamenodeRegistrationProto\DC2\DC1\n\terrorCode\CAN\STX \STX(\r\DC2\v\n\ETXmsg\CAN\ETX \STX(\t\"\SUB\n\CANErrorReportResponseProto\"T\n\DC4RegisterRequestProto\DC2<\n\fregistration\CAN\SOH \STX(\v2&.hadoop.hdfs.NamenodeRegistrationProto\"U\n\NAKRegisterResponseProto\DC2<\n\fregistration\CAN\SOH \STX(\v2&.hadoop.hdfs.NamenodeRegistrationProto\"[\n\ESCStartCheckpointRequestProto\DC2<\n\fregistration\CAN\SOH \STX(\v2&.hadoop.hdfs.NamenodeRegistrationProto\"R\n\FSStartCheckpointResponseProto\DC22\n\acommand\CAN\SOH \STX(\v2!.hadoop.hdfs.NamenodeCommandProto\"\147\SOH\n\EMEndCheckpointRequestProto\DC2<\n\fregistration\CAN\SOH \STX(\v2&.hadoop.hdfs.NamenodeRegistrationProto\DC28\n\tsignature\CAN\STX \STX(\v2%.hadoop.hdfs.CheckpointSignatureProto\"\FS\n\SUBEndCheckpointResponseProto\"3\n\RSGetEditLogManifestRequestProto\DC2\DC1\n\tsinceTxId\CAN\SOH \STX(\EOT\"\\\n\USGetEditLogManifestResponseProto\DC29\n\bmanifest\CAN\SOH \STX(\v2'.hadoop.hdfs.RemoteEditLogManifestProto\" \n\RSIsUpgradeFinalizedRequestProto\"=\n\USIsUpgradeFinalizedResponseProto\DC2\SUB\n\DC2isUpgradeFinalized\CAN\SOH \STX(\b2\175\v\n\ETBNamenodeProtocolService\DC2f\n\tgetBlocks\DC2+.hadoop.hdfs.namenode.GetBlocksRequestProto\SUB,.hadoop.hdfs.namenode.GetBlocksResponseProto\DC2o\n\fgetBlockKeys\DC2..hadoop.hdfs.namenode.GetBlockKeysRequestProto\SUB/.hadoop.hdfs.namenode.GetBlockKeysResponseProto\DC2{\n\DLEgetTransactionId\DC22.hadoop.hdfs.namenode.GetTransactionIdRequestProto\SUB3.hadoop.hdfs.namenode.GetTransactionIdResponseProto\DC2\156\SOH\n\ESCgetMostRecentCheckpointTxId\DC2=.hadoop.hdfs.namenode.GetMostRecentCheckpointTxIdRequestProto\SUB>.hadoop.hdfs.namenode.GetMostRecentCheckpointTxIdResponseProto\DC2l\n\vrollEditLog\DC2-.hadoop.hdfs.namenode.RollEditLogRequestProto\SUB..hadoop.hdfs.namenode.RollEditLogResponseProto\DC2U\n\SOversionRequest\DC2 .hadoop.hdfs.VersionRequestProto\SUB!.hadoop.hdfs.VersionResponseProto\DC2l\n\verrorReport\DC2-.hadoop.hdfs.namenode.ErrorReportRequestProto\SUB..hadoop.hdfs.namenode.ErrorReportResponseProto\DC2v\n\ESCregisterSubordinateNamenode\DC2*.hadoop.hdfs.namenode.RegisterRequestProto\SUB+.hadoop.hdfs.namenode.RegisterResponseProto\DC2x\n\SIstartCheckpoint\DC21.hadoop.hdfs.namenode.StartCheckpointRequestProto\SUB2.hadoop.hdfs.namenode.StartCheckpointResponseProto\DC2r\n\rendCheckpoint\DC2/.hadoop.hdfs.namenode.EndCheckpointRequestProto\SUB0.hadoop.hdfs.namenode.EndCheckpointResponseProto\DC2\129\SOH\n\DC2getEditLogManifest\DC24.hadoop.hdfs.namenode.GetEditLogManifestRequestProto\SUB5.hadoop.hdfs.namenode.GetEditLogManifestResponseProto\DC2\129\SOH\n\DC2isUpgradeFinalized\DC24.hadoop.hdfs.namenode.IsUpgradeFinalizedRequestProto\SUB5.hadoop.hdfs.namenode.IsUpgradeFinalizedResponseProtoBO\n%org.apache.hadoop.hdfs.protocol.protoB\SYNNamenodeProtocolProtosH\SOHP\NUL\128\SOH\NUL\136\SOH\SOH\144\SOH\NUL\160\SOH\SOHJ\179\&5\n\t\n\NUL\DC2\ENQ\ESC\NUL\140\STX\SOH\n\b\n\SOH\b\DC2\ETX\ESC\NUL>\n\193\b\n\EOT\b\231\a\NUL\DC2\ETX\ESC\NUL>2\131\ACK*\n Licensed to the Apache Software Foundation (ASF) under one\n or more contributor license agreements.  See the NOTICE file\n distributed with this work for additional information\n regarding copyright ownership.  The ASF licenses this file\n to you under the Apache License, Version 2.0 (the\n \"License\"); you may not use this file except in compliance\n with the License.  You may obtain a copy of the License at\n\n     http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n2\170\SOH*\n These .proto interfaces are private and stable.\n Please see http://wiki.apache.org/hadoop/Compatibility\n for what changes are allowed for a *stable* .proto interface.\n2\128\SOH This file contains protocol buffers that are used throughout HDFS -- i.e.\n by the client, server, and data transfer protocols.\n\n\f\n\ENQ\b\231\a\NUL\STX\DC2\ETX\ESC\a\DC3\n\r\n\ACK\b\231\a\NUL\STX\NUL\DC2\ETX\ESC\a\DC3\n\SO\n\a\b\231\a\NUL\STX\NUL\SOH\DC2\ETX\ESC\a\DC3\n\f\n\ENQ\b\231\a\NUL\a\DC2\ETX\ESC\SYN=\n\b\n\SOH\b\DC2\ETX\FS\NUL7\n\v\n\EOT\b\231\a\SOH\DC2\ETX\FS\NUL7\n\f\n\ENQ\b\231\a\SOH\STX\DC2\ETX\FS\a\ESC\n\r\n\ACK\b\231\a\SOH\STX\NUL\DC2\ETX\FS\a\ESC\n\SO\n\a\b\231\a\SOH\STX\NUL\SOH\DC2\ETX\FS\a\ESC\n\f\n\ENQ\b\231\a\SOH\a\DC2\ETX\FS\RS6\n\b\n\SOH\b\DC2\ETX\GS\NUL$\n\v\n\EOT\b\231\a\STX\DC2\ETX\GS\NUL$\n\f\n\ENQ\b\231\a\STX\STX\DC2\ETX\GS\a\FS\n\r\n\ACK\b\231\a\STX\STX\NUL\DC2\ETX\GS\a\FS\n\SO\n\a\b\231\a\STX\STX\NUL\SOH\DC2\ETX\GS\a\FS\n\f\n\ENQ\b\231\a\STX\ETX\DC2\ETX\GS\US#\n\b\n\SOH\b\DC2\ETX\RS\NUL,\n\v\n\EOT\b\231\a\ETX\DC2\ETX\RS\NUL,\n\f\n\ENQ\b\231\a\ETX\STX\DC2\ETX\RS\a$\n\r\n\ACK\b\231\a\ETX\STX\NUL\DC2\ETX\RS\a$\n\SO\n\a\b\231\a\ETX\STX\NUL\SOH\DC2\ETX\RS\a$\n\f\n\ENQ\b\231\a\ETX\ETX\DC2\ETX\RS'+\n\b\n\SOH\STX\DC2\ETX\US\b\FS\n\t\n\STX\ETX\NUL\DC2\ETX!\a\DC3\n\212\SOH\n\STX\EOT\NUL\DC2\EOT)\NUL,\SOH\SUB\199\SOH*\n Get list of blocks for a given datanode with the total length \n of adding up to given size\n datanode - Datanode ID to get list of block from\n size - size to which the block lengths must add up to\n\n\n\n\ETX\EOT\NUL\SOH\DC2\ETX)\b\GS\n\SUB\n\EOT\EOT\NUL\STX\NUL\DC2\ETX*\STX(\"\r Datanode ID\n\n\f\n\ENQ\EOT\NUL\STX\NUL\EOT\DC2\ETX*\STX\n\n\f\n\ENQ\EOT\NUL\STX\NUL\ACK\DC2\ETX*\v\SUB\n\f\n\ENQ\EOT\NUL\STX\NUL\SOH\DC2\ETX*\ESC#\n\f\n\ENQ\EOT\NUL\STX\NUL\ETX\DC2\ETX*&'\n\FS\n\EOT\EOT\NUL\STX\SOH\DC2\ETX+\STX\ESC\"\SI Size in bytes\n\n\f\n\ENQ\EOT\NUL\STX\SOH\EOT\DC2\ETX+\STX\n\n\f\n\ENQ\EOT\NUL\STX\SOH\ENQ\DC2\ETX+\v\DC1\n\f\n\ENQ\EOT\NUL\STX\SOH\SOH\DC2\ETX+\DC2\SYN\n\f\n\ENQ\EOT\NUL\STX\SOH\ETX\DC2\ETX+\EM\SUB\n0\n\STX\EOT\SOH\DC2\EOT2\NUL4\SOH\SUB$*\n blocks - List of returned blocks\n\n\n\n\ETX\EOT\SOH\SOH\DC2\ETX2\b\RS\n\GS\n\EOT\EOT\SOH\STX\NUL\DC2\ETX3\STX/\"\DLE List of blocks\n\n\f\n\ENQ\EOT\SOH\STX\NUL\EOT\DC2\ETX3\STX\n\n\f\n\ENQ\EOT\SOH\STX\NUL\ACK\DC2\ETX3\v#\n\f\n\ENQ\EOT\SOH\STX\NUL\SOH\DC2\ETX3$*\n\f\n\ENQ\EOT\SOH\STX\NUL\ETX\DC2\ETX3-.\n\FS\n\STX\EOT\STX\DC2\EOT9\NUL:\SOH\SUB\DLE*\n void request\n\n\n\n\ETX\EOT\STX\SOH\DC2\ETX9\b \nJ\n\STX\EOT\ETX\DC2\EOT?\NULA\SOH\SUB>*\n keys - Information about block keys at the active namenode\n\n\n\n\ETX\EOT\ETX\SOH\DC2\ETX?\b!\n\v\n\EOT\EOT\ETX\STX\NUL\DC2\ETX@\STX+\n\f\n\ENQ\EOT\ETX\STX\NUL\EOT\DC2\ETX@\STX\n\n\f\n\ENQ\EOT\ETX\STX\NUL\ACK\DC2\ETX@\v!\n\f\n\ENQ\EOT\ETX\STX\NUL\SOH\DC2\ETX@\"&\n\f\n\ENQ\EOT\ETX\STX\NUL\ETX\DC2\ETX@)*\n\FS\n\STX\EOT\EOT\DC2\EOTF\NULG\SOH\SUB\DLE*\n void request\n\n\n\n\ETX\EOT\EOT\SOH\DC2\ETXF\b$\nT\n\STX\EOT\ENQ\DC2\EOTL\NULN\SOH\SUBH*\n txId - Transaction ID of the most recently persisted edit log record\n\n\n\n\ETX\EOT\ENQ\SOH\DC2\ETXL\b%\n\GS\n\EOT\EOT\ENQ\STX\NUL\DC2\ETXM\STX\ESC\"\DLE Transaction ID\n\n\f\n\ENQ\EOT\ENQ\STX\NUL\EOT\DC2\ETXM\STX\n\n\f\n\ENQ\EOT\ENQ\STX\NUL\ENQ\DC2\ETXM\v\DC1\n\f\n\ENQ\EOT\ENQ\STX\NUL\SOH\DC2\ETXM\DC2\SYN\n\f\n\ENQ\EOT\ENQ\STX\NUL\ETX\DC2\ETXM\EM\SUB\n\FS\n\STX\EOT\ACK\DC2\EOTS\NULT\SOH\SUB\DLE*\n void request\n\n\n\n\ETX\EOT\ACK\SOH\DC2\ETXS\b\US\nM\n\STX\EOT\a\DC2\EOTY\NUL[\SOH\SUBA*\n signature - A unique token to identify checkpoint transaction\n\n\n\n\ETX\EOT\a\SOH\DC2\ETXY\b \n\v\n\EOT\EOT\a\STX\NUL\DC2\ETXZ\STX2\n\f\n\ENQ\EOT\a\STX\NUL\EOT\DC2\ETXZ\STX\n\n\f\n\ENQ\EOT\a\STX\NUL\ACK\DC2\ETXZ\v#\n\f\n\ENQ\EOT\a\STX\NUL\SOH\DC2\ETXZ$-\n\f\n\ENQ\EOT\a\STX\NUL\ETX\DC2\ETXZ01\n\FS\n\STX\EOT\b\DC2\EOT`\NULa\SOH\SUB\DLE*\n void request\n\n\n\n\ETX\EOT\b\SOH\DC2\ETX`\b/\n\n\n\STX\EOT\t\DC2\EOTc\NULe\SOH\n\n\n\ETX\EOT\t\SOH\DC2\ETXc\b0\n\v\n\EOT\EOT\t\STX\NUL\DC2\ETXd\STX\ESC\n\f\n\ENQ\EOT\t\STX\NUL\EOT\DC2\ETXd\STX\n\n\f\n\ENQ\EOT\t\STX\NUL\ENQ\DC2\ETXd\v\DC1\n\f\n\ENQ\EOT\t\STX\NUL\SOH\DC2\ETXd\DC2\SYN\n\f\n\ENQ\EOT\t\STX\NUL\ETX\DC2\ETXd\EM\SUB\n\147\SOH\n\STX\EOT\n\DC2\EOTl\NULp\SOH\SUB\134\SOH*\n registration - Namenode reporting the error\n errorCode - error code indicating the error\n msg - Free text description of the error\n\n\n\n\ETX\EOT\n\SOH\DC2\ETXl\b\US\n \n\EOT\EOT\n\STX\NUL\DC2\ETXm\STX6\"\DC3 Registration info\n\n\f\n\ENQ\EOT\n\STX\NUL\EOT\DC2\ETXm\STX\n\n\f\n\ENQ\EOT\n\STX\NUL\ACK\DC2\ETXm\v$\n\f\n\ENQ\EOT\n\STX\NUL\SOH\DC2\ETXm%1\n\f\n\ENQ\EOT\n\STX\NUL\ETX\DC2\ETXm45\n\EM\n\EOT\EOT\n\STX\SOH\DC2\ETXn\STX \"\f Error code\n\n\f\n\ENQ\EOT\n\STX\SOH\EOT\DC2\ETXn\STX\n\n\f\n\ENQ\EOT\n\STX\SOH\ENQ\DC2\ETXn\v\DC1\n\f\n\ENQ\EOT\n\STX\SOH\SOH\DC2\ETXn\DC2\ESC\n\f\n\ENQ\EOT\n\STX\SOH\ETX\DC2\ETXn\RS\US\n\FS\n\EOT\EOT\n\STX\STX\DC2\ETXo\STX\SUB\"\SI Error message\n\n\f\n\ENQ\EOT\n\STX\STX\EOT\DC2\ETXo\STX\n\n\f\n\ENQ\EOT\n\STX\STX\ENQ\DC2\ETXo\v\DC1\n\f\n\ENQ\EOT\n\STX\STX\SOH\DC2\ETXo\DC2\NAK\n\f\n\ENQ\EOT\n\STX\STX\ETX\DC2\ETXo\CAN\EM\n\GS\n\STX\EOT\v\DC2\EOTu\NULv\SOH\SUB\DC1*\n void response\n\n\n\n\ETX\EOT\v\SOH\DC2\ETXu\b \n\\\n\STX\EOT\f\DC2\EOT{\NUL}\SOH\SUBP*\n registration - Information of the namenode registering with primary namenode\n\n\n\n\ETX\EOT\f\SOH\DC2\ETX{\b\FS\n \n\EOT\EOT\f\STX\NUL\DC2\ETX|\STX6\"\DC3 Registration info\n\n\f\n\ENQ\EOT\f\STX\NUL\EOT\DC2\ETX|\STX\n\n\f\n\ENQ\EOT\f\STX\NUL\ACK\DC2\ETX|\v$\n\f\n\ENQ\EOT\f\STX\NUL\SOH\DC2\ETX|%1\n\f\n\ENQ\EOT\f\STX\NUL\ETX\DC2\ETX|45\ns\n\STX\EOT\r\DC2\ACK\131\SOH\NUL\133\SOH\SOH\SUBe*\n registration - Updated registration information of the newly registered\n                datanode.\n\n\v\n\ETX\EOT\r\SOH\DC2\EOT\131\SOH\b\GS\n!\n\EOT\EOT\r\STX\NUL\DC2\EOT\132\SOH\STX6\"\DC3 Registration info\n\n\r\n\ENQ\EOT\r\STX\NUL\EOT\DC2\EOT\132\SOH\STX\n\n\r\n\ENQ\EOT\r\STX\NUL\ACK\DC2\EOT\132\SOH\v$\n\r\n\ENQ\EOT\r\STX\NUL\SOH\DC2\EOT\132\SOH%1\n\r\n\ENQ\EOT\r\STX\NUL\ETX\DC2\EOT\132\SOH45\nc\n\STX\EOT\SO\DC2\ACK\139\SOH\NUL\141\SOH\SOH\SUBU*\n Start checkpoint request\n registration - Namenode that is starting the checkpoint\n\n\v\n\ETX\EOT\SO\SOH\DC2\EOT\139\SOH\b#\n!\n\EOT\EOT\SO\STX\NUL\DC2\EOT\140\SOH\STX6\"\DC3 Registration info\n\n\r\n\ENQ\EOT\SO\STX\NUL\EOT\DC2\EOT\140\SOH\STX\n\n\r\n\ENQ\EOT\SO\STX\NUL\ACK\DC2\EOT\140\SOH\v$\n\r\n\ENQ\EOT\SO\STX\NUL\SOH\DC2\EOT\140\SOH%1\n\r\n\ENQ\EOT\SO\STX\NUL\ETX\DC2\EOT\140\SOH45\nn\n\STX\EOT\SI\DC2\ACK\147\SOH\NUL\149\SOH\SOH\SUB`*\n command - Command returned by the active namenode to be\n           be handled by the caller.\n\n\v\n\ETX\EOT\SI\SOH\DC2\EOT\147\SOH\b$\n\f\n\EOT\EOT\SI\STX\NUL\DC2\EOT\148\SOH\STX,\n\r\n\ENQ\EOT\SI\STX\NUL\EOT\DC2\EOT\148\SOH\STX\n\n\r\n\ENQ\EOT\SI\STX\NUL\ACK\DC2\EOT\148\SOH\v\US\n\r\n\ENQ\EOT\SI\STX\NUL\SOH\DC2\EOT\148\SOH '\n\r\n\ENQ\EOT\SI\STX\NUL\ETX\DC2\EOT\148\SOH*+\n\245\SOH\n\STX\EOT\DLE\DC2\ACK\157\SOH\NUL\160\SOH\SOH\SUB\230\SOH*\n End or finalize the previously started checkpoint\n registration - Namenode that is ending the checkpoint\n signature - unique token to identify checkpoint transaction,\n             that was received when checkpoint was started.\n\n\v\n\ETX\EOT\DLE\SOH\DC2\EOT\157\SOH\b!\n!\n\EOT\EOT\DLE\STX\NUL\DC2\EOT\158\SOH\STX6\"\DC3 Registration info\n\n\r\n\ENQ\EOT\DLE\STX\NUL\EOT\DC2\EOT\158\SOH\STX\n\n\r\n\ENQ\EOT\DLE\STX\NUL\ACK\DC2\EOT\158\SOH\v$\n\r\n\ENQ\EOT\DLE\STX\NUL\SOH\DC2\EOT\158\SOH%1\n\r\n\ENQ\EOT\DLE\STX\NUL\ETX\DC2\EOT\158\SOH45\n\f\n\EOT\EOT\DLE\STX\SOH\DC2\EOT\159\SOH\STX2\n\r\n\ENQ\EOT\DLE\STX\SOH\EOT\DC2\EOT\159\SOH\STX\n\n\r\n\ENQ\EOT\DLE\STX\SOH\ACK\DC2\EOT\159\SOH\v#\n\r\n\ENQ\EOT\DLE\STX\SOH\SOH\DC2\EOT\159\SOH$-\n\r\n\ENQ\EOT\DLE\STX\SOH\ETX\DC2\EOT\159\SOH01\n\US\n\STX\EOT\DC1\DC2\ACK\165\SOH\NUL\166\SOH\SOH\SUB\DC1*\n void response\n\n\v\n\ETX\EOT\DC1\SOH\DC2\EOT\165\SOH\b\"\nZ\n\STX\EOT\DC2\DC2\ACK\171\SOH\NUL\173\SOH\SOH\SUBL*\n sinceTxId - return the editlog information for transactions >= sinceTxId\n\n\v\n\ETX\EOT\DC2\SOH\DC2\EOT\171\SOH\b&\n\RS\n\EOT\EOT\DC2\STX\NUL\DC2\EOT\172\SOH\STX \"\DLE Transaction ID\n\n\r\n\ENQ\EOT\DC2\STX\NUL\EOT\DC2\EOT\172\SOH\STX\n\n\r\n\ENQ\EOT\DC2\STX\NUL\ENQ\DC2\EOT\172\SOH\v\DC1\n\r\n\ENQ\EOT\DC2\STX\NUL\SOH\DC2\EOT\172\SOH\DC2\ESC\n\r\n\ENQ\EOT\DC2\STX\NUL\ETX\DC2\EOT\172\SOH\RS\US\nt\n\STX\EOT\DC3\DC2\ACK\179\SOH\NUL\181\SOH\SOH\SUBf*\n manifest - Enumeration of editlogs from namenode for \n            logs >= sinceTxId in the request\n\n\v\n\ETX\EOT\DC3\SOH\DC2\EOT\179\SOH\b'\n\f\n\EOT\EOT\DC3\STX\NUL\DC2\EOT\180\SOH\STX3\n\r\n\ENQ\EOT\DC3\STX\NUL\EOT\DC2\EOT\180\SOH\STX\n\n\r\n\ENQ\EOT\DC3\STX\NUL\ACK\DC2\EOT\180\SOH\v%\n\r\n\ENQ\EOT\DC3\STX\NUL\SOH\DC2\EOT\180\SOH&.\n\r\n\ENQ\EOT\DC3\STX\NUL\ETX\DC2\EOT\180\SOH12\n\RS\n\STX\EOT\DC4\DC2\ACK\186\SOH\NUL\187\SOH\SOH\SUB\DLE*\n void request\n\n\v\n\ETX\EOT\DC4\SOH\DC2\EOT\186\SOH\b&\n\f\n\STX\EOT\NAK\DC2\ACK\189\SOH\NUL\191\SOH\SOH\n\v\n\ETX\EOT\NAK\SOH\DC2\EOT\189\SOH\b'\n\f\n\EOT\EOT\NAK\STX\NUL\DC2\EOT\190\SOH\STX'\n\r\n\ENQ\EOT\NAK\STX\NUL\EOT\DC2\EOT\190\SOH\STX\n\n\r\n\ENQ\EOT\NAK\STX\NUL\ENQ\DC2\EOT\190\SOH\v\SI\n\r\n\ENQ\EOT\NAK\STX\NUL\SOH\DC2\EOT\190\SOH\DLE\"\n\r\n\ENQ\EOT\NAK\STX\NUL\ETX\DC2\EOT\190\SOH%&\n\164\SOH\n\STX\ACK\NUL\DC2\ACK\199\SOH\NUL\140\STX\SOH\SUB\149\SOH*\n Protocol used by the sub-ordinate namenode to send requests\n the active/primary namenode.\n\n See the request and response for details of rpc call.\n\n\v\n\ETX\ACK\NUL\SOH\DC2\EOT\199\SOH\b\US\ni\n\EOT\ACK\NUL\STX\NUL\DC2\EOT\204\SOH\STXG\SUB[*\n Get list of blocks for a given datanode with length\n of blocks adding up to given size.\n\n\r\n\ENQ\ACK\NUL\STX\NUL\SOH\DC2\EOT\204\SOH\ACK\SI\n\r\n\ENQ\ACK\NUL\STX\NUL\STX\DC2\EOT\204\SOH\DLE%\n\r\n\ENQ\ACK\NUL\STX\NUL\ETX\DC2\EOT\204\SOH/E\n,\n\EOT\ACK\NUL\STX\SOH\DC2\EOT\209\SOH\STXP\SUB\RS*\n Get the current block keys\n\n\r\n\ENQ\ACK\NUL\STX\SOH\SOH\DC2\EOT\209\SOH\ACK\DC2\n\r\n\ENQ\ACK\NUL\STX\SOH\STX\DC2\EOT\209\SOH\DC3+\n\r\n\ENQ\ACK\NUL\STX\SOH\ETX\DC2\EOT\209\SOH5N\nX\n\EOT\ACK\NUL\STX\STX\DC2\ACK\214\SOH\STX\215\SOH-\SUBH*\n Get the transaction ID of the most recently persisted editlog record\n\n\r\n\ENQ\ACK\NUL\STX\STX\SOH\DC2\EOT\214\SOH\ACK\SYN\n\r\n\ENQ\ACK\NUL\STX\STX\STX\DC2\EOT\214\SOH\ETB3\n\r\n\ENQ\ACK\NUL\STX\STX\ETX\DC2\EOT\215\SOH\SO+\nX\n\EOT\ACK\NUL\STX\ETX\DC2\ACK\220\SOH\STX\221\SOH8\SUBH*\n Get the transaction ID of the most recently persisted editlog record\n\n\r\n\ENQ\ACK\NUL\STX\ETX\SOH\DC2\EOT\220\SOH\ACK!\n\r\n\ENQ\ACK\NUL\STX\ETX\STX\DC2\EOT\220\SOH\"I\n\r\n\ENQ\ACK\NUL\STX\ETX\ETX\DC2\EOT\221\SOH\SO6\nY\n\EOT\ACK\NUL\STX\EOT\DC2\EOT\226\SOH\STXM\SUBK*\n Close the current editlog and open a new one for checkpointing purposes\n\n\r\n\ENQ\ACK\NUL\STX\EOT\SOH\DC2\EOT\226\SOH\ACK\DC1\n\r\n\ENQ\ACK\NUL\STX\EOT\STX\DC2\EOT\226\SOH\DC2)\n\r\n\ENQ\ACK\NUL\STX\EOT\ETX\DC2\EOT\226\SOH3K\nI\n\EOT\ACK\NUL\STX\ENQ\DC2\EOT\231\SOH\STXH\SUB;*\n Request info about the version running on this NameNode\n\n\r\n\ENQ\ACK\NUL\STX\ENQ\SOH\DC2\EOT\231\SOH\ACK\DC4\n\r\n\ENQ\ACK\NUL\STX\ENQ\STX\DC2\EOT\231\SOH\NAK(\n\r\n\ENQ\ACK\NUL\STX\ENQ\ETX\DC2\EOT\231\SOH2F\n\181\SOH\n\EOT\ACK\NUL\STX\ACK\DC2\EOT\238\SOH\STXM\SUB\166\SOH*\n Report from a sub-ordinate namenode of an error to the active namenode.\n Active namenode may decide to unregister the reporting namenode \n depending on the error.\n\n\r\n\ENQ\ACK\NUL\STX\ACK\SOH\DC2\EOT\238\SOH\ACK\DC1\n\r\n\ENQ\ACK\NUL\STX\ACK\STX\DC2\EOT\238\SOH\DC2)\n\r\n\ENQ\ACK\NUL\STX\ACK\ETX\DC2\EOT\238\SOH3K\n=\n\EOT\ACK\NUL\STX\a\DC2\EOT\243\SOH\STXW\SUB/*\n Request to register a sub-ordinate namenode\n\n\r\n\ENQ\ACK\NUL\STX\a\SOH\DC2\EOT\243\SOH\ACK!\n\r\n\ENQ\ACK\NUL\STX\a\STX\DC2\EOT\243\SOH\"6\n\r\n\ENQ\ACK\NUL\STX\a\ETX\DC2\EOT\243\SOH@U\n3\n\EOT\ACK\NUL\STX\b\DC2\ACK\248\SOH\STX\249\SOH,\SUB#*\n Request to start a checkpoint. \n\n\r\n\ENQ\ACK\NUL\STX\b\SOH\DC2\EOT\248\SOH\ACK\NAK\n\r\n\ENQ\ACK\NUL\STX\b\STX\DC2\EOT\248\SOH\SYN1\n\r\n\ENQ\ACK\NUL\STX\b\ETX\DC2\EOT\249\SOH\SO*\nE\n\EOT\ACK\NUL\STX\t\DC2\ACK\254\SOH\STX\255\SOH*\SUB5*\n End of finalize the previously started checkpoint\n\n\r\n\ENQ\ACK\NUL\STX\t\SOH\DC2\EOT\254\SOH\ACK\DC3\n\r\n\ENQ\ACK\NUL\STX\t\STX\DC2\EOT\254\SOH\DC4-\n\r\n\ENQ\ACK\NUL\STX\t\ETX\DC2\EOT\255\SOH\SO(\nW\n\EOT\ACK\NUL\STX\n\DC2\ACK\132\STX\STX\133\STX/\SUBG*\n Get editlog manifests from the active namenode for all the editlogs\n\n\r\n\ENQ\ACK\NUL\STX\n\SOH\DC2\EOT\132\STX\ACK\CAN\n\r\n\ENQ\ACK\NUL\STX\n\STX\DC2\EOT\132\STX\EM7\n\r\n\ENQ\ACK\NUL\STX\n\ETX\DC2\EOT\133\STX\SO-\nY\n\EOT\ACK\NUL\STX\v\DC2\ACK\138\STX\STX\139\STX0\SUBI*\n Return whether the NameNode is in upgrade state (false) or not (true)\n\n\r\n\ENQ\ACK\NUL\STX\v\SOH\DC2\EOT\138\STX\ACK\CAN\n\r\n\ENQ\ACK\NUL\STX\v\STX\DC2\EOT\138\STX\EM7\n\r\n\ENQ\ACK\NUL\STX\v\ETX\DC2\EOT\139\STX\SI.")