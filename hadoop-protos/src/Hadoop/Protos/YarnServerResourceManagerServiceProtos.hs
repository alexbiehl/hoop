{-# LANGUAGE BangPatterns, DeriveDataTypeable, FlexibleInstances, MultiParamTypeClasses, TemplateHaskell #-}
{-# OPTIONS_GHC -fno-warn-unused-imports #-}
module Hadoop.Protos.YarnServerResourceManagerServiceProtos (protoInfo, fileDescriptorProto) where
import Prelude ((+), (/))
import qualified Prelude as Prelude'
import qualified Data.Typeable as Prelude'
import qualified Data.Data as Prelude'
import qualified Text.ProtocolBuffers.Header as P'
import Text.DescriptorProtos.FileDescriptorProto (FileDescriptorProto)
import Text.ProtocolBuffers.Reflections (ProtoInfo)
import qualified Text.ProtocolBuffers.WireMessage as P' (wireGet,getFromBS)
 
protoInfo :: ProtoInfo
protoInfo
 = Prelude'.read
    "ProtoInfo {protoMod = ProtoName {protobufName = FIName \".hadoop.yarn\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [], baseName = MName \"YarnServerResourceManagerServiceProtos\"}, protoFilePath = [\"Hadoop\",\"Protos\",\"YarnServerResourceManagerServiceProtos.hs\"], protoSource = \"server/yarn_server_resourcemanager_service_protos.proto\", extensionKeys = fromList [], messages = [DescriptorInfo {descName = ProtoName {protobufName = FIName \".hadoop.yarn.RefreshQueuesRequestProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"YarnServerResourceManagerServiceProtos\"], baseName = MName \"RefreshQueuesRequestProto\"}, descFilePath = [\"Hadoop\",\"Protos\",\"YarnServerResourceManagerServiceProtos\",\"RefreshQueuesRequestProto.hs\"], isGroup = False, fields = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".hadoop.yarn.RefreshQueuesResponseProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"YarnServerResourceManagerServiceProtos\"], baseName = MName \"RefreshQueuesResponseProto\"}, descFilePath = [\"Hadoop\",\"Protos\",\"YarnServerResourceManagerServiceProtos\",\"RefreshQueuesResponseProto.hs\"], isGroup = False, fields = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".hadoop.yarn.RefreshNodesRequestProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"YarnServerResourceManagerServiceProtos\"], baseName = MName \"RefreshNodesRequestProto\"}, descFilePath = [\"Hadoop\",\"Protos\",\"YarnServerResourceManagerServiceProtos\",\"RefreshNodesRequestProto.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.yarn.RefreshNodesRequestProto.decommissionType\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"YarnServerResourceManagerServiceProtos\",MName \"RefreshNodesRequestProto\"], baseName' = FName \"decommissionType\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 8}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 14}, typeName = Just (ProtoName {protobufName = FIName \".hadoop.yarn.DecommissionTypeProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"YarnServerResourceManagerServiceProtos\"], baseName = MName \"DecommissionTypeProto\"}), hsRawDefault = Just \"NORMAL\", hsDefault = Just (HsDef'Enum \"NORMAL\")}], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".hadoop.yarn.RefreshNodesResponseProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"YarnServerResourceManagerServiceProtos\"], baseName = MName \"RefreshNodesResponseProto\"}, descFilePath = [\"Hadoop\",\"Protos\",\"YarnServerResourceManagerServiceProtos\",\"RefreshNodesResponseProto.hs\"], isGroup = False, fields = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".hadoop.yarn.RefreshSuperUserGroupsConfigurationRequestProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"YarnServerResourceManagerServiceProtos\"], baseName = MName \"RefreshSuperUserGroupsConfigurationRequestProto\"}, descFilePath = [\"Hadoop\",\"Protos\",\"YarnServerResourceManagerServiceProtos\",\"RefreshSuperUserGroupsConfigurationRequestProto.hs\"], isGroup = False, fields = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".hadoop.yarn.RefreshSuperUserGroupsConfigurationResponseProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"YarnServerResourceManagerServiceProtos\"], baseName = MName \"RefreshSuperUserGroupsConfigurationResponseProto\"}, descFilePath = [\"Hadoop\",\"Protos\",\"YarnServerResourceManagerServiceProtos\",\"RefreshSuperUserGroupsConfigurationResponseProto.hs\"], isGroup = False, fields = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".hadoop.yarn.RefreshUserToGroupsMappingsRequestProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"YarnServerResourceManagerServiceProtos\"], baseName = MName \"RefreshUserToGroupsMappingsRequestProto\"}, descFilePath = [\"Hadoop\",\"Protos\",\"YarnServerResourceManagerServiceProtos\",\"RefreshUserToGroupsMappingsRequestProto.hs\"], isGroup = False, fields = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".hadoop.yarn.RefreshUserToGroupsMappingsResponseProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"YarnServerResourceManagerServiceProtos\"], baseName = MName \"RefreshUserToGroupsMappingsResponseProto\"}, descFilePath = [\"Hadoop\",\"Protos\",\"YarnServerResourceManagerServiceProtos\",\"RefreshUserToGroupsMappingsResponseProto.hs\"], isGroup = False, fields = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".hadoop.yarn.RefreshAdminAclsRequestProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"YarnServerResourceManagerServiceProtos\"], baseName = MName \"RefreshAdminAclsRequestProto\"}, descFilePath = [\"Hadoop\",\"Protos\",\"YarnServerResourceManagerServiceProtos\",\"RefreshAdminAclsRequestProto.hs\"], isGroup = False, fields = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".hadoop.yarn.RefreshAdminAclsResponseProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"YarnServerResourceManagerServiceProtos\"], baseName = MName \"RefreshAdminAclsResponseProto\"}, descFilePath = [\"Hadoop\",\"Protos\",\"YarnServerResourceManagerServiceProtos\",\"RefreshAdminAclsResponseProto.hs\"], isGroup = False, fields = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".hadoop.yarn.RefreshServiceAclsRequestProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"YarnServerResourceManagerServiceProtos\"], baseName = MName \"RefreshServiceAclsRequestProto\"}, descFilePath = [\"Hadoop\",\"Protos\",\"YarnServerResourceManagerServiceProtos\",\"RefreshServiceAclsRequestProto.hs\"], isGroup = False, fields = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".hadoop.yarn.RefreshServiceAclsResponseProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"YarnServerResourceManagerServiceProtos\"], baseName = MName \"RefreshServiceAclsResponseProto\"}, descFilePath = [\"Hadoop\",\"Protos\",\"YarnServerResourceManagerServiceProtos\",\"RefreshServiceAclsResponseProto.hs\"], isGroup = False, fields = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".hadoop.yarn.GetGroupsForUserRequestProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"YarnServerResourceManagerServiceProtos\"], baseName = MName \"GetGroupsForUserRequestProto\"}, descFilePath = [\"Hadoop\",\"Protos\",\"YarnServerResourceManagerServiceProtos\",\"GetGroupsForUserRequestProto.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.yarn.GetGroupsForUserRequestProto.user\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"YarnServerResourceManagerServiceProtos\",MName \"GetGroupsForUserRequestProto\"], baseName' = FName \"user\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".hadoop.yarn.GetGroupsForUserResponseProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"YarnServerResourceManagerServiceProtos\"], baseName = MName \"GetGroupsForUserResponseProto\"}, descFilePath = [\"Hadoop\",\"Protos\",\"YarnServerResourceManagerServiceProtos\",\"GetGroupsForUserResponseProto.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.yarn.GetGroupsForUserResponseProto.groups\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"YarnServerResourceManagerServiceProtos\",MName \"GetGroupsForUserResponseProto\"], baseName' = FName \"groups\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = True, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".hadoop.yarn.UpdateNodeResourceRequestProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"YarnServerResourceManagerServiceProtos\"], baseName = MName \"UpdateNodeResourceRequestProto\"}, descFilePath = [\"Hadoop\",\"Protos\",\"YarnServerResourceManagerServiceProtos\",\"UpdateNodeResourceRequestProto.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.yarn.UpdateNodeResourceRequestProto.node_resource_map\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"YarnServerResourceManagerServiceProtos\",MName \"UpdateNodeResourceRequestProto\"], baseName' = FName \"node_resource_map\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = True, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".hadoop.yarn.NodeResourceMapProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"YarnProtos\"], baseName = MName \"NodeResourceMapProto\"}), hsRawDefault = Nothing, hsDefault = Nothing}], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".hadoop.yarn.UpdateNodeResourceResponseProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"YarnServerResourceManagerServiceProtos\"], baseName = MName \"UpdateNodeResourceResponseProto\"}, descFilePath = [\"Hadoop\",\"Protos\",\"YarnServerResourceManagerServiceProtos\",\"UpdateNodeResourceResponseProto.hs\"], isGroup = False, fields = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".hadoop.yarn.AddToClusterNodeLabelsRequestProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"YarnServerResourceManagerServiceProtos\"], baseName = MName \"AddToClusterNodeLabelsRequestProto\"}, descFilePath = [\"Hadoop\",\"Protos\",\"YarnServerResourceManagerServiceProtos\",\"AddToClusterNodeLabelsRequestProto.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.yarn.AddToClusterNodeLabelsRequestProto.nodeLabels\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"YarnServerResourceManagerServiceProtos\",MName \"AddToClusterNodeLabelsRequestProto\"], baseName' = FName \"nodeLabels\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = True, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".hadoop.yarn.NodeLabelProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"YarnProtos\"], baseName = MName \"NodeLabelProto\"}), hsRawDefault = Nothing, hsDefault = Nothing}], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".hadoop.yarn.AddToClusterNodeLabelsResponseProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"YarnServerResourceManagerServiceProtos\"], baseName = MName \"AddToClusterNodeLabelsResponseProto\"}, descFilePath = [\"Hadoop\",\"Protos\",\"YarnServerResourceManagerServiceProtos\",\"AddToClusterNodeLabelsResponseProto.hs\"], isGroup = False, fields = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".hadoop.yarn.RemoveFromClusterNodeLabelsRequestProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"YarnServerResourceManagerServiceProtos\"], baseName = MName \"RemoveFromClusterNodeLabelsRequestProto\"}, descFilePath = [\"Hadoop\",\"Protos\",\"YarnServerResourceManagerServiceProtos\",\"RemoveFromClusterNodeLabelsRequestProto.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.yarn.RemoveFromClusterNodeLabelsRequestProto.nodeLabels\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"YarnServerResourceManagerServiceProtos\",MName \"RemoveFromClusterNodeLabelsRequestProto\"], baseName' = FName \"nodeLabels\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = True, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".hadoop.yarn.RemoveFromClusterNodeLabelsResponseProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"YarnServerResourceManagerServiceProtos\"], baseName = MName \"RemoveFromClusterNodeLabelsResponseProto\"}, descFilePath = [\"Hadoop\",\"Protos\",\"YarnServerResourceManagerServiceProtos\",\"RemoveFromClusterNodeLabelsResponseProto.hs\"], isGroup = False, fields = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".hadoop.yarn.ReplaceLabelsOnNodeRequestProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"YarnServerResourceManagerServiceProtos\"], baseName = MName \"ReplaceLabelsOnNodeRequestProto\"}, descFilePath = [\"Hadoop\",\"Protos\",\"YarnServerResourceManagerServiceProtos\",\"ReplaceLabelsOnNodeRequestProto.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.yarn.ReplaceLabelsOnNodeRequestProto.nodeToLabels\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"YarnServerResourceManagerServiceProtos\",MName \"ReplaceLabelsOnNodeRequestProto\"], baseName' = FName \"nodeToLabels\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = True, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".hadoop.yarn.NodeIdToLabelsNameProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"YarnServerResourceManagerServiceProtos\"], baseName = MName \"NodeIdToLabelsNameProto\"}), hsRawDefault = Nothing, hsDefault = Nothing}], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".hadoop.yarn.ReplaceLabelsOnNodeResponseProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"YarnServerResourceManagerServiceProtos\"], baseName = MName \"ReplaceLabelsOnNodeResponseProto\"}, descFilePath = [\"Hadoop\",\"Protos\",\"YarnServerResourceManagerServiceProtos\",\"ReplaceLabelsOnNodeResponseProto.hs\"], isGroup = False, fields = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".hadoop.yarn.UpdateNodeLabelsResponseProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"YarnServerResourceManagerServiceProtos\"], baseName = MName \"UpdateNodeLabelsResponseProto\"}, descFilePath = [\"Hadoop\",\"Protos\",\"YarnServerResourceManagerServiceProtos\",\"UpdateNodeLabelsResponseProto.hs\"], isGroup = False, fields = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".hadoop.yarn.CheckForDecommissioningNodesRequestProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"YarnServerResourceManagerServiceProtos\"], baseName = MName \"CheckForDecommissioningNodesRequestProto\"}, descFilePath = [\"Hadoop\",\"Protos\",\"YarnServerResourceManagerServiceProtos\",\"CheckForDecommissioningNodesRequestProto.hs\"], isGroup = False, fields = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".hadoop.yarn.CheckForDecommissioningNodesResponseProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"YarnServerResourceManagerServiceProtos\"], baseName = MName \"CheckForDecommissioningNodesResponseProto\"}, descFilePath = [\"Hadoop\",\"Protos\",\"YarnServerResourceManagerServiceProtos\",\"CheckForDecommissioningNodesResponseProto.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.yarn.CheckForDecommissioningNodesResponseProto.decommissioningNodes\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"YarnServerResourceManagerServiceProtos\",MName \"CheckForDecommissioningNodesResponseProto\"], baseName' = FName \"decommissioningNodes\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = True, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".hadoop.yarn.NodeIdProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"YarnProtos\"], baseName = MName \"NodeIdProto\"}), hsRawDefault = Nothing, hsDefault = Nothing}], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".hadoop.yarn.NodeIdToLabelsNameProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"YarnServerResourceManagerServiceProtos\"], baseName = MName \"NodeIdToLabelsNameProto\"}, descFilePath = [\"Hadoop\",\"Protos\",\"YarnServerResourceManagerServiceProtos\",\"NodeIdToLabelsNameProto.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.yarn.NodeIdToLabelsNameProto.nodeId\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"YarnServerResourceManagerServiceProtos\",MName \"NodeIdToLabelsNameProto\"], baseName' = FName \"nodeId\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".hadoop.yarn.NodeIdProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"YarnProtos\"], baseName = MName \"NodeIdProto\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.yarn.NodeIdToLabelsNameProto.nodeLabels\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"YarnServerResourceManagerServiceProtos\",MName \"NodeIdToLabelsNameProto\"], baseName' = FName \"nodeLabels\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 18}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = True, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".hadoop.yarn.ActiveRMInfoProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"YarnServerResourceManagerServiceProtos\"], baseName = MName \"ActiveRMInfoProto\"}, descFilePath = [\"Hadoop\",\"Protos\",\"YarnServerResourceManagerServiceProtos\",\"ActiveRMInfoProto.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.yarn.ActiveRMInfoProto.clusterId\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"YarnServerResourceManagerServiceProtos\",MName \"ActiveRMInfoProto\"], baseName' = FName \"clusterId\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.yarn.ActiveRMInfoProto.rmId\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"YarnServerResourceManagerServiceProtos\",MName \"ActiveRMInfoProto\"], baseName' = FName \"rmId\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 18}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False}], enums = [EnumInfo {enumName = ProtoName {protobufName = FIName \".hadoop.yarn.DecommissionTypeProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"YarnServerResourceManagerServiceProtos\"], baseName = MName \"DecommissionTypeProto\"}, enumFilePath = [\"Hadoop\",\"Protos\",\"YarnServerResourceManagerServiceProtos\",\"DecommissionTypeProto.hs\"], enumValues = [(EnumCode {getEnumCode = 1},\"NORMAL\"),(EnumCode {getEnumCode = 2},\"GRACEFUL\"),(EnumCode {getEnumCode = 3},\"FORCEFUL\")]}], knownKeyMap = fromList []}"
 
fileDescriptorProto :: FileDescriptorProto
fileDescriptorProto
 = P'.getFromBS (P'.wireGet 11)
    (P'.pack
      "\215%\n7server/yarn_server_resourcemanager_service_protos.proto\DC2\vhadoop.yarn\SUB\DC1yarn_protos.proto\"\ESC\n\EMRefreshQueuesRequestProto\"\FS\n\SUBRefreshQueuesResponseProto\"`\n\CANRefreshNodesRequestProto\DC2D\n\DLEdecommissionType\CAN\SOH \SOH(\SO2\".hadoop.yarn.DecommissionTypeProto:\ACKNORMAL\"\ESC\n\EMRefreshNodesResponseProto\"1\n/RefreshSuperUserGroupsConfigurationRequestProto\"2\n0RefreshSuperUserGroupsConfigurationResponseProto\")\n'RefreshUserToGroupsMappingsRequestProto\"*\n(RefreshUserToGroupsMappingsResponseProto\"\RS\n\FSRefreshAdminAclsRequestProto\"\US\n\GSRefreshAdminAclsResponseProto\" \n\RSRefreshServiceAclsRequestProto\"!\n\USRefreshServiceAclsResponseProto\",\n\FSGetGroupsForUserRequestProto\DC2\f\n\EOTuser\CAN\SOH \STX(\t\"/\n\GSGetGroupsForUserResponseProto\DC2\SO\n\ACKgroups\CAN\SOH \ETX(\t\"^\n\RSUpdateNodeResourceRequestProto\DC2<\n\DC1node_resource_map\CAN\SOH \ETX(\v2!.hadoop.yarn.NodeResourceMapProto\"!\n\USUpdateNodeResourceResponseProto\"U\n\"AddToClusterNodeLabelsRequestProto\DC2/\n\nnodeLabels\CAN\SOH \ETX(\v2\ESC.hadoop.yarn.NodeLabelProto\"%\n#AddToClusterNodeLabelsResponseProto\"=\n'RemoveFromClusterNodeLabelsRequestProto\DC2\DC2\n\nnodeLabels\CAN\SOH \ETX(\t\"*\n(RemoveFromClusterNodeLabelsResponseProto\"]\n\USReplaceLabelsOnNodeRequestProto\DC2:\n\fnodeToLabels\CAN\SOH \ETX(\v2$.hadoop.yarn.NodeIdToLabelsNameProto\"\"\n ReplaceLabelsOnNodeResponseProto\"\US\n\GSUpdateNodeLabelsResponseProto\"*\n(CheckForDecommissioningNodesRequestProto\"c\n)CheckForDecommissioningNodesResponseProto\DC26\n\DC4decommissioningNodes\CAN\SOH \ETX(\v2\CAN.hadoop.yarn.NodeIdProto\"W\n\ETBNodeIdToLabelsNameProto\DC2(\n\ACKnodeId\CAN\SOH \SOH(\v2\CAN.hadoop.yarn.NodeIdProto\DC2\DC2\n\nnodeLabels\CAN\STX \ETX(\t\"4\n\DC1ActiveRMInfoProto\DC2\DC1\n\tclusterId\CAN\SOH \SOH(\t\DC2\f\n\EOTrmId\CAN\STX \SOH(\t*?\n\NAKDecommissionTypeProto\DC2\n\n\ACKNORMAL\DLE\SOH\DC2\f\n\bGRACEFUL\DLE\STX\DC2\f\n\bFORCEFUL\DLE\ETXBV\n\FSorg.apache.hadoop.yarn.protoB&YarnServerResourceManagerServiceProtosH\SOHP\NUL\128\SOH\NUL\136\SOH\SOH\144\SOH\NUL\160\SOH\SOHJ\213\CAN\n\b\n\NUL\DC2\EOT\CAN\NUL}\SOH\n\b\n\SOH\b\DC2\ETX\CAN\NUL5\n\190\a\n\EOT\b\231\a\NUL\DC2\ETX\CAN\NUL52\131\ACK*\n Licensed to the Apache Software Foundation (ASF) under one\n or more contributor license agreements.  See the NOTICE file\n distributed with this work for additional information\n regarding copyright ownership.  The ASF licenses this file\n to you under the Apache License, Version 2.0 (the\n \"License\"); you may not use this file except in compliance\n with the License.  You may obtain a copy of the License at\n\n     http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n2\170\SOH*\n These .proto interfaces are private and stable.\n Please see http://wiki.apache.org/hadoop/Compatibility\n for what changes are allowed for a *stable* .proto interface.\n\n\f\n\ENQ\b\231\a\NUL\STX\DC2\ETX\CAN\a\DC3\n\r\n\ACK\b\231\a\NUL\STX\NUL\DC2\ETX\CAN\a\DC3\n\SO\n\a\b\231\a\NUL\STX\NUL\SOH\DC2\ETX\CAN\a\DC3\n\f\n\ENQ\b\231\a\NUL\a\DC2\ETX\CAN\SYN4\n\b\n\SOH\b\DC2\ETX\EM\NULG\n\v\n\EOT\b\231\a\SOH\DC2\ETX\EM\NULG\n\f\n\ENQ\b\231\a\SOH\STX\DC2\ETX\EM\a\ESC\n\r\n\ACK\b\231\a\SOH\STX\NUL\DC2\ETX\EM\a\ESC\n\SO\n\a\b\231\a\SOH\STX\NUL\SOH\DC2\ETX\EM\a\ESC\n\f\n\ENQ\b\231\a\SOH\a\DC2\ETX\EM\RSF\n\b\n\SOH\b\DC2\ETX\SUB\NUL$\n\v\n\EOT\b\231\a\STX\DC2\ETX\SUB\NUL$\n\f\n\ENQ\b\231\a\STX\STX\DC2\ETX\SUB\a\FS\n\r\n\ACK\b\231\a\STX\STX\NUL\DC2\ETX\SUB\a\FS\n\SO\n\a\b\231\a\STX\STX\NUL\SOH\DC2\ETX\SUB\a\FS\n\f\n\ENQ\b\231\a\STX\ETX\DC2\ETX\SUB\US#\n\b\n\SOH\b\DC2\ETX\ESC\NUL,\n\v\n\EOT\b\231\a\ETX\DC2\ETX\ESC\NUL,\n\f\n\ENQ\b\231\a\ETX\STX\DC2\ETX\ESC\a$\n\r\n\ACK\b\231\a\ETX\STX\NUL\DC2\ETX\ESC\a$\n\SO\n\a\b\231\a\ETX\STX\NUL\SOH\DC2\ETX\ESC\a$\n\f\n\ENQ\b\231\a\ETX\ETX\DC2\ETX\ESC'+\n\b\n\SOH\STX\DC2\ETX\FS\b\DC3\n\t\n\STX\ETX\NUL\DC2\ETX\RS\a\SUB\n\n\n\STX\EOT\NUL\DC2\EOT \NUL!\SOH\n\n\n\ETX\EOT\NUL\SOH\DC2\ETX \b!\n\n\n\STX\EOT\SOH\DC2\EOT\"\NUL#\SOH\n\n\n\ETX\EOT\SOH\SOH\DC2\ETX\"\b\"\n\n\n\STX\EOT\STX\DC2\EOT%\NUL'\SOH\n\n\n\ETX\EOT\STX\SOH\DC2\ETX%\b \n\v\n\EOT\EOT\STX\STX\NUL\DC2\ETX&\STXI\n\f\n\ENQ\EOT\STX\STX\NUL\EOT\DC2\ETX&\STX\n\n\f\n\ENQ\EOT\STX\STX\NUL\ACK\DC2\ETX&\v \n\f\n\ENQ\EOT\STX\STX\NUL\SOH\DC2\ETX&!1\n\f\n\ENQ\EOT\STX\STX\NUL\ETX\DC2\ETX&45\n\f\n\ENQ\EOT\STX\STX\NUL\b\DC2\ETX&6H\n\f\n\ENQ\EOT\STX\STX\NUL\a\DC2\ETX&AG\n\n\n\STX\EOT\ETX\DC2\EOT(\NUL)\SOH\n\n\n\ETX\EOT\ETX\SOH\DC2\ETX(\b!\n\n\n\STX\EOT\EOT\DC2\EOT+\NUL,\SOH\n\n\n\ETX\EOT\EOT\SOH\DC2\ETX+\b7\n\n\n\STX\EOT\ENQ\DC2\EOT-\NUL.\SOH\n\n\n\ETX\EOT\ENQ\SOH\DC2\ETX-\b8\n\n\n\STX\EOT\ACK\DC2\EOT0\NUL1\SOH\n\n\n\ETX\EOT\ACK\SOH\DC2\ETX0\b/\n\n\n\STX\EOT\a\DC2\EOT2\NUL3\SOH\n\n\n\ETX\EOT\a\SOH\DC2\ETX2\b0\n\n\n\STX\EOT\b\DC2\EOT5\NUL6\SOH\n\n\n\ETX\EOT\b\SOH\DC2\ETX5\b$\n\n\n\STX\EOT\t\DC2\EOT7\NUL8\SOH\n\n\n\ETX\EOT\t\SOH\DC2\ETX7\b%\n\n\n\STX\EOT\n\DC2\EOT:\NUL;\SOH\n\n\n\ETX\EOT\n\SOH\DC2\ETX:\b&\n\n\n\STX\EOT\v\DC2\EOT<\NUL=\SOH\n\n\n\ETX\EOT\v\SOH\DC2\ETX<\b'\n\n\n\STX\EOT\f\DC2\EOT?\NULA\SOH\n\n\n\ETX\EOT\f\SOH\DC2\ETX?\b$\n\v\n\EOT\EOT\f\STX\NUL\DC2\ETX@\STX\ESC\n\f\n\ENQ\EOT\f\STX\NUL\EOT\DC2\ETX@\STX\n\n\f\n\ENQ\EOT\f\STX\NUL\ENQ\DC2\ETX@\v\DC1\n\f\n\ENQ\EOT\f\STX\NUL\SOH\DC2\ETX@\DC2\SYN\n\f\n\ENQ\EOT\f\STX\NUL\ETX\DC2\ETX@\EM\SUB\n\n\n\STX\EOT\r\DC2\EOTC\NULE\SOH\n\n\n\ETX\EOT\r\SOH\DC2\ETXC\b%\n\v\n\EOT\EOT\r\STX\NUL\DC2\ETXD\STX\GS\n\f\n\ENQ\EOT\r\STX\NUL\EOT\DC2\ETXD\STX\n\n\f\n\ENQ\EOT\r\STX\NUL\ENQ\DC2\ETXD\v\DC1\n\f\n\ENQ\EOT\r\STX\NUL\SOH\DC2\ETXD\DC2\CAN\n\f\n\ENQ\EOT\r\STX\NUL\ETX\DC2\ETXD\ESC\FS\n\n\n\STX\EOT\SO\DC2\EOTG\NULI\SOH\n\n\n\ETX\EOT\SO\SOH\DC2\ETXG\b&\n\v\n\EOT\EOT\SO\STX\NUL\DC2\ETXH\STX6\n\f\n\ENQ\EOT\SO\STX\NUL\EOT\DC2\ETXH\STX\n\n\f\n\ENQ\EOT\SO\STX\NUL\ACK\DC2\ETXH\v\US\n\f\n\ENQ\EOT\SO\STX\NUL\SOH\DC2\ETXH 1\n\f\n\ENQ\EOT\SO\STX\NUL\ETX\DC2\ETXH45\n\n\n\STX\EOT\SI\DC2\EOTK\NULL\SOH\n\n\n\ETX\EOT\SI\SOH\DC2\ETXK\b'\n\n\n\STX\EOT\DLE\DC2\EOTN\NULP\SOH\n\n\n\ETX\EOT\DLE\SOH\DC2\ETXN\b*\n\v\n\EOT\EOT\DLE\STX\NUL\DC2\ETXO\STX)\n\f\n\ENQ\EOT\DLE\STX\NUL\EOT\DC2\ETXO\STX\n\n\f\n\ENQ\EOT\DLE\STX\NUL\ACK\DC2\ETXO\v\EM\n\f\n\ENQ\EOT\DLE\STX\NUL\SOH\DC2\ETXO\SUB$\n\f\n\ENQ\EOT\DLE\STX\NUL\ETX\DC2\ETXO'(\n\n\n\STX\EOT\DC1\DC2\EOTR\NULS\SOH\n\n\n\ETX\EOT\DC1\SOH\DC2\ETXR\b+\n\n\n\STX\EOT\DC2\DC2\EOTU\NULW\SOH\n\n\n\ETX\EOT\DC2\SOH\DC2\ETXU\b/\n\v\n\EOT\EOT\DC2\STX\NUL\DC2\ETXV\STX!\n\f\n\ENQ\EOT\DC2\STX\NUL\EOT\DC2\ETXV\STX\n\n\f\n\ENQ\EOT\DC2\STX\NUL\ENQ\DC2\ETXV\v\DC1\n\f\n\ENQ\EOT\DC2\STX\NUL\SOH\DC2\ETXV\DC2\FS\n\f\n\ENQ\EOT\DC2\STX\NUL\ETX\DC2\ETXV\US \n\n\n\STX\EOT\DC3\DC2\EOTY\NULZ\SOH\n\n\n\ETX\EOT\DC3\SOH\DC2\ETXY\b0\n\n\n\STX\EOT\DC4\DC2\EOT\\\NUL^\SOH\n\n\n\ETX\EOT\DC4\SOH\DC2\ETX\\\b'\n\v\n\EOT\EOT\DC4\STX\NUL\DC2\ETX]\STX4\n\f\n\ENQ\EOT\DC4\STX\NUL\EOT\DC2\ETX]\STX\n\n\f\n\ENQ\EOT\DC4\STX\NUL\ACK\DC2\ETX]\v\"\n\f\n\ENQ\EOT\DC4\STX\NUL\SOH\DC2\ETX]#/\n\f\n\ENQ\EOT\DC4\STX\NUL\ETX\DC2\ETX]23\n\n\n\STX\EOT\NAK\DC2\EOT`\NULb\SOH\n\n\n\ETX\EOT\NAK\SOH\DC2\ETX`\b(\n\n\n\STX\EOT\SYN\DC2\EOTd\NULe\SOH\n\n\n\ETX\EOT\SYN\SOH\DC2\ETXd\b%\n\n\n\STX\EOT\ETB\DC2\EOTg\NULh\SOH\n\n\n\ETX\EOT\ETB\SOH\DC2\ETXg\b0\n\n\n\STX\EOT\CAN\DC2\EOTi\NULk\SOH\n\n\n\ETX\EOT\CAN\SOH\DC2\ETXi\b1\n\v\n\EOT\EOT\CAN\STX\NUL\DC2\ETXj\STX0\n\f\n\ENQ\EOT\CAN\STX\NUL\EOT\DC2\ETXj\STX\n\n\f\n\ENQ\EOT\CAN\STX\NUL\ACK\DC2\ETXj\v\SYN\n\f\n\ENQ\EOT\CAN\STX\NUL\SOH\DC2\ETXj\ETB+\n\f\n\ENQ\EOT\CAN\STX\NUL\ETX\DC2\ETXj./\n\n\n\STX\EOT\EM\DC2\EOTm\NULp\SOH\n\n\n\ETX\EOT\EM\SOH\DC2\ETXm\b\US\n\v\n\EOT\EOT\EM\STX\NUL\DC2\ETXn\STX\"\n\f\n\ENQ\EOT\EM\STX\NUL\EOT\DC2\ETXn\STX\n\n\f\n\ENQ\EOT\EM\STX\NUL\ACK\DC2\ETXn\v\SYN\n\f\n\ENQ\EOT\EM\STX\NUL\SOH\DC2\ETXn\ETB\GS\n\f\n\ENQ\EOT\EM\STX\NUL\ETX\DC2\ETXn !\n\v\n\EOT\EOT\EM\STX\SOH\DC2\ETXo\STX!\n\f\n\ENQ\EOT\EM\STX\SOH\EOT\DC2\ETXo\STX\n\n\f\n\ENQ\EOT\EM\STX\SOH\ENQ\DC2\ETXo\v\DC1\n\f\n\ENQ\EOT\EM\STX\SOH\SOH\DC2\ETXo\DC2\FS\n\f\n\ENQ\EOT\EM\STX\SOH\ETX\DC2\ETXo\US \n\n\n\STX\ENQ\NUL\DC2\EOTr\NULv\SOH\n\n\n\ETX\ENQ\NUL\SOH\DC2\ETXr\ENQ\SUB\n\v\n\EOT\ENQ\NUL\STX\NUL\DC2\ETXs\STX\r\n\f\n\ENQ\ENQ\NUL\STX\NUL\SOH\DC2\ETXs\STX\b\n\f\n\ENQ\ENQ\NUL\STX\NUL\STX\DC2\ETXs\v\f\n\v\n\EOT\ENQ\NUL\STX\SOH\DC2\ETXt\STX\SI\n\f\n\ENQ\ENQ\NUL\STX\SOH\SOH\DC2\ETXt\STX\n\n\f\n\ENQ\ENQ\NUL\STX\SOH\STX\DC2\ETXt\r\SO\n\v\n\EOT\ENQ\NUL\STX\STX\DC2\ETXu\STX\SI\n\f\n\ENQ\ENQ\NUL\STX\STX\SOH\DC2\ETXu\STX\n\n\f\n\ENQ\ENQ\NUL\STX\STX\STX\DC2\ETXu\r\SO\n\208\SOH\n\STX\EOT\SUB\DC2\EOTz\NUL}\SOH\SUB\195\SOH////////////////////////////////////////////////////////////////\n/////////// RM Failover related records ////////////////////////\n////////////////////////////////////////////////////////////////\n\n\n\n\ETX\EOT\SUB\SOH\DC2\ETXz\b\EM\n\v\n\EOT\EOT\SUB\STX\NUL\DC2\ETX{\STX \n\f\n\ENQ\EOT\SUB\STX\NUL\EOT\DC2\ETX{\STX\n\n\f\n\ENQ\EOT\SUB\STX\NUL\ENQ\DC2\ETX{\v\DC1\n\f\n\ENQ\EOT\SUB\STX\NUL\SOH\DC2\ETX{\DC2\ESC\n\f\n\ENQ\EOT\SUB\STX\NUL\ETX\DC2\ETX{\RS\US\n\v\n\EOT\EOT\SUB\STX\SOH\DC2\ETX|\STX\ESC\n\f\n\ENQ\EOT\SUB\STX\SOH\EOT\DC2\ETX|\STX\n\n\f\n\ENQ\EOT\SUB\STX\SOH\ENQ\DC2\ETX|\v\DC1\n\f\n\ENQ\EOT\SUB\STX\SOH\SOH\DC2\ETX|\DC2\SYN\n\f\n\ENQ\EOT\SUB\STX\SOH\ETX\DC2\ETX|\EM\SUB")