{-# LANGUAGE BangPatterns, DataKinds, DeriveDataTypeable, FlexibleInstances, MultiParamTypeClasses #-}
{-# OPTIONS_GHC -fno-warn-unused-imports #-}
module Hadoop.Protos.YarnServerTimelineServerRecoveryProtos (protoInfo, fileDescriptorProto) where
import Prelude ((+), (/))
import qualified Prelude as Prelude'
import qualified Data.Typeable as Prelude'
import qualified Data.Data as Prelude'
import qualified Text.ProtocolBuffers.Header as P'
import Text.DescriptorProtos.FileDescriptorProto (FileDescriptorProto)
import Text.ProtocolBuffers.Reflections (ProtoInfo)
import qualified Text.ProtocolBuffers.WireMessage as P' (wireGet,getFromBS)
 
protoInfo :: ProtoInfo
protoInfo
 = Prelude'.read
    "ProtoInfo {protoMod = ProtoName {protobufName = FIName \".hadoop.yarn\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [], baseName = MName \"YarnServerTimelineServerRecoveryProtos\"}, protoFilePath = [\"Hadoop\",\"Protos\",\"YarnServerTimelineServerRecoveryProtos.hs\"], protoSource = \"yarn_server_timelineserver_recovery.proto\", extensionKeys = fromList [], messages = [DescriptorInfo {descName = ProtoName {protobufName = FIName \".hadoop.yarn.TimelineDelegationTokenIdentifierDataProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"YarnServerTimelineServerRecoveryProtos\"], baseName = MName \"TimelineDelegationTokenIdentifierDataProto\"}, descFilePath = [\"Hadoop\",\"Protos\",\"YarnServerTimelineServerRecoveryProtos\",\"TimelineDelegationTokenIdentifierDataProto.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.yarn.TimelineDelegationTokenIdentifierDataProto.token_identifier\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"YarnServerTimelineServerRecoveryProtos\",MName \"TimelineDelegationTokenIdentifierDataProto\"], baseName' = FName \"token_identifier\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".hadoop.yarn.YARNDelegationTokenIdentifierProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"YarnSecurityTokenProtos\"], baseName = MName \"YARNDelegationTokenIdentifierProto\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.yarn.TimelineDelegationTokenIdentifierDataProto.renewDate\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"YarnServerTimelineServerRecoveryProtos\",MName \"TimelineDelegationTokenIdentifierDataProto\"], baseName' = FName \"renewDate\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 16}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 3}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False}], enums = [], oneofs = [], services = [], knownKeyMap = fromList []}"
 
fileDescriptorProto :: FileDescriptorProto
fileDescriptorProto
 = P'.getFromBS (P'.wireGet 11)
    (P'.pack
      "\205\ACK\n)yarn_server_timelineserver_recovery.proto\DC2\vhadoop.yarn\SUB\EMyarn_security_token.proto\"\138\SOH\n*TimelineDelegationTokenIdentifierDataProto\DC2I\n\DLEtoken_identifier\CAN\SOH \SOH(\v2/.hadoop.yarn.YARNDelegationTokenIdentifierProto\DC2\DC1\n\trenewDate\CAN\STX \SOH(\ETXB_\n\FSorg.apache.hadoop.yarn.protoB&YarnServerTimelineServerRecoveryProtosH\SOHP\NUL\128\SOH\NUL\136\SOH\SOH\144\SOH\NUL\160\SOH\SOH\184\SOH\NUL\216\SOH\NUL\248\SOH\NULJ\137\EOT\n\b\n\NUL\DC2\EOT\DC2\NUL\GS\SOH\n\b\n\SOH\b\DC2\ETX\DC2\NUL5\n\v\n\EOT\b\231\a\NUL\DC2\ETX\DC2\NUL5\n\f\n\ENQ\b\231\a\NUL\STX\DC2\ETX\DC2\a\DC3\n\r\n\ACK\b\231\a\NUL\STX\NUL\DC2\ETX\DC2\a\DC3\n\SO\n\a\b\231\a\NUL\STX\NUL\SOH\DC2\ETX\DC2\a\DC3\n\f\n\ENQ\b\231\a\NUL\a\DC2\ETX\DC2\SYN4\n\b\n\SOH\b\DC2\ETX\DC3\NULG\n\v\n\EOT\b\231\a\SOH\DC2\ETX\DC3\NULG\n\f\n\ENQ\b\231\a\SOH\STX\DC2\ETX\DC3\a\ESC\n\r\n\ACK\b\231\a\SOH\STX\NUL\DC2\ETX\DC3\a\ESC\n\SO\n\a\b\231\a\SOH\STX\NUL\SOH\DC2\ETX\DC3\a\ESC\n\f\n\ENQ\b\231\a\SOH\a\DC2\ETX\DC3\RSF\n\b\n\SOH\b\DC2\ETX\DC4\NUL$\n\v\n\EOT\b\231\a\STX\DC2\ETX\DC4\NUL$\n\f\n\ENQ\b\231\a\STX\STX\DC2\ETX\DC4\a\FS\n\r\n\ACK\b\231\a\STX\STX\NUL\DC2\ETX\DC4\a\FS\n\SO\n\a\b\231\a\STX\STX\NUL\SOH\DC2\ETX\DC4\a\FS\n\f\n\ENQ\b\231\a\STX\ETX\DC2\ETX\DC4\US#\n\b\n\SOH\b\DC2\ETX\NAK\NUL,\n\v\n\EOT\b\231\a\ETX\DC2\ETX\NAK\NUL,\n\f\n\ENQ\b\231\a\ETX\STX\DC2\ETX\NAK\a$\n\r\n\ACK\b\231\a\ETX\STX\NUL\DC2\ETX\NAK\a$\n\SO\n\a\b\231\a\ETX\STX\NUL\SOH\DC2\ETX\NAK\a$\n\f\n\ENQ\b\231\a\ETX\ETX\DC2\ETX\NAK'+\n\b\n\SOH\STX\DC2\ETX\SYN\b\DC3\n\t\n\STX\ETX\NUL\DC2\ETX\CAN\a\"\n\n\n\STX\EOT\NUL\DC2\EOT\SUB\NUL\GS\SOH\n\n\n\ETX\EOT\NUL\SOH\DC2\ETX\SUB\b2\n\v\n\EOT\EOT\NUL\STX\NUL\DC2\ETX\ESC\STXC\n\f\n\ENQ\EOT\NUL\STX\NUL\EOT\DC2\ETX\ESC\STX\n\n\f\n\ENQ\EOT\NUL\STX\NUL\ACK\DC2\ETX\ESC\v-\n\f\n\ENQ\EOT\NUL\STX\NUL\SOH\DC2\ETX\ESC.>\n\f\n\ENQ\EOT\NUL\STX\NUL\ETX\DC2\ETX\ESCAB\n\v\n\EOT\EOT\NUL\STX\SOH\DC2\ETX\FS\STX\US\n\f\n\ENQ\EOT\NUL\STX\SOH\EOT\DC2\ETX\FS\STX\n\n\f\n\ENQ\EOT\NUL\STX\SOH\ENQ\DC2\ETX\FS\v\DLE\n\f\n\ENQ\EOT\NUL\STX\SOH\SOH\DC2\ETX\FS\DC1\SUB\n\f\n\ENQ\EOT\NUL\STX\SOH\ETX\DC2\ETX\FS\GS\RS")