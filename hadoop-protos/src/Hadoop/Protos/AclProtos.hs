{-# LANGUAGE BangPatterns, DataKinds, DeriveDataTypeable, FlexibleInstances, MultiParamTypeClasses #-}
{-# OPTIONS_GHC -fno-warn-unused-imports #-}
module Hadoop.Protos.AclProtos (protoInfo, fileDescriptorProto) where
import Prelude ((+), (/))
import qualified Prelude as Prelude'
import qualified Data.Typeable as Prelude'
import qualified Data.Data as Prelude'
import qualified Text.ProtocolBuffers.Header as P'
import Text.DescriptorProtos.FileDescriptorProto (FileDescriptorProto)
import Text.ProtocolBuffers.Reflections (ProtoInfo)
import qualified Text.ProtocolBuffers.WireMessage as P' (wireGet,getFromBS)
 
protoInfo :: ProtoInfo
protoInfo
 = Prelude'.read
    "ProtoInfo {protoMod = ProtoName {protobufName = FIName \".hadoop.hdfs\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [], baseName = MName \"AclProtos\"}, protoFilePath = [\"Hadoop\",\"Protos\",\"AclProtos.hs\"], protoSource = \"acl.proto\", extensionKeys = fromList [], messages = [DescriptorInfo {descName = ProtoName {protobufName = FIName \".hadoop.hdfs.AclEntryProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"AclProtos\"], baseName = MName \"AclEntryProto\"}, descFilePath = [\"Hadoop\",\"Protos\",\"AclProtos\",\"AclEntryProto.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.AclEntryProto.type\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"AclProtos\",MName \"AclEntryProto\"], baseName' = FName \"type'\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 8}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 14}, typeName = Just (ProtoName {protobufName = FIName \".hadoop.hdfs.AclEntryProto.AclEntryTypeProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"AclProtos\",MName \"AclEntryProto\"], baseName = MName \"AclEntryTypeProto\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.AclEntryProto.scope\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"AclProtos\",MName \"AclEntryProto\"], baseName' = FName \"scope\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 16}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 14}, typeName = Just (ProtoName {protobufName = FIName \".hadoop.hdfs.AclEntryProto.AclEntryScopeProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"AclProtos\",MName \"AclEntryProto\"], baseName = MName \"AclEntryScopeProto\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.AclEntryProto.permissions\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"AclProtos\",MName \"AclEntryProto\"], baseName' = FName \"permissions\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 24}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 14}, typeName = Just (ProtoName {protobufName = FIName \".hadoop.hdfs.AclEntryProto.FsActionProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"AclProtos\",MName \"AclEntryProto\"], baseName = MName \"FsActionProto\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.AclEntryProto.name\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"AclProtos\",MName \"AclEntryProto\"], baseName' = FName \"name\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 4}, wireTag = WireTag {getWireTag = 34}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".hadoop.hdfs.AclStatusProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"AclProtos\"], baseName = MName \"AclStatusProto\"}, descFilePath = [\"Hadoop\",\"Protos\",\"AclProtos\",\"AclStatusProto.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.AclStatusProto.owner\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"AclProtos\",MName \"AclStatusProto\"], baseName' = FName \"owner\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.AclStatusProto.group\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"AclProtos\",MName \"AclStatusProto\"], baseName' = FName \"group\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 18}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.AclStatusProto.sticky\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"AclProtos\",MName \"AclStatusProto\"], baseName' = FName \"sticky\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 24}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 8}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.AclStatusProto.entries\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"AclProtos\",MName \"AclStatusProto\"], baseName' = FName \"entries\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 4}, wireTag = WireTag {getWireTag = 34}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = True, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".hadoop.hdfs.AclEntryProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"AclProtos\"], baseName = MName \"AclEntryProto\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.AclStatusProto.permission\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"AclProtos\",MName \"AclStatusProto\"], baseName' = FName \"permission\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 5}, wireTag = WireTag {getWireTag = 42}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".hadoop.hdfs.FsPermissionProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"HdfsProtos\"], baseName = MName \"FsPermissionProto\"}), hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".hadoop.hdfs.ModifyAclEntriesRequestProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"AclProtos\"], baseName = MName \"ModifyAclEntriesRequestProto\"}, descFilePath = [\"Hadoop\",\"Protos\",\"AclProtos\",\"ModifyAclEntriesRequestProto.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.ModifyAclEntriesRequestProto.src\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"AclProtos\",MName \"ModifyAclEntriesRequestProto\"], baseName' = FName \"src\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.ModifyAclEntriesRequestProto.aclSpec\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"AclProtos\",MName \"ModifyAclEntriesRequestProto\"], baseName' = FName \"aclSpec\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 18}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = True, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".hadoop.hdfs.AclEntryProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"AclProtos\"], baseName = MName \"AclEntryProto\"}), hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".hadoop.hdfs.ModifyAclEntriesResponseProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"AclProtos\"], baseName = MName \"ModifyAclEntriesResponseProto\"}, descFilePath = [\"Hadoop\",\"Protos\",\"AclProtos\",\"ModifyAclEntriesResponseProto.hs\"], isGroup = False, fields = fromList [], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".hadoop.hdfs.RemoveAclRequestProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"AclProtos\"], baseName = MName \"RemoveAclRequestProto\"}, descFilePath = [\"Hadoop\",\"Protos\",\"AclProtos\",\"RemoveAclRequestProto.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.RemoveAclRequestProto.src\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"AclProtos\",MName \"RemoveAclRequestProto\"], baseName' = FName \"src\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".hadoop.hdfs.RemoveAclResponseProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"AclProtos\"], baseName = MName \"RemoveAclResponseProto\"}, descFilePath = [\"Hadoop\",\"Protos\",\"AclProtos\",\"RemoveAclResponseProto.hs\"], isGroup = False, fields = fromList [], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".hadoop.hdfs.RemoveAclEntriesRequestProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"AclProtos\"], baseName = MName \"RemoveAclEntriesRequestProto\"}, descFilePath = [\"Hadoop\",\"Protos\",\"AclProtos\",\"RemoveAclEntriesRequestProto.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.RemoveAclEntriesRequestProto.src\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"AclProtos\",MName \"RemoveAclEntriesRequestProto\"], baseName' = FName \"src\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.RemoveAclEntriesRequestProto.aclSpec\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"AclProtos\",MName \"RemoveAclEntriesRequestProto\"], baseName' = FName \"aclSpec\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 18}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = True, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".hadoop.hdfs.AclEntryProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"AclProtos\"], baseName = MName \"AclEntryProto\"}), hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".hadoop.hdfs.RemoveAclEntriesResponseProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"AclProtos\"], baseName = MName \"RemoveAclEntriesResponseProto\"}, descFilePath = [\"Hadoop\",\"Protos\",\"AclProtos\",\"RemoveAclEntriesResponseProto.hs\"], isGroup = False, fields = fromList [], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".hadoop.hdfs.RemoveDefaultAclRequestProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"AclProtos\"], baseName = MName \"RemoveDefaultAclRequestProto\"}, descFilePath = [\"Hadoop\",\"Protos\",\"AclProtos\",\"RemoveDefaultAclRequestProto.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.RemoveDefaultAclRequestProto.src\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"AclProtos\",MName \"RemoveDefaultAclRequestProto\"], baseName' = FName \"src\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".hadoop.hdfs.RemoveDefaultAclResponseProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"AclProtos\"], baseName = MName \"RemoveDefaultAclResponseProto\"}, descFilePath = [\"Hadoop\",\"Protos\",\"AclProtos\",\"RemoveDefaultAclResponseProto.hs\"], isGroup = False, fields = fromList [], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".hadoop.hdfs.SetAclRequestProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"AclProtos\"], baseName = MName \"SetAclRequestProto\"}, descFilePath = [\"Hadoop\",\"Protos\",\"AclProtos\",\"SetAclRequestProto.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.SetAclRequestProto.src\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"AclProtos\",MName \"SetAclRequestProto\"], baseName' = FName \"src\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.SetAclRequestProto.aclSpec\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"AclProtos\",MName \"SetAclRequestProto\"], baseName' = FName \"aclSpec\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 18}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = True, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".hadoop.hdfs.AclEntryProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"AclProtos\"], baseName = MName \"AclEntryProto\"}), hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".hadoop.hdfs.SetAclResponseProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"AclProtos\"], baseName = MName \"SetAclResponseProto\"}, descFilePath = [\"Hadoop\",\"Protos\",\"AclProtos\",\"SetAclResponseProto.hs\"], isGroup = False, fields = fromList [], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".hadoop.hdfs.GetAclStatusRequestProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"AclProtos\"], baseName = MName \"GetAclStatusRequestProto\"}, descFilePath = [\"Hadoop\",\"Protos\",\"AclProtos\",\"GetAclStatusRequestProto.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.GetAclStatusRequestProto.src\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"AclProtos\",MName \"GetAclStatusRequestProto\"], baseName' = FName \"src\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".hadoop.hdfs.GetAclStatusResponseProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"AclProtos\"], baseName = MName \"GetAclStatusResponseProto\"}, descFilePath = [\"Hadoop\",\"Protos\",\"AclProtos\",\"GetAclStatusResponseProto.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.GetAclStatusResponseProto.result\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"AclProtos\",MName \"GetAclStatusResponseProto\"], baseName' = FName \"result\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".hadoop.hdfs.AclStatusProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"AclProtos\"], baseName = MName \"AclStatusProto\"}), hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False}], enums = [EnumInfo {enumName = ProtoName {protobufName = FIName \".hadoop.hdfs.AclEntryProto.AclEntryScopeProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"AclProtos\",MName \"AclEntryProto\"], baseName = MName \"AclEntryScopeProto\"}, enumFilePath = [\"Hadoop\",\"Protos\",\"AclProtos\",\"AclEntryProto\",\"AclEntryScopeProto.hs\"], enumValues = [(EnumCode {getEnumCode = 0},\"ACCESS\"),(EnumCode {getEnumCode = 1},\"DEFAULT\")]},EnumInfo {enumName = ProtoName {protobufName = FIName \".hadoop.hdfs.AclEntryProto.AclEntryTypeProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"AclProtos\",MName \"AclEntryProto\"], baseName = MName \"AclEntryTypeProto\"}, enumFilePath = [\"Hadoop\",\"Protos\",\"AclProtos\",\"AclEntryProto\",\"AclEntryTypeProto.hs\"], enumValues = [(EnumCode {getEnumCode = 0},\"USER\"),(EnumCode {getEnumCode = 1},\"GROUP\"),(EnumCode {getEnumCode = 2},\"MASK\"),(EnumCode {getEnumCode = 3},\"OTHER\")]},EnumInfo {enumName = ProtoName {protobufName = FIName \".hadoop.hdfs.AclEntryProto.FsActionProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"AclProtos\",MName \"AclEntryProto\"], baseName = MName \"FsActionProto\"}, enumFilePath = [\"Hadoop\",\"Protos\",\"AclProtos\",\"AclEntryProto\",\"FsActionProto.hs\"], enumValues = [(EnumCode {getEnumCode = 0},\"NONE\"),(EnumCode {getEnumCode = 1},\"EXECUTE\"),(EnumCode {getEnumCode = 2},\"WRITE\"),(EnumCode {getEnumCode = 3},\"WRITE_EXECUTE\"),(EnumCode {getEnumCode = 4},\"READ\"),(EnumCode {getEnumCode = 5},\"READ_EXECUTE\"),(EnumCode {getEnumCode = 6},\"READ_WRITE\"),(EnumCode {getEnumCode = 7},\"PERM_ALL\")]}], oneofs = [], services = [], knownKeyMap = fromList []}"
 
fileDescriptorProto :: FileDescriptorProto
fileDescriptorProto
 = P'.getFromBS (P'.wireGet 11)
    (P'.pack
      "\165\US\n\tacl.proto\DC2\vhadoop.hdfs\SUB\nhdfs.proto\"\196\ETX\n\rAclEntryProto\DC2:\n\EOTtype\CAN\SOH \STX(\SO2,.hadoop.hdfs.AclEntryProto.AclEntryTypeProto\DC2<\n\ENQscope\CAN\STX \STX(\SO2-.hadoop.hdfs.AclEntryProto.AclEntryScopeProto\DC2=\n\vpermissions\CAN\ETX \STX(\SO2(.hadoop.hdfs.AclEntryProto.FsActionProto\DC2\f\n\EOTname\CAN\EOT \SOH(\t\"-\n\DC2AclEntryScopeProto\DC2\n\n\ACKACCESS\DLE\NUL\DC2\v\n\aDEFAULT\DLE\SOH\"=\n\DC1AclEntryTypeProto\DC2\b\n\EOTUSER\DLE\NUL\DC2\t\n\ENQGROUP\DLE\SOH\DC2\b\n\EOTMASK\DLE\STX\DC2\t\n\ENQOTHER\DLE\ETX\"~\n\rFsActionProto\DC2\b\n\EOTNONE\DLE\NUL\DC2\v\n\aEXECUTE\DLE\SOH\DC2\t\n\ENQWRITE\DLE\STX\DC2\DC1\n\rWRITE_EXECUTE\DLE\ETX\DC2\b\n\EOTREAD\DLE\EOT\DC2\DLE\n\fREAD_EXECUTE\DLE\ENQ\DC2\SO\n\nREAD_WRITE\DLE\ACK\DC2\f\n\bPERM_ALL\DLE\a\"\159\SOH\n\SOAclStatusProto\DC2\r\n\ENQowner\CAN\SOH \STX(\t\DC2\r\n\ENQgroup\CAN\STX \STX(\t\DC2\SO\n\ACKsticky\CAN\ETX \STX(\b\DC2+\n\aentries\CAN\EOT \ETX(\v2\SUB.hadoop.hdfs.AclEntryProto\DC22\n\npermission\CAN\ENQ \SOH(\v2\RS.hadoop.hdfs.FsPermissionProto\"X\n\FSModifyAclEntriesRequestProto\DC2\v\n\ETXsrc\CAN\SOH \STX(\t\DC2+\n\aaclSpec\CAN\STX \ETX(\v2\SUB.hadoop.hdfs.AclEntryProto\"\US\n\GSModifyAclEntriesResponseProto\"$\n\NAKRemoveAclRequestProto\DC2\v\n\ETXsrc\CAN\SOH \STX(\t\"\CAN\n\SYNRemoveAclResponseProto\"X\n\FSRemoveAclEntriesRequestProto\DC2\v\n\ETXsrc\CAN\SOH \STX(\t\DC2+\n\aaclSpec\CAN\STX \ETX(\v2\SUB.hadoop.hdfs.AclEntryProto\"\US\n\GSRemoveAclEntriesResponseProto\"+\n\FSRemoveDefaultAclRequestProto\DC2\v\n\ETXsrc\CAN\SOH \STX(\t\"\US\n\GSRemoveDefaultAclResponseProto\"N\n\DC2SetAclRequestProto\DC2\v\n\ETXsrc\CAN\SOH \STX(\t\DC2+\n\aaclSpec\CAN\STX \ETX(\v2\SUB.hadoop.hdfs.AclEntryProto\"\NAK\n\DC3SetAclResponseProto\"'\n\CANGetAclStatusRequestProto\DC2\v\n\ETXsrc\CAN\SOH \STX(\t\"H\n\EMGetAclStatusResponseProto\DC2+\n\ACKresult\CAN\SOH \STX(\v2\ESC.hadoop.hdfs.AclStatusProtoBK\n%org.apache.hadoop.hdfs.protocol.protoB\tAclProtosH\SOHP\NUL\128\SOH\NUL\136\SOH\NUL\144\SOH\NUL\160\SOH\SOH\184\SOH\NUL\216\SOH\NUL\248\SOH\NULJ\234\DC4\n\b\n\NUL\DC2\EOT\DC2\NULk\SOH\n\b\n\SOH\b\DC2\ETX\DC2\NUL>\n\v\n\EOT\b\231\a\NUL\DC2\ETX\DC2\NUL>\n\f\n\ENQ\b\231\a\NUL\STX\DC2\ETX\DC2\a\DC3\n\r\n\ACK\b\231\a\NUL\STX\NUL\DC2\ETX\DC2\a\DC3\n\SO\n\a\b\231\a\NUL\STX\NUL\SOH\DC2\ETX\DC2\a\DC3\n\f\n\ENQ\b\231\a\NUL\a\DC2\ETX\DC2\SYN=\n\b\n\SOH\b\DC2\ETX\DC3\NUL*\n\v\n\EOT\b\231\a\SOH\DC2\ETX\DC3\NUL*\n\f\n\ENQ\b\231\a\SOH\STX\DC2\ETX\DC3\a\ESC\n\r\n\ACK\b\231\a\SOH\STX\NUL\DC2\ETX\DC3\a\ESC\n\SO\n\a\b\231\a\SOH\STX\NUL\SOH\DC2\ETX\DC3\a\ESC\n\f\n\ENQ\b\231\a\SOH\a\DC2\ETX\DC3\RS)\n\b\n\SOH\b\DC2\ETX\DC4\NUL,\n\v\n\EOT\b\231\a\STX\DC2\ETX\DC4\NUL,\n\f\n\ENQ\b\231\a\STX\STX\DC2\ETX\DC4\a$\n\r\n\ACK\b\231\a\STX\STX\NUL\DC2\ETX\DC4\a$\n\SO\n\a\b\231\a\STX\STX\NUL\SOH\DC2\ETX\DC4\a$\n\f\n\ENQ\b\231\a\STX\ETX\DC2\ETX\DC4'+\n\b\n\SOH\STX\DC2\ETX\NAK\b\DC3\n\t\n\STX\ETX\NUL\DC2\ETX\ETB\a\DC3\n\n\n\STX\EOT\NUL\DC2\EOT\EM\NUL5\SOH\n\n\n\ETX\EOT\NUL\SOH\DC2\ETX\EM\b\NAK\n\f\n\EOT\EOT\NUL\EOT\NUL\DC2\EOT\SUB\STX\GS\ETX\n\f\n\ENQ\EOT\NUL\EOT\NUL\SOH\DC2\ETX\SUB\a\EM\n\r\n\ACK\EOT\NUL\EOT\NUL\STX\NUL\DC2\ETX\ESC\EOT\DC2\n\SO\n\a\EOT\NUL\EOT\NUL\STX\NUL\SOH\DC2\ETX\ESC\EOT\n\n\SO\n\a\EOT\NUL\EOT\NUL\STX\NUL\STX\DC2\ETX\ESC\SO\DC1\n\r\n\ACK\EOT\NUL\EOT\NUL\STX\SOH\DC2\ETX\FS\EOT\DC2\n\SO\n\a\EOT\NUL\EOT\NUL\STX\SOH\SOH\DC2\ETX\FS\EOT\v\n\SO\n\a\EOT\NUL\EOT\NUL\STX\SOH\STX\DC2\ETX\FS\SO\DC1\n\f\n\EOT\EOT\NUL\EOT\SOH\DC2\EOT\US\STX$\ETX\n\f\n\ENQ\EOT\NUL\EOT\SOH\SOH\DC2\ETX\US\a\CAN\n\r\n\ACK\EOT\NUL\EOT\SOH\STX\NUL\DC2\ETX \EOT\DLE\n\SO\n\a\EOT\NUL\EOT\SOH\STX\NUL\SOH\DC2\ETX \EOT\b\n\SO\n\a\EOT\NUL\EOT\SOH\STX\NUL\STX\DC2\ETX \f\SI\n\r\n\ACK\EOT\NUL\EOT\SOH\STX\SOH\DC2\ETX!\EOT\DLE\n\SO\n\a\EOT\NUL\EOT\SOH\STX\SOH\SOH\DC2\ETX!\EOT\t\n\SO\n\a\EOT\NUL\EOT\SOH\STX\SOH\STX\DC2\ETX!\f\SI\n\r\n\ACK\EOT\NUL\EOT\SOH\STX\STX\DC2\ETX\"\EOT\DLE\n\SO\n\a\EOT\NUL\EOT\SOH\STX\STX\SOH\DC2\ETX\"\EOT\b\n\SO\n\a\EOT\NUL\EOT\SOH\STX\STX\STX\DC2\ETX\"\f\SI\n\r\n\ACK\EOT\NUL\EOT\SOH\STX\ETX\DC2\ETX#\EOT\DLE\n\SO\n\a\EOT\NUL\EOT\SOH\STX\ETX\SOH\DC2\ETX#\EOT\t\n\SO\n\a\EOT\NUL\EOT\SOH\STX\ETX\STX\DC2\ETX#\f\SI\n\f\n\EOT\EOT\NUL\EOT\STX\DC2\EOT&\STX/\ETX\n\f\n\ENQ\EOT\NUL\EOT\STX\SOH\DC2\ETX&\a\DC4\n\r\n\ACK\EOT\NUL\EOT\STX\STX\NUL\DC2\ETX'\EOT\CAN\n\SO\n\a\EOT\NUL\EOT\STX\STX\NUL\SOH\DC2\ETX'\EOT\b\n\SO\n\a\EOT\NUL\EOT\STX\STX\NUL\STX\DC2\ETX'\DC4\ETB\n\r\n\ACK\EOT\NUL\EOT\STX\STX\SOH\DC2\ETX(\EOT\CAN\n\SO\n\a\EOT\NUL\EOT\STX\STX\SOH\SOH\DC2\ETX(\EOT\v\n\SO\n\a\EOT\NUL\EOT\STX\STX\SOH\STX\DC2\ETX(\DC4\ETB\n\r\n\ACK\EOT\NUL\EOT\STX\STX\STX\DC2\ETX)\EOT\CAN\n\SO\n\a\EOT\NUL\EOT\STX\STX\STX\SOH\DC2\ETX)\EOT\t\n\SO\n\a\EOT\NUL\EOT\STX\STX\STX\STX\DC2\ETX)\DC4\ETB\n\r\n\ACK\EOT\NUL\EOT\STX\STX\ETX\DC2\ETX*\EOT\CAN\n\SO\n\a\EOT\NUL\EOT\STX\STX\ETX\SOH\DC2\ETX*\EOT\DC1\n\SO\n\a\EOT\NUL\EOT\STX\STX\ETX\STX\DC2\ETX*\DC4\ETB\n\r\n\ACK\EOT\NUL\EOT\STX\STX\EOT\DC2\ETX+\EOT\CAN\n\SO\n\a\EOT\NUL\EOT\STX\STX\EOT\SOH\DC2\ETX+\EOT\b\n\SO\n\a\EOT\NUL\EOT\STX\STX\EOT\STX\DC2\ETX+\DC4\ETB\n\r\n\ACK\EOT\NUL\EOT\STX\STX\ENQ\DC2\ETX,\EOT\CAN\n\SO\n\a\EOT\NUL\EOT\STX\STX\ENQ\SOH\DC2\ETX,\EOT\DLE\n\SO\n\a\EOT\NUL\EOT\STX\STX\ENQ\STX\DC2\ETX,\DC4\ETB\n\r\n\ACK\EOT\NUL\EOT\STX\STX\ACK\DC2\ETX-\EOT\CAN\n\SO\n\a\EOT\NUL\EOT\STX\STX\ACK\SOH\DC2\ETX-\EOT\SO\n\SO\n\a\EOT\NUL\EOT\STX\STX\ACK\STX\DC2\ETX-\DC4\ETB\n\r\n\ACK\EOT\NUL\EOT\STX\STX\a\DC2\ETX.\EOT\CAN\n\SO\n\a\EOT\NUL\EOT\STX\STX\a\SOH\DC2\ETX.\EOT\f\n\SO\n\a\EOT\NUL\EOT\STX\STX\a\STX\DC2\ETX.\DC4\ETB\n\v\n\EOT\EOT\NUL\STX\NUL\DC2\ETX1\STX)\n\f\n\ENQ\EOT\NUL\STX\NUL\EOT\DC2\ETX1\STX\n\n\f\n\ENQ\EOT\NUL\STX\NUL\ACK\DC2\ETX1\v\FS\n\f\n\ENQ\EOT\NUL\STX\NUL\SOH\DC2\ETX1\GS!\n\f\n\ENQ\EOT\NUL\STX\NUL\ETX\DC2\ETX1'(\n\v\n\EOT\EOT\NUL\STX\SOH\DC2\ETX2\STX)\n\f\n\ENQ\EOT\NUL\STX\SOH\EOT\DC2\ETX2\STX\n\n\f\n\ENQ\EOT\NUL\STX\SOH\ACK\DC2\ETX2\v\GS\n\f\n\ENQ\EOT\NUL\STX\SOH\SOH\DC2\ETX2\RS#\n\f\n\ENQ\EOT\NUL\STX\SOH\ETX\DC2\ETX2'(\n\v\n\EOT\EOT\NUL\STX\STX\DC2\ETX3\STX)\n\f\n\ENQ\EOT\NUL\STX\STX\EOT\DC2\ETX3\STX\n\n\f\n\ENQ\EOT\NUL\STX\STX\ACK\DC2\ETX3\v\CAN\n\f\n\ENQ\EOT\NUL\STX\STX\SOH\DC2\ETX3\EM$\n\f\n\ENQ\EOT\NUL\STX\STX\ETX\DC2\ETX3'(\n\v\n\EOT\EOT\NUL\STX\ETX\DC2\ETX4\STX)\n\f\n\ENQ\EOT\NUL\STX\ETX\EOT\DC2\ETX4\STX\n\n\f\n\ENQ\EOT\NUL\STX\ETX\ENQ\DC2\ETX4\v\DC1\n\f\n\ENQ\EOT\NUL\STX\ETX\SOH\DC2\ETX4\DC2\SYN\n\f\n\ENQ\EOT\NUL\STX\ETX\ETX\DC2\ETX4'(\n\n\n\STX\EOT\SOH\DC2\EOT7\NUL=\SOH\n\n\n\ETX\EOT\SOH\SOH\DC2\ETX7\b\SYN\n\v\n\EOT\EOT\SOH\STX\NUL\DC2\ETX8\STX%\n\f\n\ENQ\EOT\SOH\STX\NUL\EOT\DC2\ETX8\STX\n\n\f\n\ENQ\EOT\SOH\STX\NUL\ENQ\DC2\ETX8\v\DC1\n\f\n\ENQ\EOT\SOH\STX\NUL\SOH\DC2\ETX8\DC2\ETB\n\f\n\ENQ\EOT\SOH\STX\NUL\ETX\DC2\ETX8#$\n\v\n\EOT\EOT\SOH\STX\SOH\DC2\ETX9\STX%\n\f\n\ENQ\EOT\SOH\STX\SOH\EOT\DC2\ETX9\STX\n\n\f\n\ENQ\EOT\SOH\STX\SOH\ENQ\DC2\ETX9\v\DC1\n\f\n\ENQ\EOT\SOH\STX\SOH\SOH\DC2\ETX9\DC2\ETB\n\f\n\ENQ\EOT\SOH\STX\SOH\ETX\DC2\ETX9#$\n\v\n\EOT\EOT\SOH\STX\STX\DC2\ETX:\STX%\n\f\n\ENQ\EOT\SOH\STX\STX\EOT\DC2\ETX:\STX\n\n\f\n\ENQ\EOT\SOH\STX\STX\ENQ\DC2\ETX:\v\SI\n\f\n\ENQ\EOT\SOH\STX\STX\SOH\DC2\ETX:\DLE\SYN\n\f\n\ENQ\EOT\SOH\STX\STX\ETX\DC2\ETX:#$\n\v\n\EOT\EOT\SOH\STX\ETX\DC2\ETX;\STX%\n\f\n\ENQ\EOT\SOH\STX\ETX\EOT\DC2\ETX;\STX\n\n\f\n\ENQ\EOT\SOH\STX\ETX\ACK\DC2\ETX;\v\CAN\n\f\n\ENQ\EOT\SOH\STX\ETX\SOH\DC2\ETX;\EM \n\f\n\ENQ\EOT\SOH\STX\ETX\ETX\DC2\ETX;#$\n\v\n\EOT\EOT\SOH\STX\EOT\DC2\ETX<\STX,\n\f\n\ENQ\EOT\SOH\STX\EOT\EOT\DC2\ETX<\STX\n\n\f\n\ENQ\EOT\SOH\STX\EOT\ACK\DC2\ETX<\v\FS\n\f\n\ENQ\EOT\SOH\STX\EOT\SOH\DC2\ETX<\GS'\n\f\n\ENQ\EOT\SOH\STX\EOT\ETX\DC2\ETX<*+\n\n\n\STX\EOT\STX\DC2\EOT?\NULB\SOH\n\n\n\ETX\EOT\STX\SOH\DC2\ETX?\b$\n\v\n\EOT\EOT\STX\STX\NUL\DC2\ETX@\STX%\n\f\n\ENQ\EOT\STX\STX\NUL\EOT\DC2\ETX@\STX\n\n\f\n\ENQ\EOT\STX\STX\NUL\ENQ\DC2\ETX@\v\DC1\n\f\n\ENQ\EOT\STX\STX\NUL\SOH\DC2\ETX@\DC2\NAK\n\f\n\ENQ\EOT\STX\STX\NUL\ETX\DC2\ETX@#$\n\v\n\EOT\EOT\STX\STX\SOH\DC2\ETXA\STX%\n\f\n\ENQ\EOT\STX\STX\SOH\EOT\DC2\ETXA\STX\n\n\f\n\ENQ\EOT\STX\STX\SOH\ACK\DC2\ETXA\v\CAN\n\f\n\ENQ\EOT\STX\STX\SOH\SOH\DC2\ETXA\EM \n\f\n\ENQ\EOT\STX\STX\SOH\ETX\DC2\ETXA#$\n\n\n\STX\EOT\ETX\DC2\EOTD\NULE\SOH\n\n\n\ETX\EOT\ETX\SOH\DC2\ETXD\b%\n\n\n\STX\EOT\EOT\DC2\EOTG\NULI\SOH\n\n\n\ETX\EOT\EOT\SOH\DC2\ETXG\b\GS\n\v\n\EOT\EOT\EOT\STX\NUL\DC2\ETXH\STX\SUB\n\f\n\ENQ\EOT\EOT\STX\NUL\EOT\DC2\ETXH\STX\n\n\f\n\ENQ\EOT\EOT\STX\NUL\ENQ\DC2\ETXH\v\DC1\n\f\n\ENQ\EOT\EOT\STX\NUL\SOH\DC2\ETXH\DC2\NAK\n\f\n\ENQ\EOT\EOT\STX\NUL\ETX\DC2\ETXH\CAN\EM\n\n\n\STX\EOT\ENQ\DC2\EOTK\NULL\SOH\n\n\n\ETX\EOT\ENQ\SOH\DC2\ETXK\b\RS\n\n\n\STX\EOT\ACK\DC2\EOTN\NULQ\SOH\n\n\n\ETX\EOT\ACK\SOH\DC2\ETXN\b$\n\v\n\EOT\EOT\ACK\STX\NUL\DC2\ETXO\STX%\n\f\n\ENQ\EOT\ACK\STX\NUL\EOT\DC2\ETXO\STX\n\n\f\n\ENQ\EOT\ACK\STX\NUL\ENQ\DC2\ETXO\v\DC1\n\f\n\ENQ\EOT\ACK\STX\NUL\SOH\DC2\ETXO\DC2\NAK\n\f\n\ENQ\EOT\ACK\STX\NUL\ETX\DC2\ETXO#$\n\v\n\EOT\EOT\ACK\STX\SOH\DC2\ETXP\STX%\n\f\n\ENQ\EOT\ACK\STX\SOH\EOT\DC2\ETXP\STX\n\n\f\n\ENQ\EOT\ACK\STX\SOH\ACK\DC2\ETXP\v\CAN\n\f\n\ENQ\EOT\ACK\STX\SOH\SOH\DC2\ETXP\EM \n\f\n\ENQ\EOT\ACK\STX\SOH\ETX\DC2\ETXP#$\n\n\n\STX\EOT\a\DC2\EOTS\NULT\SOH\n\n\n\ETX\EOT\a\SOH\DC2\ETXS\b%\n\n\n\STX\EOT\b\DC2\EOTV\NULX\SOH\n\n\n\ETX\EOT\b\SOH\DC2\ETXV\b$\n\v\n\EOT\EOT\b\STX\NUL\DC2\ETXW\STX\SUB\n\f\n\ENQ\EOT\b\STX\NUL\EOT\DC2\ETXW\STX\n\n\f\n\ENQ\EOT\b\STX\NUL\ENQ\DC2\ETXW\v\DC1\n\f\n\ENQ\EOT\b\STX\NUL\SOH\DC2\ETXW\DC2\NAK\n\f\n\ENQ\EOT\b\STX\NUL\ETX\DC2\ETXW\CAN\EM\n\n\n\STX\EOT\t\DC2\EOTZ\NUL[\SOH\n\n\n\ETX\EOT\t\SOH\DC2\ETXZ\b%\n\n\n\STX\EOT\n\DC2\EOT]\NUL`\SOH\n\n\n\ETX\EOT\n\SOH\DC2\ETX]\b\SUB\n\v\n\EOT\EOT\n\STX\NUL\DC2\ETX^\STX%\n\f\n\ENQ\EOT\n\STX\NUL\EOT\DC2\ETX^\STX\n\n\f\n\ENQ\EOT\n\STX\NUL\ENQ\DC2\ETX^\v\DC1\n\f\n\ENQ\EOT\n\STX\NUL\SOH\DC2\ETX^\DC2\NAK\n\f\n\ENQ\EOT\n\STX\NUL\ETX\DC2\ETX^#$\n\v\n\EOT\EOT\n\STX\SOH\DC2\ETX_\STX%\n\f\n\ENQ\EOT\n\STX\SOH\EOT\DC2\ETX_\STX\n\n\f\n\ENQ\EOT\n\STX\SOH\ACK\DC2\ETX_\v\CAN\n\f\n\ENQ\EOT\n\STX\SOH\SOH\DC2\ETX_\EM \n\f\n\ENQ\EOT\n\STX\SOH\ETX\DC2\ETX_#$\n\n\n\STX\EOT\v\DC2\EOTb\NULc\SOH\n\n\n\ETX\EOT\v\SOH\DC2\ETXb\b\ESC\n\n\n\STX\EOT\f\DC2\EOTe\NULg\SOH\n\n\n\ETX\EOT\f\SOH\DC2\ETXe\b \n\v\n\EOT\EOT\f\STX\NUL\DC2\ETXf\STX\SUB\n\f\n\ENQ\EOT\f\STX\NUL\EOT\DC2\ETXf\STX\n\n\f\n\ENQ\EOT\f\STX\NUL\ENQ\DC2\ETXf\v\DC1\n\f\n\ENQ\EOT\f\STX\NUL\SOH\DC2\ETXf\DC2\NAK\n\f\n\ENQ\EOT\f\STX\NUL\ETX\DC2\ETXf\CAN\EM\n\n\n\STX\EOT\r\DC2\EOTi\NULk\SOH\n\n\n\ETX\EOT\r\SOH\DC2\ETXi\b!\n\v\n\EOT\EOT\r\STX\NUL\DC2\ETXj\STX%\n\f\n\ENQ\EOT\r\STX\NUL\EOT\DC2\ETXj\STX\n\n\f\n\ENQ\EOT\r\STX\NUL\ACK\DC2\ETXj\v\EM\n\f\n\ENQ\EOT\r\STX\NUL\SOH\DC2\ETXj\SUB \n\f\n\ENQ\EOT\r\STX\NUL\ETX\DC2\ETXj#$")