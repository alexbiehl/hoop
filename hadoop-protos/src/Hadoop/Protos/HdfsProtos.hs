{-# LANGUAGE BangPatterns, DataKinds, DeriveDataTypeable, FlexibleInstances, MultiParamTypeClasses #-}
{-# OPTIONS_GHC -fno-warn-unused-imports #-}
module Hadoop.Protos.HdfsProtos (protoInfo, fileDescriptorProto) where
import Prelude ((+), (/))
import qualified Prelude as Prelude'
import qualified Data.Typeable as Prelude'
import qualified Data.Data as Prelude'
import qualified Text.ProtocolBuffers.Header as P'
import Text.DescriptorProtos.FileDescriptorProto (FileDescriptorProto)
import Text.ProtocolBuffers.Reflections (ProtoInfo)
import qualified Text.ProtocolBuffers.WireMessage as P' (wireGet,getFromBS)
 
protoInfo :: ProtoInfo
protoInfo
 = Prelude'.read
    "ProtoInfo {protoMod = ProtoName {protobufName = FIName \".hadoop.hdfs\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [], baseName = MName \"HdfsProtos\"}, protoFilePath = [\"Hadoop\",\"Protos\",\"HdfsProtos.hs\"], protoSource = \"hdfs.proto\", extensionKeys = fromList [], messages = [DescriptorInfo {descName = ProtoName {protobufName = FIName \".hadoop.hdfs.ExtendedBlockProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"HdfsProtos\"], baseName = MName \"ExtendedBlockProto\"}, descFilePath = [\"Hadoop\",\"Protos\",\"HdfsProtos\",\"ExtendedBlockProto.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.ExtendedBlockProto.poolId\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"ExtendedBlockProto\"], baseName' = FName \"poolId\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.ExtendedBlockProto.blockId\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"ExtendedBlockProto\"], baseName' = FName \"blockId\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 16}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 4}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.ExtendedBlockProto.generationStamp\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"ExtendedBlockProto\"], baseName' = FName \"generationStamp\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 24}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 4}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.ExtendedBlockProto.numBytes\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"ExtendedBlockProto\"], baseName' = FName \"numBytes\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 4}, wireTag = WireTag {getWireTag = 32}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 4}, typeName = Nothing, hsRawDefault = Just \"0\", hsDefault = Just (HsDef'Integer 0)}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".hadoop.hdfs.DatanodeIDProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"HdfsProtos\"], baseName = MName \"DatanodeIDProto\"}, descFilePath = [\"Hadoop\",\"Protos\",\"HdfsProtos\",\"DatanodeIDProto.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.DatanodeIDProto.ipAddr\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"DatanodeIDProto\"], baseName' = FName \"ipAddr\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.DatanodeIDProto.hostName\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"DatanodeIDProto\"], baseName' = FName \"hostName\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 18}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.DatanodeIDProto.datanodeUuid\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"DatanodeIDProto\"], baseName' = FName \"datanodeUuid\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 26}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.DatanodeIDProto.xferPort\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"DatanodeIDProto\"], baseName' = FName \"xferPort\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 4}, wireTag = WireTag {getWireTag = 32}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.DatanodeIDProto.infoPort\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"DatanodeIDProto\"], baseName' = FName \"infoPort\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 5}, wireTag = WireTag {getWireTag = 40}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.DatanodeIDProto.ipcPort\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"DatanodeIDProto\"], baseName' = FName \"ipcPort\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 6}, wireTag = WireTag {getWireTag = 48}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.DatanodeIDProto.infoSecurePort\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"DatanodeIDProto\"], baseName' = FName \"infoSecurePort\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 7}, wireTag = WireTag {getWireTag = 56}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Just \"0\", hsDefault = Just (HsDef'Integer 0)}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".hadoop.hdfs.DatanodeLocalInfoProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"HdfsProtos\"], baseName = MName \"DatanodeLocalInfoProto\"}, descFilePath = [\"Hadoop\",\"Protos\",\"HdfsProtos\",\"DatanodeLocalInfoProto.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.DatanodeLocalInfoProto.softwareVersion\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"DatanodeLocalInfoProto\"], baseName' = FName \"softwareVersion\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.DatanodeLocalInfoProto.configVersion\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"DatanodeLocalInfoProto\"], baseName' = FName \"configVersion\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 18}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.DatanodeLocalInfoProto.uptime\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"DatanodeLocalInfoProto\"], baseName' = FName \"uptime\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 24}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 4}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".hadoop.hdfs.DatanodeInfosProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"HdfsProtos\"], baseName = MName \"DatanodeInfosProto\"}, descFilePath = [\"Hadoop\",\"Protos\",\"HdfsProtos\",\"DatanodeInfosProto.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.DatanodeInfosProto.datanodes\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"DatanodeInfosProto\"], baseName' = FName \"datanodes\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = True, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".hadoop.hdfs.DatanodeInfoProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"HdfsProtos\"], baseName = MName \"DatanodeInfoProto\"}), hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".hadoop.hdfs.DatanodeInfoProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"HdfsProtos\"], baseName = MName \"DatanodeInfoProto\"}, descFilePath = [\"Hadoop\",\"Protos\",\"HdfsProtos\",\"DatanodeInfoProto.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.DatanodeInfoProto.id\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"DatanodeInfoProto\"], baseName' = FName \"id\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".hadoop.hdfs.DatanodeIDProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"HdfsProtos\"], baseName = MName \"DatanodeIDProto\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.DatanodeInfoProto.capacity\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"DatanodeInfoProto\"], baseName' = FName \"capacity\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 16}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 4}, typeName = Nothing, hsRawDefault = Just \"0\", hsDefault = Just (HsDef'Integer 0)},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.DatanodeInfoProto.dfsUsed\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"DatanodeInfoProto\"], baseName' = FName \"dfsUsed\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 24}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 4}, typeName = Nothing, hsRawDefault = Just \"0\", hsDefault = Just (HsDef'Integer 0)},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.DatanodeInfoProto.remaining\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"DatanodeInfoProto\"], baseName' = FName \"remaining\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 4}, wireTag = WireTag {getWireTag = 32}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 4}, typeName = Nothing, hsRawDefault = Just \"0\", hsDefault = Just (HsDef'Integer 0)},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.DatanodeInfoProto.blockPoolUsed\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"DatanodeInfoProto\"], baseName' = FName \"blockPoolUsed\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 5}, wireTag = WireTag {getWireTag = 40}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 4}, typeName = Nothing, hsRawDefault = Just \"0\", hsDefault = Just (HsDef'Integer 0)},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.DatanodeInfoProto.lastUpdate\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"DatanodeInfoProto\"], baseName' = FName \"lastUpdate\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 6}, wireTag = WireTag {getWireTag = 48}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 4}, typeName = Nothing, hsRawDefault = Just \"0\", hsDefault = Just (HsDef'Integer 0)},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.DatanodeInfoProto.xceiverCount\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"DatanodeInfoProto\"], baseName' = FName \"xceiverCount\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 7}, wireTag = WireTag {getWireTag = 56}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Just \"0\", hsDefault = Just (HsDef'Integer 0)},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.DatanodeInfoProto.location\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"DatanodeInfoProto\"], baseName' = FName \"location\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 8}, wireTag = WireTag {getWireTag = 66}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.DatanodeInfoProto.adminState\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"DatanodeInfoProto\"], baseName' = FName \"adminState\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 10}, wireTag = WireTag {getWireTag = 80}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 14}, typeName = Just (ProtoName {protobufName = FIName \".hadoop.hdfs.DatanodeInfoProto.AdminState\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"HdfsProtos\",MName \"DatanodeInfoProto\"], baseName = MName \"AdminState\"}), hsRawDefault = Just \"NORMAL\", hsDefault = Just (HsDef'Enum \"NORMAL\")},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.DatanodeInfoProto.cacheCapacity\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"DatanodeInfoProto\"], baseName' = FName \"cacheCapacity\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 11}, wireTag = WireTag {getWireTag = 88}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 4}, typeName = Nothing, hsRawDefault = Just \"0\", hsDefault = Just (HsDef'Integer 0)},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.DatanodeInfoProto.cacheUsed\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"DatanodeInfoProto\"], baseName' = FName \"cacheUsed\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 12}, wireTag = WireTag {getWireTag = 96}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 4}, typeName = Nothing, hsRawDefault = Just \"0\", hsDefault = Just (HsDef'Integer 0)},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.DatanodeInfoProto.lastUpdateMonotonic\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"DatanodeInfoProto\"], baseName' = FName \"lastUpdateMonotonic\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 13}, wireTag = WireTag {getWireTag = 104}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 4}, typeName = Nothing, hsRawDefault = Just \"0\", hsDefault = Just (HsDef'Integer 0)}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".hadoop.hdfs.DatanodeStorageProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"HdfsProtos\"], baseName = MName \"DatanodeStorageProto\"}, descFilePath = [\"Hadoop\",\"Protos\",\"HdfsProtos\",\"DatanodeStorageProto.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.DatanodeStorageProto.storageUuid\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"DatanodeStorageProto\"], baseName' = FName \"storageUuid\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.DatanodeStorageProto.state\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"DatanodeStorageProto\"], baseName' = FName \"state\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 16}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 14}, typeName = Just (ProtoName {protobufName = FIName \".hadoop.hdfs.DatanodeStorageProto.StorageState\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"HdfsProtos\",MName \"DatanodeStorageProto\"], baseName = MName \"StorageState\"}), hsRawDefault = Just \"NORMAL\", hsDefault = Just (HsDef'Enum \"NORMAL\")},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.DatanodeStorageProto.storageType\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"DatanodeStorageProto\"], baseName' = FName \"storageType\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 24}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 14}, typeName = Just (ProtoName {protobufName = FIName \".hadoop.hdfs.StorageTypeProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"HdfsProtos\"], baseName = MName \"StorageTypeProto\"}), hsRawDefault = Just \"DISK\", hsDefault = Just (HsDef'Enum \"DISK\")}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".hadoop.hdfs.StorageReportProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"HdfsProtos\"], baseName = MName \"StorageReportProto\"}, descFilePath = [\"Hadoop\",\"Protos\",\"HdfsProtos\",\"StorageReportProto.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.StorageReportProto.storageUuid\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"StorageReportProto\"], baseName' = FName \"storageUuid\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.StorageReportProto.failed\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"StorageReportProto\"], baseName' = FName \"failed\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 16}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 8}, typeName = Nothing, hsRawDefault = Just \"false\", hsDefault = Just (HsDef'Bool False)},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.StorageReportProto.capacity\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"StorageReportProto\"], baseName' = FName \"capacity\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 24}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 4}, typeName = Nothing, hsRawDefault = Just \"0\", hsDefault = Just (HsDef'Integer 0)},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.StorageReportProto.dfsUsed\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"StorageReportProto\"], baseName' = FName \"dfsUsed\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 4}, wireTag = WireTag {getWireTag = 32}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 4}, typeName = Nothing, hsRawDefault = Just \"0\", hsDefault = Just (HsDef'Integer 0)},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.StorageReportProto.remaining\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"StorageReportProto\"], baseName' = FName \"remaining\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 5}, wireTag = WireTag {getWireTag = 40}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 4}, typeName = Nothing, hsRawDefault = Just \"0\", hsDefault = Just (HsDef'Integer 0)},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.StorageReportProto.blockPoolUsed\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"StorageReportProto\"], baseName' = FName \"blockPoolUsed\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 6}, wireTag = WireTag {getWireTag = 48}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 4}, typeName = Nothing, hsRawDefault = Just \"0\", hsDefault = Just (HsDef'Integer 0)},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.StorageReportProto.storage\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"StorageReportProto\"], baseName' = FName \"storage\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 7}, wireTag = WireTag {getWireTag = 58}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".hadoop.hdfs.DatanodeStorageProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"HdfsProtos\"], baseName = MName \"DatanodeStorageProto\"}), hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".hadoop.hdfs.ContentSummaryProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"HdfsProtos\"], baseName = MName \"ContentSummaryProto\"}, descFilePath = [\"Hadoop\",\"Protos\",\"HdfsProtos\",\"ContentSummaryProto.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.ContentSummaryProto.length\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"ContentSummaryProto\"], baseName' = FName \"length\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 8}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 4}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.ContentSummaryProto.fileCount\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"ContentSummaryProto\"], baseName' = FName \"fileCount\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 16}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 4}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.ContentSummaryProto.directoryCount\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"ContentSummaryProto\"], baseName' = FName \"directoryCount\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 24}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 4}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.ContentSummaryProto.quota\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"ContentSummaryProto\"], baseName' = FName \"quota\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 4}, wireTag = WireTag {getWireTag = 32}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 4}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.ContentSummaryProto.spaceConsumed\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"ContentSummaryProto\"], baseName' = FName \"spaceConsumed\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 5}, wireTag = WireTag {getWireTag = 40}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 4}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.ContentSummaryProto.spaceQuota\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"ContentSummaryProto\"], baseName' = FName \"spaceQuota\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 6}, wireTag = WireTag {getWireTag = 48}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 4}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.ContentSummaryProto.typeQuotaInfos\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"ContentSummaryProto\"], baseName' = FName \"typeQuotaInfos\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 7}, wireTag = WireTag {getWireTag = 58}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".hadoop.hdfs.StorageTypeQuotaInfosProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"HdfsProtos\"], baseName = MName \"StorageTypeQuotaInfosProto\"}), hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".hadoop.hdfs.StorageTypeQuotaInfosProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"HdfsProtos\"], baseName = MName \"StorageTypeQuotaInfosProto\"}, descFilePath = [\"Hadoop\",\"Protos\",\"HdfsProtos\",\"StorageTypeQuotaInfosProto.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.StorageTypeQuotaInfosProto.typeQuotaInfo\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"StorageTypeQuotaInfosProto\"], baseName' = FName \"typeQuotaInfo\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = True, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".hadoop.hdfs.StorageTypeQuotaInfoProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"HdfsProtos\"], baseName = MName \"StorageTypeQuotaInfoProto\"}), hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".hadoop.hdfs.StorageTypeQuotaInfoProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"HdfsProtos\"], baseName = MName \"StorageTypeQuotaInfoProto\"}, descFilePath = [\"Hadoop\",\"Protos\",\"HdfsProtos\",\"StorageTypeQuotaInfoProto.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.StorageTypeQuotaInfoProto.type\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"StorageTypeQuotaInfoProto\"], baseName' = FName \"type'\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 8}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 14}, typeName = Just (ProtoName {protobufName = FIName \".hadoop.hdfs.StorageTypeProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"HdfsProtos\"], baseName = MName \"StorageTypeProto\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.StorageTypeQuotaInfoProto.quota\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"StorageTypeQuotaInfoProto\"], baseName' = FName \"quota\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 16}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 4}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.StorageTypeQuotaInfoProto.consumed\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"StorageTypeQuotaInfoProto\"], baseName' = FName \"consumed\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 24}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 4}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".hadoop.hdfs.CorruptFileBlocksProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"HdfsProtos\"], baseName = MName \"CorruptFileBlocksProto\"}, descFilePath = [\"Hadoop\",\"Protos\",\"HdfsProtos\",\"CorruptFileBlocksProto.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.CorruptFileBlocksProto.files\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"CorruptFileBlocksProto\"], baseName' = FName \"files\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = True, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.CorruptFileBlocksProto.cookie\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"CorruptFileBlocksProto\"], baseName' = FName \"cookie\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 18}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".hadoop.hdfs.FsPermissionProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"HdfsProtos\"], baseName = MName \"FsPermissionProto\"}, descFilePath = [\"Hadoop\",\"Protos\",\"HdfsProtos\",\"FsPermissionProto.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.FsPermissionProto.perm\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"FsPermissionProto\"], baseName' = FName \"perm\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 8}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".hadoop.hdfs.StorageTypesProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"HdfsProtos\"], baseName = MName \"StorageTypesProto\"}, descFilePath = [\"Hadoop\",\"Protos\",\"HdfsProtos\",\"StorageTypesProto.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.StorageTypesProto.storageTypes\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"StorageTypesProto\"], baseName' = FName \"storageTypes\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 8}, packedTag = Just (WireTag {getWireTag = 8},WireTag {getWireTag = 10}), wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = True, mightPack = True, typeCode = FieldType {getFieldType = 14}, typeName = Just (ProtoName {protobufName = FIName \".hadoop.hdfs.StorageTypeProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"HdfsProtos\"], baseName = MName \"StorageTypeProto\"}), hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".hadoop.hdfs.BlockStoragePolicyProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"HdfsProtos\"], baseName = MName \"BlockStoragePolicyProto\"}, descFilePath = [\"Hadoop\",\"Protos\",\"HdfsProtos\",\"BlockStoragePolicyProto.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.BlockStoragePolicyProto.policyId\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"BlockStoragePolicyProto\"], baseName' = FName \"policyId\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 8}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.BlockStoragePolicyProto.name\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"BlockStoragePolicyProto\"], baseName' = FName \"name\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 18}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.BlockStoragePolicyProto.creationPolicy\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"BlockStoragePolicyProto\"], baseName' = FName \"creationPolicy\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 26}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".hadoop.hdfs.StorageTypesProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"HdfsProtos\"], baseName = MName \"StorageTypesProto\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.BlockStoragePolicyProto.creationFallbackPolicy\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"BlockStoragePolicyProto\"], baseName' = FName \"creationFallbackPolicy\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 4}, wireTag = WireTag {getWireTag = 34}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".hadoop.hdfs.StorageTypesProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"HdfsProtos\"], baseName = MName \"StorageTypesProto\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.BlockStoragePolicyProto.replicationFallbackPolicy\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"BlockStoragePolicyProto\"], baseName' = FName \"replicationFallbackPolicy\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 5}, wireTag = WireTag {getWireTag = 42}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".hadoop.hdfs.StorageTypesProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"HdfsProtos\"], baseName = MName \"StorageTypesProto\"}), hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".hadoop.hdfs.StorageUuidsProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"HdfsProtos\"], baseName = MName \"StorageUuidsProto\"}, descFilePath = [\"Hadoop\",\"Protos\",\"HdfsProtos\",\"StorageUuidsProto.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.StorageUuidsProto.storageUuids\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"StorageUuidsProto\"], baseName' = FName \"storageUuids\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = True, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".hadoop.hdfs.LocatedBlockProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"HdfsProtos\"], baseName = MName \"LocatedBlockProto\"}, descFilePath = [\"Hadoop\",\"Protos\",\"HdfsProtos\",\"LocatedBlockProto.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.LocatedBlockProto.b\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"LocatedBlockProto\"], baseName' = FName \"b\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".hadoop.hdfs.ExtendedBlockProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"HdfsProtos\"], baseName = MName \"ExtendedBlockProto\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.LocatedBlockProto.offset\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"LocatedBlockProto\"], baseName' = FName \"offset\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 16}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 4}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.LocatedBlockProto.locs\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"LocatedBlockProto\"], baseName' = FName \"locs\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 26}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = True, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".hadoop.hdfs.DatanodeInfoProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"HdfsProtos\"], baseName = MName \"DatanodeInfoProto\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.LocatedBlockProto.corrupt\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"LocatedBlockProto\"], baseName' = FName \"corrupt\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 4}, wireTag = WireTag {getWireTag = 32}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 8}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.LocatedBlockProto.blockToken\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"LocatedBlockProto\"], baseName' = FName \"blockToken\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 5}, wireTag = WireTag {getWireTag = 42}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".hadoop.common.TokenProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"SecurityProtos\"], baseName = MName \"TokenProto\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.LocatedBlockProto.isCached\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"LocatedBlockProto\"], baseName' = FName \"isCached\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 6}, wireTag = WireTag {getWireTag = 50}, packedTag = Just (WireTag {getWireTag = 48},WireTag {getWireTag = 50}), wireTagLength = 1, isPacked = True, isRequired = False, canRepeat = True, mightPack = True, typeCode = FieldType {getFieldType = 8}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.LocatedBlockProto.storageTypes\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"LocatedBlockProto\"], baseName' = FName \"storageTypes\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 7}, wireTag = WireTag {getWireTag = 56}, packedTag = Just (WireTag {getWireTag = 56},WireTag {getWireTag = 58}), wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = True, mightPack = True, typeCode = FieldType {getFieldType = 14}, typeName = Just (ProtoName {protobufName = FIName \".hadoop.hdfs.StorageTypeProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"HdfsProtos\"], baseName = MName \"StorageTypeProto\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.LocatedBlockProto.storageIDs\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"LocatedBlockProto\"], baseName' = FName \"storageIDs\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 8}, wireTag = WireTag {getWireTag = 66}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = True, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".hadoop.hdfs.DataEncryptionKeyProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"HdfsProtos\"], baseName = MName \"DataEncryptionKeyProto\"}, descFilePath = [\"Hadoop\",\"Protos\",\"HdfsProtos\",\"DataEncryptionKeyProto.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.DataEncryptionKeyProto.keyId\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"DataEncryptionKeyProto\"], baseName' = FName \"keyId\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 8}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.DataEncryptionKeyProto.blockPoolId\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"DataEncryptionKeyProto\"], baseName' = FName \"blockPoolId\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 18}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.DataEncryptionKeyProto.nonce\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"DataEncryptionKeyProto\"], baseName' = FName \"nonce\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 26}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 12}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.DataEncryptionKeyProto.encryptionKey\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"DataEncryptionKeyProto\"], baseName' = FName \"encryptionKey\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 4}, wireTag = WireTag {getWireTag = 34}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 12}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.DataEncryptionKeyProto.expiryDate\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"DataEncryptionKeyProto\"], baseName' = FName \"expiryDate\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 5}, wireTag = WireTag {getWireTag = 40}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 4}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.DataEncryptionKeyProto.encryptionAlgorithm\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"DataEncryptionKeyProto\"], baseName' = FName \"encryptionAlgorithm\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 6}, wireTag = WireTag {getWireTag = 50}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".hadoop.hdfs.FileEncryptionInfoProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"HdfsProtos\"], baseName = MName \"FileEncryptionInfoProto\"}, descFilePath = [\"Hadoop\",\"Protos\",\"HdfsProtos\",\"FileEncryptionInfoProto.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.FileEncryptionInfoProto.suite\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"FileEncryptionInfoProto\"], baseName' = FName \"suite\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 8}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 14}, typeName = Just (ProtoName {protobufName = FIName \".hadoop.hdfs.CipherSuiteProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"HdfsProtos\"], baseName = MName \"CipherSuiteProto\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.FileEncryptionInfoProto.cryptoProtocolVersion\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"FileEncryptionInfoProto\"], baseName' = FName \"cryptoProtocolVersion\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 16}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 14}, typeName = Just (ProtoName {protobufName = FIName \".hadoop.hdfs.CryptoProtocolVersionProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"HdfsProtos\"], baseName = MName \"CryptoProtocolVersionProto\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.FileEncryptionInfoProto.key\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"FileEncryptionInfoProto\"], baseName' = FName \"key\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 26}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 12}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.FileEncryptionInfoProto.iv\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"FileEncryptionInfoProto\"], baseName' = FName \"iv\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 4}, wireTag = WireTag {getWireTag = 34}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 12}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.FileEncryptionInfoProto.keyName\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"FileEncryptionInfoProto\"], baseName' = FName \"keyName\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 5}, wireTag = WireTag {getWireTag = 42}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.FileEncryptionInfoProto.ezKeyVersionName\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"FileEncryptionInfoProto\"], baseName' = FName \"ezKeyVersionName\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 6}, wireTag = WireTag {getWireTag = 50}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".hadoop.hdfs.PerFileEncryptionInfoProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"HdfsProtos\"], baseName = MName \"PerFileEncryptionInfoProto\"}, descFilePath = [\"Hadoop\",\"Protos\",\"HdfsProtos\",\"PerFileEncryptionInfoProto.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.PerFileEncryptionInfoProto.key\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"PerFileEncryptionInfoProto\"], baseName' = FName \"key\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 12}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.PerFileEncryptionInfoProto.iv\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"PerFileEncryptionInfoProto\"], baseName' = FName \"iv\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 18}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 12}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.PerFileEncryptionInfoProto.ezKeyVersionName\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"PerFileEncryptionInfoProto\"], baseName' = FName \"ezKeyVersionName\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 26}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".hadoop.hdfs.ZoneEncryptionInfoProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"HdfsProtos\"], baseName = MName \"ZoneEncryptionInfoProto\"}, descFilePath = [\"Hadoop\",\"Protos\",\"HdfsProtos\",\"ZoneEncryptionInfoProto.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.ZoneEncryptionInfoProto.suite\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"ZoneEncryptionInfoProto\"], baseName' = FName \"suite\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 8}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 14}, typeName = Just (ProtoName {protobufName = FIName \".hadoop.hdfs.CipherSuiteProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"HdfsProtos\"], baseName = MName \"CipherSuiteProto\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.ZoneEncryptionInfoProto.cryptoProtocolVersion\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"ZoneEncryptionInfoProto\"], baseName' = FName \"cryptoProtocolVersion\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 16}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 14}, typeName = Just (ProtoName {protobufName = FIName \".hadoop.hdfs.CryptoProtocolVersionProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"HdfsProtos\"], baseName = MName \"CryptoProtocolVersionProto\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.ZoneEncryptionInfoProto.keyName\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"ZoneEncryptionInfoProto\"], baseName' = FName \"keyName\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 26}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".hadoop.hdfs.CipherOptionProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"HdfsProtos\"], baseName = MName \"CipherOptionProto\"}, descFilePath = [\"Hadoop\",\"Protos\",\"HdfsProtos\",\"CipherOptionProto.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.CipherOptionProto.suite\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"CipherOptionProto\"], baseName' = FName \"suite\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 8}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 14}, typeName = Just (ProtoName {protobufName = FIName \".hadoop.hdfs.CipherSuiteProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"HdfsProtos\"], baseName = MName \"CipherSuiteProto\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.CipherOptionProto.inKey\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"CipherOptionProto\"], baseName' = FName \"inKey\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 18}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 12}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.CipherOptionProto.inIv\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"CipherOptionProto\"], baseName' = FName \"inIv\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 26}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 12}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.CipherOptionProto.outKey\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"CipherOptionProto\"], baseName' = FName \"outKey\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 4}, wireTag = WireTag {getWireTag = 34}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 12}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.CipherOptionProto.outIv\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"CipherOptionProto\"], baseName' = FName \"outIv\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 5}, wireTag = WireTag {getWireTag = 42}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 12}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".hadoop.hdfs.LocatedBlocksProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"HdfsProtos\"], baseName = MName \"LocatedBlocksProto\"}, descFilePath = [\"Hadoop\",\"Protos\",\"HdfsProtos\",\"LocatedBlocksProto.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.LocatedBlocksProto.fileLength\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"LocatedBlocksProto\"], baseName' = FName \"fileLength\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 8}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 4}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.LocatedBlocksProto.blocks\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"LocatedBlocksProto\"], baseName' = FName \"blocks\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 18}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = True, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".hadoop.hdfs.LocatedBlockProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"HdfsProtos\"], baseName = MName \"LocatedBlockProto\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.LocatedBlocksProto.underConstruction\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"LocatedBlocksProto\"], baseName' = FName \"underConstruction\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 24}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 8}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.LocatedBlocksProto.lastBlock\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"LocatedBlocksProto\"], baseName' = FName \"lastBlock\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 4}, wireTag = WireTag {getWireTag = 34}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".hadoop.hdfs.LocatedBlockProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"HdfsProtos\"], baseName = MName \"LocatedBlockProto\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.LocatedBlocksProto.isLastBlockComplete\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"LocatedBlocksProto\"], baseName' = FName \"isLastBlockComplete\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 5}, wireTag = WireTag {getWireTag = 40}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 8}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.LocatedBlocksProto.fileEncryptionInfo\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"LocatedBlocksProto\"], baseName' = FName \"fileEncryptionInfo\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 6}, wireTag = WireTag {getWireTag = 50}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".hadoop.hdfs.FileEncryptionInfoProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"HdfsProtos\"], baseName = MName \"FileEncryptionInfoProto\"}), hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".hadoop.hdfs.HdfsFileStatusProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"HdfsProtos\"], baseName = MName \"HdfsFileStatusProto\"}, descFilePath = [\"Hadoop\",\"Protos\",\"HdfsProtos\",\"HdfsFileStatusProto.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.HdfsFileStatusProto.fileType\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"HdfsFileStatusProto\"], baseName' = FName \"fileType\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 8}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 14}, typeName = Just (ProtoName {protobufName = FIName \".hadoop.hdfs.HdfsFileStatusProto.FileType\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"HdfsProtos\",MName \"HdfsFileStatusProto\"], baseName = MName \"FileType\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.HdfsFileStatusProto.path\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"HdfsFileStatusProto\"], baseName' = FName \"path\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 18}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 12}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.HdfsFileStatusProto.length\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"HdfsFileStatusProto\"], baseName' = FName \"length\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 24}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 4}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.HdfsFileStatusProto.permission\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"HdfsFileStatusProto\"], baseName' = FName \"permission\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 4}, wireTag = WireTag {getWireTag = 34}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".hadoop.hdfs.FsPermissionProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"HdfsProtos\"], baseName = MName \"FsPermissionProto\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.HdfsFileStatusProto.owner\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"HdfsFileStatusProto\"], baseName' = FName \"owner\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 5}, wireTag = WireTag {getWireTag = 42}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.HdfsFileStatusProto.group\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"HdfsFileStatusProto\"], baseName' = FName \"group\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 6}, wireTag = WireTag {getWireTag = 50}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.HdfsFileStatusProto.modification_time\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"HdfsFileStatusProto\"], baseName' = FName \"modification_time\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 7}, wireTag = WireTag {getWireTag = 56}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 4}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.HdfsFileStatusProto.access_time\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"HdfsFileStatusProto\"], baseName' = FName \"access_time\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 8}, wireTag = WireTag {getWireTag = 64}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 4}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.HdfsFileStatusProto.symlink\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"HdfsFileStatusProto\"], baseName' = FName \"symlink\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 9}, wireTag = WireTag {getWireTag = 74}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 12}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.HdfsFileStatusProto.block_replication\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"HdfsFileStatusProto\"], baseName' = FName \"block_replication\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 10}, wireTag = WireTag {getWireTag = 80}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Just \"0\", hsDefault = Just (HsDef'Integer 0)},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.HdfsFileStatusProto.blocksize\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"HdfsFileStatusProto\"], baseName' = FName \"blocksize\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 11}, wireTag = WireTag {getWireTag = 88}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 4}, typeName = Nothing, hsRawDefault = Just \"0\", hsDefault = Just (HsDef'Integer 0)},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.HdfsFileStatusProto.locations\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"HdfsFileStatusProto\"], baseName' = FName \"locations\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 12}, wireTag = WireTag {getWireTag = 98}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".hadoop.hdfs.LocatedBlocksProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"HdfsProtos\"], baseName = MName \"LocatedBlocksProto\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.HdfsFileStatusProto.fileId\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"HdfsFileStatusProto\"], baseName' = FName \"fileId\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 13}, wireTag = WireTag {getWireTag = 104}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 4}, typeName = Nothing, hsRawDefault = Just \"0\", hsDefault = Just (HsDef'Integer 0)},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.HdfsFileStatusProto.childrenNum\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"HdfsFileStatusProto\"], baseName' = FName \"childrenNum\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 14}, wireTag = WireTag {getWireTag = 112}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 5}, typeName = Nothing, hsRawDefault = Just \"-1\", hsDefault = Just (HsDef'Integer (-1))},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.HdfsFileStatusProto.fileEncryptionInfo\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"HdfsFileStatusProto\"], baseName' = FName \"fileEncryptionInfo\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 15}, wireTag = WireTag {getWireTag = 122}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".hadoop.hdfs.FileEncryptionInfoProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"HdfsProtos\"], baseName = MName \"FileEncryptionInfoProto\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.HdfsFileStatusProto.storagePolicy\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"HdfsFileStatusProto\"], baseName' = FName \"storagePolicy\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 16}, wireTag = WireTag {getWireTag = 128}, packedTag = Nothing, wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Just \"0\", hsDefault = Just (HsDef'Integer 0)}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".hadoop.hdfs.FsServerDefaultsProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"HdfsProtos\"], baseName = MName \"FsServerDefaultsProto\"}, descFilePath = [\"Hadoop\",\"Protos\",\"HdfsProtos\",\"FsServerDefaultsProto.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.FsServerDefaultsProto.blockSize\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"FsServerDefaultsProto\"], baseName' = FName \"blockSize\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 8}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 4}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.FsServerDefaultsProto.bytesPerChecksum\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"FsServerDefaultsProto\"], baseName' = FName \"bytesPerChecksum\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 16}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.FsServerDefaultsProto.writePacketSize\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"FsServerDefaultsProto\"], baseName' = FName \"writePacketSize\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 24}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.FsServerDefaultsProto.replication\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"FsServerDefaultsProto\"], baseName' = FName \"replication\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 4}, wireTag = WireTag {getWireTag = 32}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.FsServerDefaultsProto.fileBufferSize\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"FsServerDefaultsProto\"], baseName' = FName \"fileBufferSize\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 5}, wireTag = WireTag {getWireTag = 40}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.FsServerDefaultsProto.encryptDataTransfer\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"FsServerDefaultsProto\"], baseName' = FName \"encryptDataTransfer\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 6}, wireTag = WireTag {getWireTag = 48}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 8}, typeName = Nothing, hsRawDefault = Just \"false\", hsDefault = Just (HsDef'Bool False)},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.FsServerDefaultsProto.trashInterval\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"FsServerDefaultsProto\"], baseName' = FName \"trashInterval\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 7}, wireTag = WireTag {getWireTag = 56}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 4}, typeName = Nothing, hsRawDefault = Just \"0\", hsDefault = Just (HsDef'Integer 0)},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.FsServerDefaultsProto.checksumType\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"FsServerDefaultsProto\"], baseName' = FName \"checksumType\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 8}, wireTag = WireTag {getWireTag = 64}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 14}, typeName = Just (ProtoName {protobufName = FIName \".hadoop.hdfs.ChecksumTypeProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"HdfsProtos\"], baseName = MName \"ChecksumTypeProto\"}), hsRawDefault = Just \"CHECKSUM_CRC32\", hsDefault = Just (HsDef'Enum \"CHECKSUM_CRC32\")}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".hadoop.hdfs.DirectoryListingProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"HdfsProtos\"], baseName = MName \"DirectoryListingProto\"}, descFilePath = [\"Hadoop\",\"Protos\",\"HdfsProtos\",\"DirectoryListingProto.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.DirectoryListingProto.partialListing\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"DirectoryListingProto\"], baseName' = FName \"partialListing\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = True, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".hadoop.hdfs.HdfsFileStatusProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"HdfsProtos\"], baseName = MName \"HdfsFileStatusProto\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.DirectoryListingProto.remainingEntries\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"DirectoryListingProto\"], baseName' = FName \"remainingEntries\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 16}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".hadoop.hdfs.SnapshottableDirectoryStatusProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"HdfsProtos\"], baseName = MName \"SnapshottableDirectoryStatusProto\"}, descFilePath = [\"Hadoop\",\"Protos\",\"HdfsProtos\",\"SnapshottableDirectoryStatusProto.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.SnapshottableDirectoryStatusProto.dirStatus\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"SnapshottableDirectoryStatusProto\"], baseName' = FName \"dirStatus\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".hadoop.hdfs.HdfsFileStatusProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"HdfsProtos\"], baseName = MName \"HdfsFileStatusProto\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.SnapshottableDirectoryStatusProto.snapshot_quota\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"SnapshottableDirectoryStatusProto\"], baseName' = FName \"snapshot_quota\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 16}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.SnapshottableDirectoryStatusProto.snapshot_number\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"SnapshottableDirectoryStatusProto\"], baseName' = FName \"snapshot_number\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 24}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.SnapshottableDirectoryStatusProto.parent_fullpath\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"SnapshottableDirectoryStatusProto\"], baseName' = FName \"parent_fullpath\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 4}, wireTag = WireTag {getWireTag = 34}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 12}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".hadoop.hdfs.SnapshottableDirectoryListingProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"HdfsProtos\"], baseName = MName \"SnapshottableDirectoryListingProto\"}, descFilePath = [\"Hadoop\",\"Protos\",\"HdfsProtos\",\"SnapshottableDirectoryListingProto.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.SnapshottableDirectoryListingProto.snapshottableDirListing\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"SnapshottableDirectoryListingProto\"], baseName' = FName \"snapshottableDirListing\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = True, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".hadoop.hdfs.SnapshottableDirectoryStatusProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"HdfsProtos\"], baseName = MName \"SnapshottableDirectoryStatusProto\"}), hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".hadoop.hdfs.SnapshotDiffReportEntryProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"HdfsProtos\"], baseName = MName \"SnapshotDiffReportEntryProto\"}, descFilePath = [\"Hadoop\",\"Protos\",\"HdfsProtos\",\"SnapshotDiffReportEntryProto.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.SnapshotDiffReportEntryProto.fullpath\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"SnapshotDiffReportEntryProto\"], baseName' = FName \"fullpath\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 12}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.SnapshotDiffReportEntryProto.modificationLabel\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"SnapshotDiffReportEntryProto\"], baseName' = FName \"modificationLabel\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 18}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.SnapshotDiffReportEntryProto.targetPath\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"SnapshotDiffReportEntryProto\"], baseName' = FName \"targetPath\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 26}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 12}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".hadoop.hdfs.SnapshotDiffReportProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"HdfsProtos\"], baseName = MName \"SnapshotDiffReportProto\"}, descFilePath = [\"Hadoop\",\"Protos\",\"HdfsProtos\",\"SnapshotDiffReportProto.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.SnapshotDiffReportProto.snapshotRoot\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"SnapshotDiffReportProto\"], baseName' = FName \"snapshotRoot\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.SnapshotDiffReportProto.fromSnapshot\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"SnapshotDiffReportProto\"], baseName' = FName \"fromSnapshot\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 18}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.SnapshotDiffReportProto.toSnapshot\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"SnapshotDiffReportProto\"], baseName' = FName \"toSnapshot\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 26}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.SnapshotDiffReportProto.diffReportEntries\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"SnapshotDiffReportProto\"], baseName' = FName \"diffReportEntries\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 4}, wireTag = WireTag {getWireTag = 34}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = True, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".hadoop.hdfs.SnapshotDiffReportEntryProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"HdfsProtos\"], baseName = MName \"SnapshotDiffReportEntryProto\"}), hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".hadoop.hdfs.StorageInfoProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"HdfsProtos\"], baseName = MName \"StorageInfoProto\"}, descFilePath = [\"Hadoop\",\"Protos\",\"HdfsProtos\",\"StorageInfoProto.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.StorageInfoProto.layoutVersion\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"StorageInfoProto\"], baseName' = FName \"layoutVersion\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 8}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.StorageInfoProto.namespceID\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"StorageInfoProto\"], baseName' = FName \"namespceID\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 16}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.StorageInfoProto.clusterID\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"StorageInfoProto\"], baseName' = FName \"clusterID\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 26}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.StorageInfoProto.cTime\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"StorageInfoProto\"], baseName' = FName \"cTime\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 4}, wireTag = WireTag {getWireTag = 32}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 4}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".hadoop.hdfs.NamenodeRegistrationProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"HdfsProtos\"], baseName = MName \"NamenodeRegistrationProto\"}, descFilePath = [\"Hadoop\",\"Protos\",\"HdfsProtos\",\"NamenodeRegistrationProto.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.NamenodeRegistrationProto.rpcAddress\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"NamenodeRegistrationProto\"], baseName' = FName \"rpcAddress\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.NamenodeRegistrationProto.httpAddress\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"NamenodeRegistrationProto\"], baseName' = FName \"httpAddress\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 18}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.NamenodeRegistrationProto.storageInfo\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"NamenodeRegistrationProto\"], baseName' = FName \"storageInfo\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 26}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".hadoop.hdfs.StorageInfoProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"HdfsProtos\"], baseName = MName \"StorageInfoProto\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.NamenodeRegistrationProto.role\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"NamenodeRegistrationProto\"], baseName' = FName \"role\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 4}, wireTag = WireTag {getWireTag = 32}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 14}, typeName = Just (ProtoName {protobufName = FIName \".hadoop.hdfs.NamenodeRegistrationProto.NamenodeRoleProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"HdfsProtos\",MName \"NamenodeRegistrationProto\"], baseName = MName \"NamenodeRoleProto\"}), hsRawDefault = Just \"NAMENODE\", hsDefault = Just (HsDef'Enum \"NAMENODE\")}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".hadoop.hdfs.CheckpointSignatureProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"HdfsProtos\"], baseName = MName \"CheckpointSignatureProto\"}, descFilePath = [\"Hadoop\",\"Protos\",\"HdfsProtos\",\"CheckpointSignatureProto.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.CheckpointSignatureProto.blockPoolId\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"CheckpointSignatureProto\"], baseName' = FName \"blockPoolId\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.CheckpointSignatureProto.mostRecentCheckpointTxId\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"CheckpointSignatureProto\"], baseName' = FName \"mostRecentCheckpointTxId\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 16}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 4}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.CheckpointSignatureProto.curSegmentTxId\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"CheckpointSignatureProto\"], baseName' = FName \"curSegmentTxId\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 24}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 4}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.CheckpointSignatureProto.storageInfo\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"CheckpointSignatureProto\"], baseName' = FName \"storageInfo\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 4}, wireTag = WireTag {getWireTag = 34}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".hadoop.hdfs.StorageInfoProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"HdfsProtos\"], baseName = MName \"StorageInfoProto\"}), hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".hadoop.hdfs.NamenodeCommandProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"HdfsProtos\"], baseName = MName \"NamenodeCommandProto\"}, descFilePath = [\"Hadoop\",\"Protos\",\"HdfsProtos\",\"NamenodeCommandProto.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.NamenodeCommandProto.action\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"NamenodeCommandProto\"], baseName' = FName \"action\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 8}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.NamenodeCommandProto.type\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"NamenodeCommandProto\"], baseName' = FName \"type'\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 16}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 14}, typeName = Just (ProtoName {protobufName = FIName \".hadoop.hdfs.NamenodeCommandProto.Type\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"HdfsProtos\",MName \"NamenodeCommandProto\"], baseName = MName \"Type\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.NamenodeCommandProto.checkpointCmd\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"NamenodeCommandProto\"], baseName' = FName \"checkpointCmd\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 26}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".hadoop.hdfs.CheckpointCommandProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"HdfsProtos\"], baseName = MName \"CheckpointCommandProto\"}), hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".hadoop.hdfs.CheckpointCommandProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"HdfsProtos\"], baseName = MName \"CheckpointCommandProto\"}, descFilePath = [\"Hadoop\",\"Protos\",\"HdfsProtos\",\"CheckpointCommandProto.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.CheckpointCommandProto.signature\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"CheckpointCommandProto\"], baseName' = FName \"signature\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".hadoop.hdfs.CheckpointSignatureProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"HdfsProtos\"], baseName = MName \"CheckpointSignatureProto\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.CheckpointCommandProto.needToReturnImage\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"CheckpointCommandProto\"], baseName' = FName \"needToReturnImage\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 16}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 8}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".hadoop.hdfs.BlockProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"HdfsProtos\"], baseName = MName \"BlockProto\"}, descFilePath = [\"Hadoop\",\"Protos\",\"HdfsProtos\",\"BlockProto.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.BlockProto.blockId\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"BlockProto\"], baseName' = FName \"blockId\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 8}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 4}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.BlockProto.genStamp\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"BlockProto\"], baseName' = FName \"genStamp\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 16}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 4}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.BlockProto.numBytes\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"BlockProto\"], baseName' = FName \"numBytes\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 24}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 4}, typeName = Nothing, hsRawDefault = Just \"0\", hsDefault = Just (HsDef'Integer 0)}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".hadoop.hdfs.BlockWithLocationsProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"HdfsProtos\"], baseName = MName \"BlockWithLocationsProto\"}, descFilePath = [\"Hadoop\",\"Protos\",\"HdfsProtos\",\"BlockWithLocationsProto.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.BlockWithLocationsProto.block\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"BlockWithLocationsProto\"], baseName' = FName \"block\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".hadoop.hdfs.BlockProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"HdfsProtos\"], baseName = MName \"BlockProto\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.BlockWithLocationsProto.datanodeUuids\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"BlockWithLocationsProto\"], baseName' = FName \"datanodeUuids\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 18}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = True, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.BlockWithLocationsProto.storageUuids\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"BlockWithLocationsProto\"], baseName' = FName \"storageUuids\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 26}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = True, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.BlockWithLocationsProto.storageTypes\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"BlockWithLocationsProto\"], baseName' = FName \"storageTypes\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 4}, wireTag = WireTag {getWireTag = 32}, packedTag = Just (WireTag {getWireTag = 32},WireTag {getWireTag = 34}), wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = True, mightPack = True, typeCode = FieldType {getFieldType = 14}, typeName = Just (ProtoName {protobufName = FIName \".hadoop.hdfs.StorageTypeProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"HdfsProtos\"], baseName = MName \"StorageTypeProto\"}), hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".hadoop.hdfs.BlocksWithLocationsProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"HdfsProtos\"], baseName = MName \"BlocksWithLocationsProto\"}, descFilePath = [\"Hadoop\",\"Protos\",\"HdfsProtos\",\"BlocksWithLocationsProto.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.BlocksWithLocationsProto.blocks\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"BlocksWithLocationsProto\"], baseName' = FName \"blocks\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = True, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".hadoop.hdfs.BlockWithLocationsProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"HdfsProtos\"], baseName = MName \"BlockWithLocationsProto\"}), hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".hadoop.hdfs.RemoteEditLogProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"HdfsProtos\"], baseName = MName \"RemoteEditLogProto\"}, descFilePath = [\"Hadoop\",\"Protos\",\"HdfsProtos\",\"RemoteEditLogProto.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.RemoteEditLogProto.startTxId\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"RemoteEditLogProto\"], baseName' = FName \"startTxId\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 8}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 4}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.RemoteEditLogProto.endTxId\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"RemoteEditLogProto\"], baseName' = FName \"endTxId\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 16}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 4}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.RemoteEditLogProto.isInProgress\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"RemoteEditLogProto\"], baseName' = FName \"isInProgress\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 24}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 8}, typeName = Nothing, hsRawDefault = Just \"false\", hsDefault = Just (HsDef'Bool False)}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".hadoop.hdfs.RemoteEditLogManifestProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"HdfsProtos\"], baseName = MName \"RemoteEditLogManifestProto\"}, descFilePath = [\"Hadoop\",\"Protos\",\"HdfsProtos\",\"RemoteEditLogManifestProto.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.RemoteEditLogManifestProto.logs\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"RemoteEditLogManifestProto\"], baseName' = FName \"logs\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = True, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".hadoop.hdfs.RemoteEditLogProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"HdfsProtos\"], baseName = MName \"RemoteEditLogProto\"}), hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".hadoop.hdfs.NamespaceInfoProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"HdfsProtos\"], baseName = MName \"NamespaceInfoProto\"}, descFilePath = [\"Hadoop\",\"Protos\",\"HdfsProtos\",\"NamespaceInfoProto.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.NamespaceInfoProto.buildVersion\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"NamespaceInfoProto\"], baseName' = FName \"buildVersion\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.NamespaceInfoProto.unused\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"NamespaceInfoProto\"], baseName' = FName \"unused\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 16}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.NamespaceInfoProto.blockPoolID\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"NamespaceInfoProto\"], baseName' = FName \"blockPoolID\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 26}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.NamespaceInfoProto.storageInfo\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"NamespaceInfoProto\"], baseName' = FName \"storageInfo\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 4}, wireTag = WireTag {getWireTag = 34}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".hadoop.hdfs.StorageInfoProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"HdfsProtos\"], baseName = MName \"StorageInfoProto\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.NamespaceInfoProto.softwareVersion\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"NamespaceInfoProto\"], baseName' = FName \"softwareVersion\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 5}, wireTag = WireTag {getWireTag = 42}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.NamespaceInfoProto.capabilities\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"NamespaceInfoProto\"], baseName' = FName \"capabilities\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 6}, wireTag = WireTag {getWireTag = 48}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 4}, typeName = Nothing, hsRawDefault = Just \"0\", hsDefault = Just (HsDef'Integer 0)}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".hadoop.hdfs.BlockKeyProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"HdfsProtos\"], baseName = MName \"BlockKeyProto\"}, descFilePath = [\"Hadoop\",\"Protos\",\"HdfsProtos\",\"BlockKeyProto.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.BlockKeyProto.keyId\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"BlockKeyProto\"], baseName' = FName \"keyId\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 8}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.BlockKeyProto.expiryDate\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"BlockKeyProto\"], baseName' = FName \"expiryDate\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 16}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 4}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.BlockKeyProto.keyBytes\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"BlockKeyProto\"], baseName' = FName \"keyBytes\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 26}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 12}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".hadoop.hdfs.ExportedBlockKeysProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"HdfsProtos\"], baseName = MName \"ExportedBlockKeysProto\"}, descFilePath = [\"Hadoop\",\"Protos\",\"HdfsProtos\",\"ExportedBlockKeysProto.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.ExportedBlockKeysProto.isBlockTokenEnabled\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"ExportedBlockKeysProto\"], baseName' = FName \"isBlockTokenEnabled\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 8}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 8}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.ExportedBlockKeysProto.keyUpdateInterval\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"ExportedBlockKeysProto\"], baseName' = FName \"keyUpdateInterval\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 16}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 4}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.ExportedBlockKeysProto.tokenLifeTime\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"ExportedBlockKeysProto\"], baseName' = FName \"tokenLifeTime\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 24}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 4}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.ExportedBlockKeysProto.currentKey\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"ExportedBlockKeysProto\"], baseName' = FName \"currentKey\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 4}, wireTag = WireTag {getWireTag = 34}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".hadoop.hdfs.BlockKeyProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"HdfsProtos\"], baseName = MName \"BlockKeyProto\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.ExportedBlockKeysProto.allKeys\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"ExportedBlockKeysProto\"], baseName' = FName \"allKeys\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 5}, wireTag = WireTag {getWireTag = 42}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = True, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".hadoop.hdfs.BlockKeyProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"HdfsProtos\"], baseName = MName \"BlockKeyProto\"}), hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".hadoop.hdfs.RecoveringBlockProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"HdfsProtos\"], baseName = MName \"RecoveringBlockProto\"}, descFilePath = [\"Hadoop\",\"Protos\",\"HdfsProtos\",\"RecoveringBlockProto.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.RecoveringBlockProto.newGenStamp\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"RecoveringBlockProto\"], baseName' = FName \"newGenStamp\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 8}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 4}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.RecoveringBlockProto.block\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"RecoveringBlockProto\"], baseName' = FName \"block\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 18}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".hadoop.hdfs.LocatedBlockProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"HdfsProtos\"], baseName = MName \"LocatedBlockProto\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.RecoveringBlockProto.truncateBlock\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"RecoveringBlockProto\"], baseName' = FName \"truncateBlock\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 26}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".hadoop.hdfs.BlockProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"HdfsProtos\"], baseName = MName \"BlockProto\"}), hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".hadoop.hdfs.VersionRequestProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"HdfsProtos\"], baseName = MName \"VersionRequestProto\"}, descFilePath = [\"Hadoop\",\"Protos\",\"HdfsProtos\",\"VersionRequestProto.hs\"], isGroup = False, fields = fromList [], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".hadoop.hdfs.VersionResponseProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"HdfsProtos\"], baseName = MName \"VersionResponseProto\"}, descFilePath = [\"Hadoop\",\"Protos\",\"HdfsProtos\",\"VersionResponseProto.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.VersionResponseProto.info\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"VersionResponseProto\"], baseName' = FName \"info\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".hadoop.hdfs.NamespaceInfoProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"HdfsProtos\"], baseName = MName \"NamespaceInfoProto\"}), hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".hadoop.hdfs.SnapshotInfoProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"HdfsProtos\"], baseName = MName \"SnapshotInfoProto\"}, descFilePath = [\"Hadoop\",\"Protos\",\"HdfsProtos\",\"SnapshotInfoProto.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.SnapshotInfoProto.snapshotName\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"SnapshotInfoProto\"], baseName' = FName \"snapshotName\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.SnapshotInfoProto.snapshotRoot\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"SnapshotInfoProto\"], baseName' = FName \"snapshotRoot\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 18}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.SnapshotInfoProto.permission\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"SnapshotInfoProto\"], baseName' = FName \"permission\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 26}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".hadoop.hdfs.FsPermissionProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"HdfsProtos\"], baseName = MName \"FsPermissionProto\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.SnapshotInfoProto.owner\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"SnapshotInfoProto\"], baseName' = FName \"owner\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 4}, wireTag = WireTag {getWireTag = 34}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.SnapshotInfoProto.group\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"SnapshotInfoProto\"], baseName' = FName \"group\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 5}, wireTag = WireTag {getWireTag = 42}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.SnapshotInfoProto.createTime\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"SnapshotInfoProto\"], baseName' = FName \"createTime\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 6}, wireTag = WireTag {getWireTag = 50}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".hadoop.hdfs.RollingUpgradeStatusProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"HdfsProtos\"], baseName = MName \"RollingUpgradeStatusProto\"}, descFilePath = [\"Hadoop\",\"Protos\",\"HdfsProtos\",\"RollingUpgradeStatusProto.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.RollingUpgradeStatusProto.blockPoolId\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"RollingUpgradeStatusProto\"], baseName' = FName \"blockPoolId\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.RollingUpgradeStatusProto.finalized\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"HdfsProtos\",MName \"RollingUpgradeStatusProto\"], baseName' = FName \"finalized\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 16}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 8}, typeName = Nothing, hsRawDefault = Just \"false\", hsDefault = Just (HsDef'Bool False)}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False}], enums = [EnumInfo {enumName = ProtoName {protobufName = FIName \".hadoop.hdfs.StorageTypeProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"HdfsProtos\"], baseName = MName \"StorageTypeProto\"}, enumFilePath = [\"Hadoop\",\"Protos\",\"HdfsProtos\",\"StorageTypeProto.hs\"], enumValues = [(EnumCode {getEnumCode = 1},\"DISK\"),(EnumCode {getEnumCode = 2},\"SSD\"),(EnumCode {getEnumCode = 3},\"ARCHIVE\"),(EnumCode {getEnumCode = 4},\"RAM_DISK\")]},EnumInfo {enumName = ProtoName {protobufName = FIName \".hadoop.hdfs.CipherSuiteProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"HdfsProtos\"], baseName = MName \"CipherSuiteProto\"}, enumFilePath = [\"Hadoop\",\"Protos\",\"HdfsProtos\",\"CipherSuiteProto.hs\"], enumValues = [(EnumCode {getEnumCode = 1},\"UNKNOWN\"),(EnumCode {getEnumCode = 2},\"AES_CTR_NOPADDING\")]},EnumInfo {enumName = ProtoName {protobufName = FIName \".hadoop.hdfs.CryptoProtocolVersionProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"HdfsProtos\"], baseName = MName \"CryptoProtocolVersionProto\"}, enumFilePath = [\"Hadoop\",\"Protos\",\"HdfsProtos\",\"CryptoProtocolVersionProto.hs\"], enumValues = [(EnumCode {getEnumCode = 1},\"UNKNOWN_PROTOCOL_VERSION\"),(EnumCode {getEnumCode = 2},\"ENCRYPTION_ZONES\")]},EnumInfo {enumName = ProtoName {protobufName = FIName \".hadoop.hdfs.ChecksumTypeProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"HdfsProtos\"], baseName = MName \"ChecksumTypeProto\"}, enumFilePath = [\"Hadoop\",\"Protos\",\"HdfsProtos\",\"ChecksumTypeProto.hs\"], enumValues = [(EnumCode {getEnumCode = 0},\"CHECKSUM_NULL\"),(EnumCode {getEnumCode = 1},\"CHECKSUM_CRC32\"),(EnumCode {getEnumCode = 2},\"CHECKSUM_CRC32C\")]},EnumInfo {enumName = ProtoName {protobufName = FIName \".hadoop.hdfs.ReplicaStateProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"HdfsProtos\"], baseName = MName \"ReplicaStateProto\"}, enumFilePath = [\"Hadoop\",\"Protos\",\"HdfsProtos\",\"ReplicaStateProto.hs\"], enumValues = [(EnumCode {getEnumCode = 0},\"FINALIZED\"),(EnumCode {getEnumCode = 1},\"RBW\"),(EnumCode {getEnumCode = 2},\"RWR\"),(EnumCode {getEnumCode = 3},\"RUR\"),(EnumCode {getEnumCode = 4},\"TEMPORARY\")]},EnumInfo {enumName = ProtoName {protobufName = FIName \".hadoop.hdfs.DatanodeInfoProto.AdminState\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"HdfsProtos\",MName \"DatanodeInfoProto\"], baseName = MName \"AdminState\"}, enumFilePath = [\"Hadoop\",\"Protos\",\"HdfsProtos\",\"DatanodeInfoProto\",\"AdminState.hs\"], enumValues = [(EnumCode {getEnumCode = 0},\"NORMAL\"),(EnumCode {getEnumCode = 1},\"DECOMMISSION_INPROGRESS\"),(EnumCode {getEnumCode = 2},\"DECOMMISSIONED\")]},EnumInfo {enumName = ProtoName {protobufName = FIName \".hadoop.hdfs.DatanodeStorageProto.StorageState\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"HdfsProtos\",MName \"DatanodeStorageProto\"], baseName = MName \"StorageState\"}, enumFilePath = [\"Hadoop\",\"Protos\",\"HdfsProtos\",\"DatanodeStorageProto\",\"StorageState.hs\"], enumValues = [(EnumCode {getEnumCode = 0},\"NORMAL\"),(EnumCode {getEnumCode = 1},\"READ_ONLY_SHARED\")]},EnumInfo {enumName = ProtoName {protobufName = FIName \".hadoop.hdfs.HdfsFileStatusProto.FileType\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"HdfsProtos\",MName \"HdfsFileStatusProto\"], baseName = MName \"FileType\"}, enumFilePath = [\"Hadoop\",\"Protos\",\"HdfsProtos\",\"HdfsFileStatusProto\",\"FileType.hs\"], enumValues = [(EnumCode {getEnumCode = 1},\"IS_DIR\"),(EnumCode {getEnumCode = 2},\"IS_FILE\"),(EnumCode {getEnumCode = 3},\"IS_SYMLINK\")]},EnumInfo {enumName = ProtoName {protobufName = FIName \".hadoop.hdfs.NamenodeRegistrationProto.NamenodeRoleProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"HdfsProtos\",MName \"NamenodeRegistrationProto\"], baseName = MName \"NamenodeRoleProto\"}, enumFilePath = [\"Hadoop\",\"Protos\",\"HdfsProtos\",\"NamenodeRegistrationProto\",\"NamenodeRoleProto.hs\"], enumValues = [(EnumCode {getEnumCode = 1},\"NAMENODE\"),(EnumCode {getEnumCode = 2},\"BACKUP\"),(EnumCode {getEnumCode = 3},\"CHECKPOINT\")]},EnumInfo {enumName = ProtoName {protobufName = FIName \".hadoop.hdfs.NamenodeCommandProto.Type\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"HdfsProtos\",MName \"NamenodeCommandProto\"], baseName = MName \"Type\"}, enumFilePath = [\"Hadoop\",\"Protos\",\"HdfsProtos\",\"NamenodeCommandProto\",\"Type.hs\"], enumValues = [(EnumCode {getEnumCode = 0},\"NamenodeCommand\"),(EnumCode {getEnumCode = 1},\"CheckPointCommand\")]}], oneofs = [], services = [], knownKeyMap = fromList []}"
 
fileDescriptorProto :: FileDescriptorProto
fileDescriptorProto
 = P'.getFromBS (P'.wireGet 11)
    (P'.pack
      "\167\243\SOH\n\nhdfs.proto\DC2\vhadoop.hdfs\SUB\SOSecurity.proto\"c\n\DC2ExtendedBlockProto\DC2\SO\n\ACKpoolId\CAN\SOH \STX(\t\DC2\SI\n\ablockId\CAN\STX \STX(\EOT\DC2\ETB\n\SIgenerationStamp\CAN\ETX \STX(\EOT\DC2\DC3\n\bnumBytes\CAN\EOT \SOH(\EOT:\SOH0\"\153\SOH\n\SIDatanodeIDProto\DC2\SO\n\ACKipAddr\CAN\SOH \STX(\t\DC2\DLE\n\bhostName\CAN\STX \STX(\t\DC2\DC4\n\fdatanodeUuid\CAN\ETX \STX(\t\DC2\DLE\n\bxferPort\CAN\EOT \STX(\r\DC2\DLE\n\binfoPort\CAN\ENQ \STX(\r\DC2\SI\n\aipcPort\CAN\ACK \STX(\r\DC2\EM\n\SOinfoSecurePort\CAN\a \SOH(\r:\SOH0\"X\n\SYNDatanodeLocalInfoProto\DC2\ETB\n\SIsoftwareVersion\CAN\SOH \STX(\t\DC2\NAK\n\rconfigVersion\CAN\STX \STX(\t\DC2\SO\n\ACKuptime\CAN\ETX \STX(\EOT\"G\n\DC2DatanodeInfosProto\DC21\n\tdatanodes\CAN\SOH \ETX(\v2\RS.hadoop.hdfs.DatanodeInfoProto\"\186\ETX\n\DC1DatanodeInfoProto\DC2(\n\STXid\CAN\SOH \STX(\v2\FS.hadoop.hdfs.DatanodeIDProto\DC2\DC3\n\bcapacity\CAN\STX \SOH(\EOT:\SOH0\DC2\DC2\n\adfsUsed\CAN\ETX \SOH(\EOT:\SOH0\DC2\DC4\n\tremaining\CAN\EOT \SOH(\EOT:\SOH0\DC2\CAN\n\rblockPoolUsed\CAN\ENQ \SOH(\EOT:\SOH0\DC2\NAK\n\nlastUpdate\CAN\ACK \SOH(\EOT:\SOH0\DC2\ETB\n\fxceiverCount\CAN\a \SOH(\r:\SOH0\DC2\DLE\n\blocation\CAN\b \SOH(\t\DC2E\n\nadminState\CAN\n \SOH(\SO2).hadoop.hdfs.DatanodeInfoProto.AdminState:\ACKNORMAL\DC2\CAN\n\rcacheCapacity\CAN\v \SOH(\EOT:\SOH0\DC2\DC4\n\tcacheUsed\CAN\f \SOH(\EOT:\SOH0\DC2\RS\n\DC3lastUpdateMonotonic\CAN\r \SOH(\EOT:\SOH0\"I\n\nAdminState\DC2\n\n\ACKNORMAL\DLE\NUL\DC2\ESC\n\ETBDECOMMISSION_INPROGRESS\DLE\SOH\DC2\DC2\n\SODECOMMISSIONED\DLE\STX\"\222\SOH\n\DC4DatanodeStorageProto\DC2\DC3\n\vstorageUuid\CAN\SOH \STX(\t\DC2E\n\ENQstate\CAN\STX \SOH(\SO2..hadoop.hdfs.DatanodeStorageProto.StorageState:\ACKNORMAL\DC28\n\vstorageType\CAN\ETX \SOH(\SO2\GS.hadoop.hdfs.StorageTypeProto:\EOTDISK\"0\n\fStorageState\DC2\n\n\ACKNORMAL\DLE\NUL\DC2\DC4\n\DLEREAD_ONLY_SHARED\DLE\SOH\"\217\SOH\n\DC2StorageReportProto\DC2\US\n\vstorageUuid\CAN\SOH \STX(\tB\n\b\NUL\CAN\SOH(\NUL0\NULP\NUL\DC2\NAK\n\ACKfailed\CAN\STX \SOH(\b:\ENQfalse\DC2\DC3\n\bcapacity\CAN\ETX \SOH(\EOT:\SOH0\DC2\DC2\n\adfsUsed\CAN\EOT \SOH(\EOT:\SOH0\DC2\DC4\n\tremaining\CAN\ENQ \SOH(\EOT:\SOH0\DC2\CAN\n\rblockPoolUsed\CAN\ACK \SOH(\EOT:\SOH0\DC22\n\astorage\CAN\a \SOH(\v2!.hadoop.hdfs.DatanodeStorageProto\"\203\SOH\n\DC3ContentSummaryProto\DC2\SO\n\ACKlength\CAN\SOH \STX(\EOT\DC2\DC1\n\tfileCount\CAN\STX \STX(\EOT\DC2\SYN\n\SOdirectoryCount\CAN\ETX \STX(\EOT\DC2\r\n\ENQquota\CAN\EOT \STX(\EOT\DC2\NAK\n\rspaceConsumed\CAN\ENQ \STX(\EOT\DC2\DC2\n\nspaceQuota\CAN\ACK \STX(\EOT\DC2?\n\SOtypeQuotaInfos\CAN\a \SOH(\v2'.hadoop.hdfs.StorageTypeQuotaInfosProto\"[\n\SUBStorageTypeQuotaInfosProto\DC2=\n\rtypeQuotaInfo\CAN\SOH \ETX(\v2&.hadoop.hdfs.StorageTypeQuotaInfoProto\"i\n\EMStorageTypeQuotaInfoProto\DC2+\n\EOTtype\CAN\SOH \STX(\SO2\GS.hadoop.hdfs.StorageTypeProto\DC2\r\n\ENQquota\CAN\STX \STX(\EOT\DC2\DLE\n\bconsumed\CAN\ETX \STX(\EOT\"7\n\SYNCorruptFileBlocksProto\DC2\r\n\ENQfiles\CAN\SOH \ETX(\t\DC2\SO\n\ACKcookie\CAN\STX \STX(\t\"!\n\DC1FsPermissionProto\DC2\f\n\EOTperm\CAN\SOH \STX(\r\"H\n\DC1StorageTypesProto\DC23\n\fstorageTypes\CAN\SOH \ETX(\SO2\GS.hadoop.hdfs.StorageTypeProto\"\244\SOH\n\ETBBlockStoragePolicyProto\DC2\DLE\n\bpolicyId\CAN\SOH \STX(\r\DC2\f\n\EOTname\CAN\STX \STX(\t\DC26\n\SOcreationPolicy\CAN\ETX \STX(\v2\RS.hadoop.hdfs.StorageTypesProto\DC2>\n\SYNcreationFallbackPolicy\CAN\EOT \SOH(\v2\RS.hadoop.hdfs.StorageTypesProto\DC2A\n\EMreplicationFallbackPolicy\CAN\ENQ \SOH(\v2\RS.hadoop.hdfs.StorageTypesProto\")\n\DC1StorageUuidsProto\DC2\DC4\n\fstorageUuids\CAN\SOH \ETX(\t\"\166\STX\n\DC1LocatedBlockProto\DC2*\n\SOHb\CAN\SOH \STX(\v2\US.hadoop.hdfs.ExtendedBlockProto\DC2\SO\n\ACKoffset\CAN\STX \STX(\EOT\DC2,\n\EOTlocs\CAN\ETX \ETX(\v2\RS.hadoop.hdfs.DatanodeInfoProto\DC2\SI\n\acorrupt\CAN\EOT \STX(\b\DC2-\n\nblockToken\CAN\ENQ \STX(\v2\EM.hadoop.common.TokenProto\DC2\RS\n\bisCached\CAN\ACK \ETX(\bB\f\b\NUL\DLE\SOH\CAN\NUL(\NUL0\NULP\NUL\DC23\n\fstorageTypes\CAN\a \ETX(\SO2\GS.hadoop.hdfs.StorageTypeProto\DC2\DC2\n\nstorageIDs\CAN\b \ETX(\t\"\147\SOH\n\SYNDataEncryptionKeyProto\DC2\r\n\ENQkeyId\CAN\SOH \STX(\r\DC2\DC3\n\vblockPoolId\CAN\STX \STX(\t\DC2\r\n\ENQnonce\CAN\ETX \STX(\f\DC2\NAK\n\rencryptionKey\CAN\EOT \STX(\f\DC2\DC2\n\nexpiryDate\CAN\ENQ \STX(\EOT\DC2\ESC\n\DC3encryptionAlgorithm\CAN\ACK \SOH(\t\"\211\SOH\n\ETBFileEncryptionInfoProto\DC2,\n\ENQsuite\CAN\SOH \STX(\SO2\GS.hadoop.hdfs.CipherSuiteProto\DC2F\n\NAKcryptoProtocolVersion\CAN\STX \STX(\SO2'.hadoop.hdfs.CryptoProtocolVersionProto\DC2\v\n\ETXkey\CAN\ETX \STX(\f\DC2\n\n\STXiv\CAN\EOT \STX(\f\DC2\SI\n\akeyName\CAN\ENQ \STX(\t\DC2\CAN\n\DLEezKeyVersionName\CAN\ACK \STX(\t\"O\n\SUBPerFileEncryptionInfoProto\DC2\v\n\ETXkey\CAN\SOH \STX(\f\DC2\n\n\STXiv\CAN\STX \STX(\f\DC2\CAN\n\DLEezKeyVersionName\CAN\ETX \STX(\t\"\160\SOH\n\ETBZoneEncryptionInfoProto\DC2,\n\ENQsuite\CAN\SOH \STX(\SO2\GS.hadoop.hdfs.CipherSuiteProto\DC2F\n\NAKcryptoProtocolVersion\CAN\STX \STX(\SO2'.hadoop.hdfs.CryptoProtocolVersionProto\DC2\SI\n\akeyName\CAN\ETX \STX(\t\"}\n\DC1CipherOptionProto\DC2,\n\ENQsuite\CAN\SOH \STX(\SO2\GS.hadoop.hdfs.CipherSuiteProto\DC2\r\n\ENQinKey\CAN\STX \SOH(\f\DC2\f\n\EOTinIv\CAN\ETX \SOH(\f\DC2\SO\n\ACKoutKey\CAN\EOT \SOH(\f\DC2\r\n\ENQoutIv\CAN\ENQ \SOH(\f\"\133\STX\n\DC2LocatedBlocksProto\DC2\DC2\n\nfileLength\CAN\SOH \STX(\EOT\DC2.\n\ACKblocks\CAN\STX \ETX(\v2\RS.hadoop.hdfs.LocatedBlockProto\DC2\EM\n\DC1underConstruction\CAN\ETX \STX(\b\DC21\n\tlastBlock\CAN\EOT \SOH(\v2\RS.hadoop.hdfs.LocatedBlockProto\DC2\ESC\n\DC3isLastBlockComplete\CAN\ENQ \STX(\b\DC2@\n\DC2fileEncryptionInfo\CAN\ACK \SOH(\v2$.hadoop.hdfs.FileEncryptionInfoProto\"\168\EOT\n\DC3HdfsFileStatusProto\DC2;\n\bfileType\CAN\SOH \STX(\SO2).hadoop.hdfs.HdfsFileStatusProto.FileType\DC2\f\n\EOTpath\CAN\STX \STX(\f\DC2\SO\n\ACKlength\CAN\ETX \STX(\EOT\DC22\n\npermission\CAN\EOT \STX(\v2\RS.hadoop.hdfs.FsPermissionProto\DC2\r\n\ENQowner\CAN\ENQ \STX(\t\DC2\r\n\ENQgroup\CAN\ACK \STX(\t\DC2\EM\n\DC1modification_time\CAN\a \STX(\EOT\DC2\DC3\n\vaccess_time\CAN\b \STX(\EOT\DC2\SI\n\asymlink\CAN\t \SOH(\f\DC2\FS\n\DC1block_replication\CAN\n \SOH(\r:\SOH0\DC2\DC4\n\tblocksize\CAN\v \SOH(\EOT:\SOH0\DC22\n\tlocations\CAN\f \SOH(\v2\US.hadoop.hdfs.LocatedBlocksProto\DC2\DC1\n\ACKfileId\CAN\r \SOH(\EOT:\SOH0\DC2\ETB\n\vchildrenNum\CAN\SO \SOH(\ENQ:\STX-1\DC2@\n\DC2fileEncryptionInfo\CAN\SI \SOH(\v2$.hadoop.hdfs.FileEncryptionInfoProto\DC2\CAN\n\rstoragePolicy\CAN\DLE \SOH(\r:\SOH0\"3\n\bFileType\DC2\n\n\ACKIS_DIR\DLE\SOH\DC2\v\n\aIS_FILE\DLE\STX\DC2\SO\n\nIS_SYMLINK\DLE\ETX\"\142\STX\n\NAKFsServerDefaultsProto\DC2\DC1\n\tblockSize\CAN\SOH \STX(\EOT\DC2\CAN\n\DLEbytesPerChecksum\CAN\STX \STX(\r\DC2\ETB\n\SIwritePacketSize\CAN\ETX \STX(\r\DC2\DC3\n\vreplication\CAN\EOT \STX(\r\DC2\SYN\n\SOfileBufferSize\CAN\ENQ \STX(\r\DC2\"\n\DC3encryptDataTransfer\CAN\ACK \SOH(\b:\ENQfalse\DC2\CAN\n\rtrashInterval\CAN\a \SOH(\EOT:\SOH0\DC2D\n\fchecksumType\CAN\b \SOH(\SO2\RS.hadoop.hdfs.ChecksumTypeProto:\SOCHECKSUM_CRC32\"k\n\NAKDirectoryListingProto\DC28\n\SOpartialListing\CAN\SOH \ETX(\v2 .hadoop.hdfs.HdfsFileStatusProto\DC2\CAN\n\DLEremainingEntries\CAN\STX \STX(\r\"\162\SOH\n!SnapshottableDirectoryStatusProto\DC23\n\tdirStatus\CAN\SOH \STX(\v2 .hadoop.hdfs.HdfsFileStatusProto\DC2\SYN\n\SOsnapshot_quota\CAN\STX \STX(\r\DC2\ETB\n\SIsnapshot_number\CAN\ETX \STX(\r\DC2\ETB\n\SIparent_fullpath\CAN\EOT \STX(\f\"u\n\"SnapshottableDirectoryListingProto\DC2O\n\ETBsnapshottableDirListing\CAN\SOH \ETX(\v2..hadoop.hdfs.SnapshottableDirectoryStatusProto\"_\n\FSSnapshotDiffReportEntryProto\DC2\DLE\n\bfullpath\CAN\SOH \STX(\f\DC2\EM\n\DC1modificationLabel\CAN\STX \STX(\t\DC2\DC2\n\ntargetPath\CAN\ETX \SOH(\f\"\159\SOH\n\ETBSnapshotDiffReportProto\DC2\DC4\n\fsnapshotRoot\CAN\SOH \STX(\t\DC2\DC4\n\ffromSnapshot\CAN\STX \STX(\t\DC2\DC2\n\ntoSnapshot\CAN\ETX \STX(\t\DC2D\n\DC1diffReportEntries\CAN\EOT \ETX(\v2).hadoop.hdfs.SnapshotDiffReportEntryProto\"_\n\DLEStorageInfoProto\DC2\NAK\n\rlayoutVersion\CAN\SOH \STX(\r\DC2\DC2\n\nnamespceID\CAN\STX \STX(\r\DC2\DC1\n\tclusterID\CAN\ETX \STX(\t\DC2\r\n\ENQcTime\CAN\EOT \STX(\EOT\"\137\STX\n\EMNamenodeRegistrationProto\DC2\DC2\n\nrpcAddress\CAN\SOH \STX(\t\DC2\DC3\n\vhttpAddress\CAN\STX \STX(\t\DC22\n\vstorageInfo\CAN\ETX \STX(\v2\GS.hadoop.hdfs.StorageInfoProto\DC2P\n\EOTrole\CAN\EOT \SOH(\SO28.hadoop.hdfs.NamenodeRegistrationProto.NamenodeRoleProto:\bNAMENODE\"=\n\DC1NamenodeRoleProto\DC2\f\n\bNAMENODE\DLE\SOH\DC2\n\n\ACKBACKUP\DLE\STX\DC2\SO\n\nCHECKPOINT\DLE\ETX\"\157\SOH\n\CANCheckpointSignatureProto\DC2\DC3\n\vblockPoolId\CAN\SOH \STX(\t\DC2 \n\CANmostRecentCheckpointTxId\CAN\STX \STX(\EOT\DC2\SYN\n\SOcurSegmentTxId\CAN\ETX \STX(\EOT\DC22\n\vstorageInfo\CAN\EOT \STX(\v2\GS.hadoop.hdfs.StorageInfoProto\"\204\SOH\n\DC4NamenodeCommandProto\DC2\SO\n\ACKaction\CAN\SOH \STX(\r\DC24\n\EOTtype\CAN\STX \STX(\SO2&.hadoop.hdfs.NamenodeCommandProto.Type\DC2:\n\rcheckpointCmd\CAN\ETX \SOH(\v2#.hadoop.hdfs.CheckpointCommandProto\"2\n\EOTType\DC2\DC3\n\SINamenodeCommand\DLE\NUL\DC2\NAK\n\DC1CheckPointCommand\DLE\SOH\"m\n\SYNCheckpointCommandProto\DC28\n\tsignature\CAN\SOH \STX(\v2%.hadoop.hdfs.CheckpointSignatureProto\DC2\EM\n\DC1needToReturnImage\CAN\STX \STX(\b\"D\n\nBlockProto\DC2\SI\n\ablockId\CAN\SOH \STX(\EOT\DC2\DLE\n\bgenStamp\CAN\STX \STX(\EOT\DC2\DC3\n\bnumBytes\CAN\ETX \SOH(\EOT:\SOH0\"\163\SOH\n\ETBBlockWithLocationsProto\DC2&\n\ENQblock\CAN\SOH \STX(\v2\ETB.hadoop.hdfs.BlockProto\DC2\NAK\n\rdatanodeUuids\CAN\STX \ETX(\t\DC2\DC4\n\fstorageUuids\CAN\ETX \ETX(\t\DC23\n\fstorageTypes\CAN\EOT \ETX(\SO2\GS.hadoop.hdfs.StorageTypeProto\"P\n\CANBlocksWithLocationsProto\DC24\n\ACKblocks\CAN\SOH \ETX(\v2$.hadoop.hdfs.BlockWithLocationsProto\"U\n\DC2RemoteEditLogProto\DC2\DC1\n\tstartTxId\CAN\SOH \STX(\EOT\DC2\SI\n\aendTxId\CAN\STX \STX(\EOT\DC2\ESC\n\fisInProgress\CAN\ETX \SOH(\b:\ENQfalse\"K\n\SUBRemoteEditLogManifestProto\DC2-\n\EOTlogs\CAN\SOH \ETX(\v2\US.hadoop.hdfs.RemoteEditLogProto\"\181\SOH\n\DC2NamespaceInfoProto\DC2\DC4\n\fbuildVersion\CAN\SOH \STX(\t\DC2\SO\n\ACKunused\CAN\STX \STX(\r\DC2\DC3\n\vblockPoolID\CAN\ETX \STX(\t\DC22\n\vstorageInfo\CAN\EOT \STX(\v2\GS.hadoop.hdfs.StorageInfoProto\DC2\ETB\n\SIsoftwareVersion\CAN\ENQ \STX(\t\DC2\ETB\n\fcapabilities\CAN\ACK \SOH(\EOT:\SOH0\"D\n\rBlockKeyProto\DC2\r\n\ENQkeyId\CAN\SOH \STX(\r\DC2\DC2\n\nexpiryDate\CAN\STX \STX(\EOT\DC2\DLE\n\bkeyBytes\CAN\ETX \SOH(\f\"\196\SOH\n\SYNExportedBlockKeysProto\DC2\ESC\n\DC3isBlockTokenEnabled\CAN\SOH \STX(\b\DC2\EM\n\DC1keyUpdateInterval\CAN\STX \STX(\EOT\DC2\NAK\n\rtokenLifeTime\CAN\ETX \STX(\EOT\DC2.\n\ncurrentKey\CAN\EOT \STX(\v2\SUB.hadoop.hdfs.BlockKeyProto\DC2+\n\aallKeys\CAN\ENQ \ETX(\v2\SUB.hadoop.hdfs.BlockKeyProto\"\138\SOH\n\DC4RecoveringBlockProto\DC2\DC3\n\vnewGenStamp\CAN\SOH \STX(\EOT\DC2-\n\ENQblock\CAN\STX \STX(\v2\RS.hadoop.hdfs.LocatedBlockProto\DC2.\n\rtruncateBlock\CAN\ETX \SOH(\v2\ETB.hadoop.hdfs.BlockProto\"\NAK\n\DC3VersionRequestProto\"E\n\DC4VersionResponseProto\DC2-\n\EOTinfo\CAN\SOH \STX(\v2\US.hadoop.hdfs.NamespaceInfoProto\"\165\SOH\n\DC1SnapshotInfoProto\DC2\DC4\n\fsnapshotName\CAN\SOH \STX(\t\DC2\DC4\n\fsnapshotRoot\CAN\STX \STX(\t\DC22\n\npermission\CAN\ETX \STX(\v2\RS.hadoop.hdfs.FsPermissionProto\DC2\r\n\ENQowner\CAN\EOT \STX(\t\DC2\r\n\ENQgroup\CAN\ENQ \STX(\t\DC2\DC2\n\ncreateTime\CAN\ACK \STX(\t\"J\n\EMRollingUpgradeStatusProto\DC2\DC3\n\vblockPoolId\CAN\SOH \STX(\t\DC2\CAN\n\tfinalized\CAN\STX \SOH(\b:\ENQfalse*@\n\DLEStorageTypeProto\DC2\b\n\EOTDISK\DLE\SOH\DC2\a\n\ETXSSD\DLE\STX\DC2\v\n\aARCHIVE\DLE\ETX\DC2\f\n\bRAM_DISK\DLE\EOT*6\n\DLECipherSuiteProto\DC2\v\n\aUNKNOWN\DLE\SOH\DC2\NAK\n\DC1AES_CTR_NOPADDING\DLE\STX*P\n\SUBCryptoProtocolVersionProto\DC2\FS\n\CANUNKNOWN_PROTOCOL_VERSION\DLE\SOH\DC2\DC4\n\DLEENCRYPTION_ZONES\DLE\STX*O\n\DC1ChecksumTypeProto\DC2\DC1\n\rCHECKSUM_NULL\DLE\NUL\DC2\DC2\n\SOCHECKSUM_CRC32\DLE\SOH\DC2\DC3\n\SICHECKSUM_CRC32C\DLE\STX*L\n\DC1ReplicaStateProto\DC2\r\n\tFINALIZED\DLE\NUL\DC2\a\n\ETXRBW\DLE\SOH\DC2\a\n\ETXRWR\DLE\STX\DC2\a\n\ETXRUR\DLE\ETX\DC2\r\n\tTEMPORARY\DLE\EOTBL\n%org.apache.hadoop.hdfs.protocol.protoB\nHdfsProtosH\SOHP\NUL\128\SOH\NUL\136\SOH\NUL\144\SOH\NUL\160\SOH\SOH\184\SOH\NUL\216\SOH\NUL\248\SOH\NULJ\156\183\SOH\n\t\n\NUL\DC2\ENQ\FS\NUL\226\EOT\SOH\n\b\n\SOH\b\DC2\ETX\FS\NUL>\n\v\n\EOT\b\231\a\NUL\DC2\ETX\FS\NUL>\n\f\n\ENQ\b\231\a\NUL\STX\DC2\ETX\FS\a\DC3\n\r\n\ACK\b\231\a\NUL\STX\NUL\DC2\ETX\FS\a\DC3\n\SO\n\a\b\231\a\NUL\STX\NUL\SOH\DC2\ETX\FS\a\DC3\n\f\n\ENQ\b\231\a\NUL\a\DC2\ETX\FS\SYN=\n\b\n\SOH\b\DC2\ETX\GS\NUL+\n\v\n\EOT\b\231\a\SOH\DC2\ETX\GS\NUL+\n\f\n\ENQ\b\231\a\SOH\STX\DC2\ETX\GS\a\ESC\n\r\n\ACK\b\231\a\SOH\STX\NUL\DC2\ETX\GS\a\ESC\n\SO\n\a\b\231\a\SOH\STX\NUL\SOH\DC2\ETX\GS\a\ESC\n\f\n\ENQ\b\231\a\SOH\a\DC2\ETX\GS\RS*\n\b\n\SOH\b\DC2\ETX\RS\NUL,\n\v\n\EOT\b\231\a\STX\DC2\ETX\RS\NUL,\n\f\n\ENQ\b\231\a\STX\STX\DC2\ETX\RS\a$\n\r\n\ACK\b\231\a\STX\STX\NUL\DC2\ETX\RS\a$\n\SO\n\a\b\231\a\STX\STX\NUL\SOH\DC2\ETX\RS\a$\n\f\n\ENQ\b\231\a\STX\ETX\DC2\ETX\RS'+\n\b\n\SOH\STX\DC2\ETX\US\b\DC3\n\t\n\STX\ETX\NUL\DC2\ETX!\a\ETB\n/\n\STX\EOT\NUL\DC2\EOT&\NUL,\SOH\SUB#*\n Extended block idenfies a block\n\n\n\n\ETX\EOT\NUL\SOH\DC2\ETX&\b\SUB\n>\n\EOT\EOT\NUL\STX\NUL\DC2\ETX'\STX\GS\"1 Block pool id - gloablly unique across clusters\n\n\f\n\ENQ\EOT\NUL\STX\NUL\EOT\DC2\ETX'\STX\n\n\f\n\ENQ\EOT\NUL\STX\NUL\ENQ\DC2\ETX'\v\DC1\n\f\n\ENQ\EOT\NUL\STX\NUL\SOH\DC2\ETX'\DC2\CAN\n\f\n\ENQ\EOT\NUL\STX\NUL\ETX\DC2\ETX'\ESC\FS\n)\n\EOT\EOT\NUL\STX\SOH\DC2\ETX(\STX\RS\"\FS the local id within a pool\n\n\f\n\ENQ\EOT\NUL\STX\SOH\EOT\DC2\ETX(\STX\n\n\f\n\ENQ\EOT\NUL\STX\SOH\ENQ\DC2\ETX(\v\DC1\n\f\n\ENQ\EOT\NUL\STX\SOH\SOH\DC2\ETX(\DC2\EM\n\f\n\ENQ\EOT\NUL\STX\SOH\ETX\DC2\ETX(\FS\GS\n\v\n\EOT\EOT\NUL\STX\STX\DC2\ETX)\STX&\n\f\n\ENQ\EOT\NUL\STX\STX\EOT\DC2\ETX)\STX\n\n\f\n\ENQ\EOT\NUL\STX\STX\ENQ\DC2\ETX)\v\DC1\n\f\n\ENQ\EOT\NUL\STX\STX\SOH\DC2\ETX)\DC2!\n\f\n\ENQ\EOT\NUL\STX\STX\ETX\DC2\ETX)$%\n+\n\EOT\EOT\NUL\STX\ETX\DC2\ETX*\STX-\"\RS len does not belong in ebid \n\n\f\n\ENQ\EOT\NUL\STX\ETX\EOT\DC2\ETX*\STX\n\n\f\n\ENQ\EOT\NUL\STX\ETX\ENQ\DC2\ETX*\v\DC1\n\f\n\ENQ\EOT\NUL\STX\ETX\SOH\DC2\ETX*\DC2\SUB\n\f\n\ENQ\EOT\NUL\STX\ETX\ETX\DC2\ETX*\GS\RS\n\f\n\ENQ\EOT\NUL\STX\ETX\b\DC2\ETX*\US,\n\f\n\ENQ\EOT\NUL\STX\ETX\a\DC2\ETX**+\n%\n\STX\EOT\SOH\DC2\EOT1\NUL<\SOH\SUB\EM*\n Identifies a Datanode\n\n\n\n\ETX\EOT\SOH\SOH\DC2\ETX1\b\ETB\n\EM\n\EOT\EOT\SOH\STX\NUL\DC2\ETX2\STX\GS\"\f IP address\n\n\f\n\ENQ\EOT\SOH\STX\NUL\EOT\DC2\ETX2\STX\n\n\f\n\ENQ\EOT\SOH\STX\NUL\ENQ\DC2\ETX2\v\DC1\n\f\n\ENQ\EOT\SOH\STX\NUL\SOH\DC2\ETX2\DC2\CAN\n\f\n\ENQ\EOT\SOH\STX\NUL\ETX\DC2\ETX2\ESC\FS\n\ETB\n\EOT\EOT\SOH\STX\SOH\DC2\ETX3\STX\US\"\n hostname\n\n\f\n\ENQ\EOT\SOH\STX\SOH\EOT\DC2\ETX3\STX\n\n\f\n\ENQ\EOT\SOH\STX\SOH\ENQ\DC2\ETX3\v\DC1\n\f\n\ENQ\EOT\SOH\STX\SOH\SOH\DC2\ETX3\DC2\SUB\n\f\n\ENQ\EOT\SOH\STX\SOH\ETX\DC2\ETX3\GS\RS\n1\n\EOT\EOT\SOH\STX\STX\DC2\ETX4\STX#\"$ UUID assigned to the Datanode. For\n\n\f\n\ENQ\EOT\SOH\STX\STX\EOT\DC2\ETX4\STX\n\n\f\n\ENQ\EOT\SOH\STX\STX\ENQ\DC2\ETX4\v\DC1\n\f\n\ENQ\EOT\SOH\STX\STX\SOH\DC2\ETX4\DC2\RS\n\f\n\ENQ\EOT\SOH\STX\STX\ETX\DC2\ETX4!\"\nu\n\EOT\EOT\SOH\STX\ETX\DC2\ETX8\STX\US\SUBQ upgraded clusters this is the same\n as the original StorageID of the\n Datanode.\n\"\NAK data streaming port\n\n\f\n\ENQ\EOT\SOH\STX\ETX\EOT\DC2\ETX8\STX\n\n\f\n\ENQ\EOT\SOH\STX\ETX\ENQ\DC2\ETX8\v\DC1\n\f\n\ENQ\EOT\SOH\STX\ETX\SOH\DC2\ETX8\DC2\SUB\n\f\n\ENQ\EOT\SOH\STX\ETX\ETX\DC2\ETX8\GS\RS\n!\n\EOT\EOT\SOH\STX\EOT\DC2\ETX9\STX\US\"\DC4 datanode http port\n\n\f\n\ENQ\EOT\SOH\STX\EOT\EOT\DC2\ETX9\STX\n\n\f\n\ENQ\EOT\SOH\STX\EOT\ENQ\DC2\ETX9\v\DC1\n\f\n\ENQ\EOT\SOH\STX\EOT\SOH\DC2\ETX9\DC2\SUB\n\f\n\ENQ\EOT\SOH\STX\EOT\ETX\DC2\ETX9\GS\RS\n\RS\n\EOT\EOT\SOH\STX\ENQ\DC2\ETX:\STX\RS\"\DC1 ipc server port\n\n\f\n\ENQ\EOT\SOH\STX\ENQ\EOT\DC2\ETX:\STX\n\n\f\n\ENQ\EOT\SOH\STX\ENQ\ENQ\DC2\ETX:\v\DC1\n\f\n\ENQ\EOT\SOH\STX\ENQ\SOH\DC2\ETX:\DC2\EM\n\f\n\ENQ\EOT\SOH\STX\ENQ\ETX\DC2\ETX:\FS\GS\n\"\n\EOT\EOT\SOH\STX\ACK\DC2\ETX;\STX3\"\NAK datanode https port\n\n\f\n\ENQ\EOT\SOH\STX\ACK\EOT\DC2\ETX;\STX\n\n\f\n\ENQ\EOT\SOH\STX\ACK\ENQ\DC2\ETX;\v\DC1\n\f\n\ENQ\EOT\SOH\STX\ACK\SOH\DC2\ETX;\DC2 \n\f\n\ENQ\EOT\SOH\STX\ACK\ETX\DC2\ETX;#$\n\f\n\ENQ\EOT\SOH\STX\ACK\b\DC2\ETX;%2\n\f\n\ENQ\EOT\SOH\STX\ACK\a\DC2\ETX;01\n*\n\STX\EOT\STX\DC2\EOTA\NULE\SOH\SUB\RS*\n Datanode local information\n\n\n\n\ETX\EOT\STX\SOH\DC2\ETXA\b\RS\n\v\n\EOT\EOT\STX\STX\NUL\DC2\ETXB\STX&\n\f\n\ENQ\EOT\STX\STX\NUL\EOT\DC2\ETXB\STX\n\n\f\n\ENQ\EOT\STX\STX\NUL\ENQ\DC2\ETXB\v\DC1\n\f\n\ENQ\EOT\STX\STX\NUL\SOH\DC2\ETXB\DC2!\n\f\n\ENQ\EOT\STX\STX\NUL\ETX\DC2\ETXB$%\n\v\n\EOT\EOT\STX\STX\SOH\DC2\ETXC\STX$\n\f\n\ENQ\EOT\STX\STX\SOH\EOT\DC2\ETXC\STX\n\n\f\n\ENQ\EOT\STX\STX\SOH\ENQ\DC2\ETXC\v\DC1\n\f\n\ENQ\EOT\STX\STX\SOH\SOH\DC2\ETXC\DC2\US\n\f\n\ENQ\EOT\STX\STX\SOH\ETX\DC2\ETXC\"#\n\v\n\EOT\EOT\STX\STX\STX\DC2\ETXD\STX\GS\n\f\n\ENQ\EOT\STX\STX\STX\EOT\DC2\ETXD\STX\n\n\f\n\ENQ\EOT\STX\STX\STX\ENQ\DC2\ETXD\v\DC1\n\f\n\ENQ\EOT\STX\STX\STX\SOH\DC2\ETXD\DC2\CAN\n\f\n\ENQ\EOT\STX\STX\STX\ETX\DC2\ETXD\ESC\FS\n\"\n\STX\EOT\ETX\DC2\EOTJ\NULL\SOH\SUB\SYN*\n DatanodeInfo array\n\n\n\n\ETX\EOT\ETX\SOH\DC2\ETXJ\b\SUB\n\v\n\EOT\EOT\ETX\STX\NUL\DC2\ETXK\STX+\n\f\n\ENQ\EOT\ETX\STX\NUL\EOT\DC2\ETXK\STX\n\n\f\n\ENQ\EOT\ETX\STX\NUL\ACK\DC2\ETXK\v\FS\n\f\n\ENQ\EOT\ETX\STX\NUL\SOH\DC2\ETXK\GS&\n\f\n\ENQ\EOT\ETX\STX\NUL\ETX\DC2\ETXK)*\n(\n\STX\EOT\EOT\DC2\EOTQ\NULd\SOH\SUB\FS*\n The status of a Datanode\n\n\n\n\ETX\EOT\EOT\SOH\DC2\ETXQ\b\EM\n\v\n\EOT\EOT\EOT\STX\NUL\DC2\ETXR\STX\"\n\f\n\ENQ\EOT\EOT\STX\NUL\EOT\DC2\ETXR\STX\n\n\f\n\ENQ\EOT\EOT\STX\NUL\ACK\DC2\ETXR\v\SUB\n\f\n\ENQ\EOT\EOT\STX\NUL\SOH\DC2\ETXR\ESC\GS\n\f\n\ENQ\EOT\EOT\STX\NUL\ETX\DC2\ETXR !\n\v\n\EOT\EOT\EOT\STX\SOH\DC2\ETXS\STX-\n\f\n\ENQ\EOT\EOT\STX\SOH\EOT\DC2\ETXS\STX\n\n\f\n\ENQ\EOT\EOT\STX\SOH\ENQ\DC2\ETXS\v\DC1\n\f\n\ENQ\EOT\EOT\STX\SOH\SOH\DC2\ETXS\DC2\SUB\n\f\n\ENQ\EOT\EOT\STX\SOH\ETX\DC2\ETXS\GS\RS\n\f\n\ENQ\EOT\EOT\STX\SOH\b\DC2\ETXS\US,\n\f\n\ENQ\EOT\EOT\STX\SOH\a\DC2\ETXS*+\n\v\n\EOT\EOT\EOT\STX\STX\DC2\ETXT\STX,\n\f\n\ENQ\EOT\EOT\STX\STX\EOT\DC2\ETXT\STX\n\n\f\n\ENQ\EOT\EOT\STX\STX\ENQ\DC2\ETXT\v\DC1\n\f\n\ENQ\EOT\EOT\STX\STX\SOH\DC2\ETXT\DC2\EM\n\f\n\ENQ\EOT\EOT\STX\STX\ETX\DC2\ETXT\FS\GS\n\f\n\ENQ\EOT\EOT\STX\STX\b\DC2\ETXT\RS+\n\f\n\ENQ\EOT\EOT\STX\STX\a\DC2\ETXT)*\n\v\n\EOT\EOT\EOT\STX\ETX\DC2\ETXU\STX.\n\f\n\ENQ\EOT\EOT\STX\ETX\EOT\DC2\ETXU\STX\n\n\f\n\ENQ\EOT\EOT\STX\ETX\ENQ\DC2\ETXU\v\DC1\n\f\n\ENQ\EOT\EOT\STX\ETX\SOH\DC2\ETXU\DC2\ESC\n\f\n\ENQ\EOT\EOT\STX\ETX\ETX\DC2\ETXU\RS\US\n\f\n\ENQ\EOT\EOT\STX\ETX\b\DC2\ETXU -\n\f\n\ENQ\EOT\EOT\STX\ETX\a\DC2\ETXU+,\n\v\n\EOT\EOT\EOT\STX\EOT\DC2\ETXV\STX2\n\f\n\ENQ\EOT\EOT\STX\EOT\EOT\DC2\ETXV\STX\n\n\f\n\ENQ\EOT\EOT\STX\EOT\ENQ\DC2\ETXV\v\DC1\n\f\n\ENQ\EOT\EOT\STX\EOT\SOH\DC2\ETXV\DC2\US\n\f\n\ENQ\EOT\EOT\STX\EOT\ETX\DC2\ETXV\"#\n\f\n\ENQ\EOT\EOT\STX\EOT\b\DC2\ETXV$1\n\f\n\ENQ\EOT\EOT\STX\EOT\a\DC2\ETXV/0\n\v\n\EOT\EOT\EOT\STX\ENQ\DC2\ETXW\STX/\n\f\n\ENQ\EOT\EOT\STX\ENQ\EOT\DC2\ETXW\STX\n\n\f\n\ENQ\EOT\EOT\STX\ENQ\ENQ\DC2\ETXW\v\DC1\n\f\n\ENQ\EOT\EOT\STX\ENQ\SOH\DC2\ETXW\DC2\FS\n\f\n\ENQ\EOT\EOT\STX\ENQ\ETX\DC2\ETXW\US \n\f\n\ENQ\EOT\EOT\STX\ENQ\b\DC2\ETXW!.\n\f\n\ENQ\EOT\EOT\STX\ENQ\a\DC2\ETXW,-\n\v\n\EOT\EOT\EOT\STX\ACK\DC2\ETXX\STX1\n\f\n\ENQ\EOT\EOT\STX\ACK\EOT\DC2\ETXX\STX\n\n\f\n\ENQ\EOT\EOT\STX\ACK\ENQ\DC2\ETXX\v\DC1\n\f\n\ENQ\EOT\EOT\STX\ACK\SOH\DC2\ETXX\DC2\RS\n\f\n\ENQ\EOT\EOT\STX\ACK\ETX\DC2\ETXX!\"\n\f\n\ENQ\EOT\EOT\STX\ACK\b\DC2\ETXX#0\n\f\n\ENQ\EOT\EOT\STX\ACK\a\DC2\ETXX./\n\v\n\EOT\EOT\EOT\STX\a\DC2\ETXY\STX\US\n\f\n\ENQ\EOT\EOT\STX\a\EOT\DC2\ETXY\STX\n\n\f\n\ENQ\EOT\EOT\STX\a\ENQ\DC2\ETXY\v\DC1\n\f\n\ENQ\EOT\EOT\STX\a\SOH\DC2\ETXY\DC2\SUB\n\f\n\ENQ\EOT\EOT\STX\a\ETX\DC2\ETXY\GS\RS\n\f\n\EOT\EOT\EOT\EOT\NUL\DC2\EOTZ\STX^\ETX\n\f\n\ENQ\EOT\EOT\EOT\NUL\SOH\DC2\ETXZ\a\DC1\n\r\n\ACK\EOT\EOT\EOT\NUL\STX\NUL\DC2\ETX[\EOT\SI\n\SO\n\a\EOT\EOT\EOT\NUL\STX\NUL\SOH\DC2\ETX[\EOT\n\n\SO\n\a\EOT\EOT\EOT\NUL\STX\NUL\STX\DC2\ETX[\r\SO\n\r\n\ACK\EOT\EOT\EOT\NUL\STX\SOH\DC2\ETX\\\EOT \n\SO\n\a\EOT\EOT\EOT\NUL\STX\SOH\SOH\DC2\ETX\\\EOT\ESC\n\SO\n\a\EOT\EOT\EOT\NUL\STX\SOH\STX\DC2\ETX\\\RS\US\n\r\n\ACK\EOT\EOT\EOT\NUL\STX\STX\DC2\ETX]\EOT\ETB\n\SO\n\a\EOT\EOT\EOT\NUL\STX\STX\SOH\DC2\ETX]\EOT\DC2\n\SO\n\a\EOT\EOT\EOT\NUL\STX\STX\STX\DC2\ETX]\NAK\SYN\n\v\n\EOT\EOT\EOT\STX\b\DC2\ETX`\STX9\n\f\n\ENQ\EOT\EOT\STX\b\EOT\DC2\ETX`\STX\n\n\f\n\ENQ\EOT\EOT\STX\b\ACK\DC2\ETX`\v\NAK\n\f\n\ENQ\EOT\EOT\STX\b\SOH\DC2\ETX`\SYN \n\f\n\ENQ\EOT\EOT\STX\b\ETX\DC2\ETX`#%\n\f\n\ENQ\EOT\EOT\STX\b\b\DC2\ETX`&8\n\f\n\ENQ\EOT\EOT\STX\b\a\DC2\ETX`17\n\v\n\EOT\EOT\EOT\STX\t\DC2\ETXa\STX3\n\f\n\ENQ\EOT\EOT\STX\t\EOT\DC2\ETXa\STX\n\n\f\n\ENQ\EOT\EOT\STX\t\ENQ\DC2\ETXa\v\DC1\n\f\n\ENQ\EOT\EOT\STX\t\SOH\DC2\ETXa\DC2\US\n\f\n\ENQ\EOT\EOT\STX\t\ETX\DC2\ETXa\"$\n\f\n\ENQ\EOT\EOT\STX\t\b\DC2\ETXa%2\n\f\n\ENQ\EOT\EOT\STX\t\a\DC2\ETXa01\n\v\n\EOT\EOT\EOT\STX\n\DC2\ETXb\STX/\n\f\n\ENQ\EOT\EOT\STX\n\EOT\DC2\ETXb\STX\n\n\f\n\ENQ\EOT\EOT\STX\n\ENQ\DC2\ETXb\v\DC1\n\f\n\ENQ\EOT\EOT\STX\n\SOH\DC2\ETXb\DC2\ESC\n\f\n\ENQ\EOT\EOT\STX\n\ETX\DC2\ETXb\RS \n\f\n\ENQ\EOT\EOT\STX\n\b\DC2\ETXb!.\n\f\n\ENQ\EOT\EOT\STX\n\a\DC2\ETXb,-\n\v\n\EOT\EOT\EOT\STX\v\DC2\ETXc\STX9\n\f\n\ENQ\EOT\EOT\STX\v\EOT\DC2\ETXc\STX\n\n\f\n\ENQ\EOT\EOT\STX\v\ENQ\DC2\ETXc\v\DC1\n\f\n\ENQ\EOT\EOT\STX\v\SOH\DC2\ETXc\DC2%\n\f\n\ENQ\EOT\EOT\STX\v\ETX\DC2\ETXc(*\n\f\n\ENQ\EOT\EOT\STX\v\b\DC2\ETXc+8\n\f\n\ENQ\EOT\EOT\STX\v\a\DC2\ETXc67\n>\n\STX\EOT\ENQ\DC2\EOTi\NULr\SOH\SUB2*\n Represents a storage available on the datanode\n\n\n\n\ETX\EOT\ENQ\SOH\DC2\ETXi\b\FS\n\f\n\EOT\EOT\ENQ\EOT\NUL\DC2\EOTj\STXm\ETX\n\f\n\ENQ\EOT\ENQ\EOT\NUL\SOH\DC2\ETXj\a\DC3\n\r\n\ACK\EOT\ENQ\EOT\NUL\STX\NUL\DC2\ETXk\EOT\SI\n\SO\n\a\EOT\ENQ\EOT\NUL\STX\NUL\SOH\DC2\ETXk\EOT\n\n\SO\n\a\EOT\ENQ\EOT\NUL\STX\NUL\STX\DC2\ETXk\r\SO\n\r\n\ACK\EOT\ENQ\EOT\NUL\STX\SOH\DC2\ETXl\EOT\EM\n\SO\n\a\EOT\ENQ\EOT\NUL\STX\SOH\SOH\DC2\ETXl\EOT\DC4\n\SO\n\a\EOT\ENQ\EOT\NUL\STX\SOH\STX\DC2\ETXl\ETB\CAN\n\v\n\EOT\EOT\ENQ\STX\NUL\DC2\ETXo\STX\"\n\f\n\ENQ\EOT\ENQ\STX\NUL\EOT\DC2\ETXo\STX\n\n\f\n\ENQ\EOT\ENQ\STX\NUL\ENQ\DC2\ETXo\v\DC1\n\f\n\ENQ\EOT\ENQ\STX\NUL\SOH\DC2\ETXo\DC2\GS\n\f\n\ENQ\EOT\ENQ\STX\NUL\ETX\DC2\ETXo !\n\v\n\EOT\EOT\ENQ\STX\SOH\DC2\ETXp\STX5\n\f\n\ENQ\EOT\ENQ\STX\SOH\EOT\DC2\ETXp\STX\n\n\f\n\ENQ\EOT\ENQ\STX\SOH\ACK\DC2\ETXp\v\ETB\n\f\n\ENQ\EOT\ENQ\STX\SOH\SOH\DC2\ETXp\CAN\GS\n\f\n\ENQ\EOT\ENQ\STX\SOH\ETX\DC2\ETXp !\n\f\n\ENQ\EOT\ENQ\STX\SOH\b\DC2\ETXp\"4\n\f\n\ENQ\EOT\ENQ\STX\SOH\a\DC2\ETXp-3\n\v\n\EOT\EOT\ENQ\STX\STX\DC2\ETXq\STX=\n\f\n\ENQ\EOT\ENQ\STX\STX\EOT\DC2\ETXq\STX\n\n\f\n\ENQ\EOT\ENQ\STX\STX\ACK\DC2\ETXq\v\ESC\n\f\n\ENQ\EOT\ENQ\STX\STX\SOH\DC2\ETXq\FS'\n\f\n\ENQ\EOT\ENQ\STX\STX\ETX\DC2\ETXq*+\n\f\n\ENQ\EOT\ENQ\STX\STX\b\DC2\ETXq,<\n\f\n\ENQ\EOT\ENQ\STX\STX\a\DC2\ETXq7;\n\n\n\STX\EOT\ACK\DC2\EOTt\NUL|\SOH\n\n\n\ETX\EOT\ACK\SOH\DC2\ETXt\b\SUB\n\v\n\EOT\EOT\ACK\STX\NUL\DC2\ETXu\STX8\n\f\n\ENQ\EOT\ACK\STX\NUL\EOT\DC2\ETXu\STX\n\n\f\n\ENQ\EOT\ACK\STX\NUL\ENQ\DC2\ETXu\v\DC1\n\f\n\ENQ\EOT\ACK\STX\NUL\SOH\DC2\ETXu\DC2\GS\n\f\n\ENQ\EOT\ACK\STX\NUL\ETX\DC2\ETXu !\n\f\n\ENQ\EOT\ACK\STX\NUL\b\DC2\ETXu\"7\n\SI\n\b\EOT\ACK\STX\NUL\b\231\a\NUL\DC2\ETXu$5\n\DLE\n\t\EOT\ACK\STX\NUL\b\231\a\NUL\STX\DC2\ETXu$.\n\DC1\n\n\EOT\ACK\STX\NUL\b\231\a\NUL\STX\NUL\DC2\ETXu$.\n\DC2\n\v\EOT\ACK\STX\NUL\b\231\a\NUL\STX\NUL\SOH\DC2\ETXu$.\n\DLE\n\t\EOT\ACK\STX\NUL\b\231\a\NUL\ETX\DC2\ETXu15\n\v\n\EOT\EOT\ACK\STX\SOH\DC2\ETXv\STX/\n\f\n\ENQ\EOT\ACK\STX\SOH\EOT\DC2\ETXv\STX\n\n\f\n\ENQ\EOT\ACK\STX\SOH\ENQ\DC2\ETXv\v\SI\n\f\n\ENQ\EOT\ACK\STX\SOH\SOH\DC2\ETXv\DLE\SYN\n\f\n\ENQ\EOT\ACK\STX\SOH\ETX\DC2\ETXv\EM\SUB\n\f\n\ENQ\EOT\ACK\STX\SOH\b\DC2\ETXv\ESC.\n\f\n\ENQ\EOT\ACK\STX\SOH\a\DC2\ETXv',\n\v\n\EOT\EOT\ACK\STX\STX\DC2\ETXw\STX/\n\f\n\ENQ\EOT\ACK\STX\STX\EOT\DC2\ETXw\STX\n\n\f\n\ENQ\EOT\ACK\STX\STX\ENQ\DC2\ETXw\v\DC1\n\f\n\ENQ\EOT\ACK\STX\STX\SOH\DC2\ETXw\DC2\SUB\n\f\n\ENQ\EOT\ACK\STX\STX\ETX\DC2\ETXw\GS\RS\n\f\n\ENQ\EOT\ACK\STX\STX\b\DC2\ETXw\US.\n\f\n\ENQ\EOT\ACK\STX\STX\a\DC2\ETXw+,\n\v\n\EOT\EOT\ACK\STX\ETX\DC2\ETXx\STX.\n\f\n\ENQ\EOT\ACK\STX\ETX\EOT\DC2\ETXx\STX\n\n\f\n\ENQ\EOT\ACK\STX\ETX\ENQ\DC2\ETXx\v\DC1\n\f\n\ENQ\EOT\ACK\STX\ETX\SOH\DC2\ETXx\DC2\EM\n\f\n\ENQ\EOT\ACK\STX\ETX\ETX\DC2\ETXx\FS\GS\n\f\n\ENQ\EOT\ACK\STX\ETX\b\DC2\ETXx\RS-\n\f\n\ENQ\EOT\ACK\STX\ETX\a\DC2\ETXx*+\n\v\n\EOT\EOT\ACK\STX\EOT\DC2\ETXy\STX0\n\f\n\ENQ\EOT\ACK\STX\EOT\EOT\DC2\ETXy\STX\n\n\f\n\ENQ\EOT\ACK\STX\EOT\ENQ\DC2\ETXy\v\DC1\n\f\n\ENQ\EOT\ACK\STX\EOT\SOH\DC2\ETXy\DC2\ESC\n\f\n\ENQ\EOT\ACK\STX\EOT\ETX\DC2\ETXy\RS\US\n\f\n\ENQ\EOT\ACK\STX\EOT\b\DC2\ETXy /\n\f\n\ENQ\EOT\ACK\STX\EOT\a\DC2\ETXy,-\n\v\n\EOT\EOT\ACK\STX\ENQ\DC2\ETXz\STX4\n\f\n\ENQ\EOT\ACK\STX\ENQ\EOT\DC2\ETXz\STX\n\n\f\n\ENQ\EOT\ACK\STX\ENQ\ENQ\DC2\ETXz\v\DC1\n\f\n\ENQ\EOT\ACK\STX\ENQ\SOH\DC2\ETXz\DC2\US\n\f\n\ENQ\EOT\ACK\STX\ENQ\ETX\DC2\ETXz\"#\n\f\n\ENQ\EOT\ACK\STX\ENQ\b\DC2\ETXz$3\n\f\n\ENQ\EOT\ACK\STX\ENQ\a\DC2\ETXz01\n%\n\EOT\EOT\ACK\STX\ACK\DC2\ETX{\STX,\"\CAN supersedes StorageUuid\n\n\f\n\ENQ\EOT\ACK\STX\ACK\EOT\DC2\ETX{\STX\n\n\f\n\ENQ\EOT\ACK\STX\ACK\ACK\DC2\ETX{\v\US\n\f\n\ENQ\EOT\ACK\STX\ACK\SOH\DC2\ETX{ '\n\f\n\ENQ\EOT\ACK\STX\ACK\ETX\DC2\ETX{*+\n0\n\STX\EOT\a\DC2\ACK\129\SOH\NUL\137\SOH\SOH\SUB\"*\n Summary of a file or directory\n\n\v\n\ETX\EOT\a\SOH\DC2\EOT\129\SOH\b\ESC\n\f\n\EOT\EOT\a\STX\NUL\DC2\EOT\130\SOH\STX\GS\n\r\n\ENQ\EOT\a\STX\NUL\EOT\DC2\EOT\130\SOH\STX\n\n\r\n\ENQ\EOT\a\STX\NUL\ENQ\DC2\EOT\130\SOH\v\DC1\n\r\n\ENQ\EOT\a\STX\NUL\SOH\DC2\EOT\130\SOH\DC2\CAN\n\r\n\ENQ\EOT\a\STX\NUL\ETX\DC2\EOT\130\SOH\ESC\FS\n\f\n\EOT\EOT\a\STX\SOH\DC2\EOT\131\SOH\STX \n\r\n\ENQ\EOT\a\STX\SOH\EOT\DC2\EOT\131\SOH\STX\n\n\r\n\ENQ\EOT\a\STX\SOH\ENQ\DC2\EOT\131\SOH\v\DC1\n\r\n\ENQ\EOT\a\STX\SOH\SOH\DC2\EOT\131\SOH\DC2\ESC\n\r\n\ENQ\EOT\a\STX\SOH\ETX\DC2\EOT\131\SOH\RS\US\n\f\n\EOT\EOT\a\STX\STX\DC2\EOT\132\SOH\STX%\n\r\n\ENQ\EOT\a\STX\STX\EOT\DC2\EOT\132\SOH\STX\n\n\r\n\ENQ\EOT\a\STX\STX\ENQ\DC2\EOT\132\SOH\v\DC1\n\r\n\ENQ\EOT\a\STX\STX\SOH\DC2\EOT\132\SOH\DC2 \n\r\n\ENQ\EOT\a\STX\STX\ETX\DC2\EOT\132\SOH#$\n\f\n\EOT\EOT\a\STX\ETX\DC2\EOT\133\SOH\STX\FS\n\r\n\ENQ\EOT\a\STX\ETX\EOT\DC2\EOT\133\SOH\STX\n\n\r\n\ENQ\EOT\a\STX\ETX\ENQ\DC2\EOT\133\SOH\v\DC1\n\r\n\ENQ\EOT\a\STX\ETX\SOH\DC2\EOT\133\SOH\DC2\ETB\n\r\n\ENQ\EOT\a\STX\ETX\ETX\DC2\EOT\133\SOH\SUB\ESC\n\f\n\EOT\EOT\a\STX\EOT\DC2\EOT\134\SOH\STX$\n\r\n\ENQ\EOT\a\STX\EOT\EOT\DC2\EOT\134\SOH\STX\n\n\r\n\ENQ\EOT\a\STX\EOT\ENQ\DC2\EOT\134\SOH\v\DC1\n\r\n\ENQ\EOT\a\STX\EOT\SOH\DC2\EOT\134\SOH\DC2\US\n\r\n\ENQ\EOT\a\STX\EOT\ETX\DC2\EOT\134\SOH\"#\n\f\n\EOT\EOT\a\STX\ENQ\DC2\EOT\135\SOH\STX!\n\r\n\ENQ\EOT\a\STX\ENQ\EOT\DC2\EOT\135\SOH\STX\n\n\r\n\ENQ\EOT\a\STX\ENQ\ENQ\DC2\EOT\135\SOH\v\DC1\n\r\n\ENQ\EOT\a\STX\ENQ\SOH\DC2\EOT\135\SOH\DC2\FS\n\r\n\ENQ\EOT\a\STX\ENQ\ETX\DC2\EOT\135\SOH\US \n\f\n\EOT\EOT\a\STX\ACK\DC2\EOT\136\SOH\STX9\n\r\n\ENQ\EOT\a\STX\ACK\EOT\DC2\EOT\136\SOH\STX\n\n\r\n\ENQ\EOT\a\STX\ACK\ACK\DC2\EOT\136\SOH\v%\n\r\n\ENQ\EOT\a\STX\ACK\SOH\DC2\EOT\136\SOH&4\n\r\n\ENQ\EOT\a\STX\ACK\ETX\DC2\EOT\136\SOH78\nQ\n\STX\EOT\b\DC2\ACK\142\SOH\NUL\144\SOH\SOH\SUBC*\n Storage type quota and usage information of a file or directory\n\n\v\n\ETX\EOT\b\SOH\DC2\EOT\142\SOH\b\"\n\f\n\EOT\EOT\b\STX\NUL\DC2\EOT\143\SOH\STX7\n\r\n\ENQ\EOT\b\STX\NUL\EOT\DC2\EOT\143\SOH\STX\n\n\r\n\ENQ\EOT\b\STX\NUL\ACK\DC2\EOT\143\SOH\v$\n\r\n\ENQ\EOT\b\STX\NUL\SOH\DC2\EOT\143\SOH%2\n\r\n\ENQ\EOT\b\STX\NUL\ETX\DC2\EOT\143\SOH56\n\f\n\STX\EOT\t\DC2\ACK\146\SOH\NUL\150\SOH\SOH\n\v\n\ETX\EOT\t\SOH\DC2\EOT\146\SOH\b!\n\f\n\EOT\EOT\t\STX\NUL\DC2\EOT\147\SOH\STX%\n\r\n\ENQ\EOT\t\STX\NUL\EOT\DC2\EOT\147\SOH\STX\n\n\r\n\ENQ\EOT\t\STX\NUL\ACK\DC2\EOT\147\SOH\v\ESC\n\r\n\ENQ\EOT\t\STX\NUL\SOH\DC2\EOT\147\SOH\FS \n\r\n\ENQ\EOT\t\STX\NUL\ETX\DC2\EOT\147\SOH#$\n\f\n\EOT\EOT\t\STX\SOH\DC2\EOT\148\SOH\STX\FS\n\r\n\ENQ\EOT\t\STX\SOH\EOT\DC2\EOT\148\SOH\STX\n\n\r\n\ENQ\EOT\t\STX\SOH\ENQ\DC2\EOT\148\SOH\v\DC1\n\r\n\ENQ\EOT\t\STX\SOH\SOH\DC2\EOT\148\SOH\DC2\ETB\n\r\n\ENQ\EOT\t\STX\SOH\ETX\DC2\EOT\148\SOH\SUB\ESC\n\f\n\EOT\EOT\t\STX\STX\DC2\EOT\149\SOH\STX\US\n\r\n\ENQ\EOT\t\STX\STX\EOT\DC2\EOT\149\SOH\STX\n\n\r\n\ENQ\EOT\t\STX\STX\ENQ\DC2\EOT\149\SOH\v\DC1\n\r\n\ENQ\EOT\t\STX\STX\SOH\DC2\EOT\149\SOH\DC2\SUB\n\r\n\ENQ\EOT\t\STX\STX\ETX\DC2\EOT\149\SOH\GS\RS\n\149\SOH\n\STX\EOT\n\DC2\ACK\157\SOH\NUL\160\SOH\SOH\SUB\134\SOH*\n Contains a list of paths corresponding to corrupt files and a cookie\n used for iterative calls to NameNode.listCorruptFileBlocks.\n\n\n\v\n\ETX\EOT\n\SOH\DC2\EOT\157\SOH\b\RS\n\f\n\EOT\EOT\n\STX\NUL\DC2\EOT\158\SOH\SOH\ESC\n\r\n\ENQ\EOT\n\STX\NUL\EOT\DC2\EOT\158\SOH\SOH\t\n\r\n\ENQ\EOT\n\STX\NUL\ENQ\DC2\EOT\158\SOH\n\DLE\n\r\n\ENQ\EOT\n\STX\NUL\SOH\DC2\EOT\158\SOH\DC1\SYN\n\r\n\ENQ\EOT\n\STX\NUL\ETX\DC2\EOT\158\SOH\EM\SUB\n\f\n\EOT\EOT\n\STX\SOH\DC2\EOT\159\SOH\SOH\RS\n\r\n\ENQ\EOT\n\STX\SOH\EOT\DC2\EOT\159\SOH\SOH\t\n\r\n\ENQ\EOT\n\STX\SOH\ENQ\DC2\EOT\159\SOH\n\DLE\n\r\n\ENQ\EOT\n\STX\SOH\SOH\DC2\EOT\159\SOH\DC3\EM\n\r\n\ENQ\EOT\n\STX\SOH\ETX\DC2\EOT\159\SOH\FS\GS\nB\n\STX\EOT\v\DC2\ACK\165\SOH\NUL\167\SOH\SOH\SUB4*\n File or Directory permision - same spec as posix\n\n\v\n\ETX\EOT\v\SOH\DC2\EOT\165\SOH\b\EM\n3\n\EOT\EOT\v\STX\NUL\DC2\EOT\166\SOH\STX\ESC\"% Actually a short - only 16bits used\n\n\r\n\ENQ\EOT\v\STX\NUL\EOT\DC2\EOT\166\SOH\STX\n\n\r\n\ENQ\EOT\v\STX\NUL\ENQ\DC2\EOT\166\SOH\v\DC1\n\r\n\ENQ\EOT\v\STX\NUL\SOH\DC2\EOT\166\SOH\DC2\SYN\n\r\n\ENQ\EOT\v\STX\NUL\ETX\DC2\EOT\166\SOH\EM\SUB\n4\n\STX\ENQ\NUL\DC2\ACK\172\SOH\NUL\177\SOH\SOH\SUB&*\n Types of recognized storage media.\n\n\v\n\ETX\ENQ\NUL\SOH\DC2\EOT\172\SOH\ENQ\NAK\n\f\n\EOT\ENQ\NUL\STX\NUL\DC2\EOT\173\SOH\STX\v\n\r\n\ENQ\ENQ\NUL\STX\NUL\SOH\DC2\EOT\173\SOH\STX\ACK\n\r\n\ENQ\ENQ\NUL\STX\NUL\STX\DC2\EOT\173\SOH\t\n\n\f\n\EOT\ENQ\NUL\STX\SOH\DC2\EOT\174\SOH\STX\n\n\r\n\ENQ\ENQ\NUL\STX\SOH\SOH\DC2\EOT\174\SOH\STX\ENQ\n\r\n\ENQ\ENQ\NUL\STX\SOH\STX\DC2\EOT\174\SOH\b\t\n\f\n\EOT\ENQ\NUL\STX\STX\DC2\EOT\175\SOH\STX\SO\n\r\n\ENQ\ENQ\NUL\STX\STX\SOH\DC2\EOT\175\SOH\STX\t\n\r\n\ENQ\ENQ\NUL\STX\STX\STX\DC2\EOT\175\SOH\f\r\n\f\n\EOT\ENQ\NUL\STX\ETX\DC2\EOT\176\SOH\STX\SI\n\r\n\ENQ\ENQ\NUL\STX\ETX\SOH\DC2\EOT\176\SOH\STX\n\n\r\n\ENQ\ENQ\NUL\STX\ETX\STX\DC2\EOT\176\SOH\r\SO\n+\n\STX\EOT\f\DC2\ACK\182\SOH\NUL\184\SOH\SOH\SUB\GS*\n A list of storage types. \n\n\v\n\ETX\EOT\f\SOH\DC2\EOT\182\SOH\b\EM\n\f\n\EOT\EOT\f\STX\NUL\DC2\EOT\183\SOH\STX-\n\r\n\ENQ\EOT\f\STX\NUL\EOT\DC2\EOT\183\SOH\STX\n\n\r\n\ENQ\EOT\f\STX\NUL\ACK\DC2\EOT\183\SOH\v\ESC\n\r\n\ENQ\EOT\f\STX\NUL\SOH\DC2\EOT\183\SOH\FS(\n\r\n\ENQ\EOT\f\STX\NUL\ETX\DC2\EOT\183\SOH+,\n/\n\STX\EOT\r\DC2\ACK\189\SOH\NUL\198\SOH\SOH\SUB!*\n Block replica storage policy.\n\n\v\n\ETX\EOT\r\SOH\DC2\EOT\189\SOH\b\US\n\f\n\EOT\EOT\r\STX\NUL\DC2\EOT\190\SOH\STX\US\n\r\n\ENQ\EOT\r\STX\NUL\EOT\DC2\EOT\190\SOH\STX\n\n\r\n\ENQ\EOT\r\STX\NUL\ENQ\DC2\EOT\190\SOH\v\DC1\n\r\n\ENQ\EOT\r\STX\NUL\SOH\DC2\EOT\190\SOH\DC2\SUB\n\r\n\ENQ\EOT\r\STX\NUL\ETX\DC2\EOT\190\SOH\GS\RS\n\f\n\EOT\EOT\r\STX\SOH\DC2\EOT\191\SOH\STX\ESC\n\r\n\ENQ\EOT\r\STX\SOH\EOT\DC2\EOT\191\SOH\STX\n\n\r\n\ENQ\EOT\r\STX\SOH\ENQ\DC2\EOT\191\SOH\v\DC1\n\r\n\ENQ\EOT\r\STX\SOH\SOH\DC2\EOT\191\SOH\DC2\SYN\n\r\n\ENQ\EOT\r\STX\SOH\ETX\DC2\EOT\191\SOH\EM\SUB\n^\n\EOT\EOT\r\STX\STX\DC2\EOT\194\SOH\STX0\SUBP a list of storage types for storing the block replicas when creating a\n block.\n\n\r\n\ENQ\EOT\r\STX\STX\EOT\DC2\EOT\194\SOH\STX\n\n\r\n\ENQ\EOT\r\STX\STX\ACK\DC2\EOT\194\SOH\v\FS\n\r\n\ENQ\EOT\r\STX\STX\SOH\DC2\EOT\194\SOH\GS+\n\r\n\ENQ\EOT\r\STX\STX\ETX\DC2\EOT\194\SOH./\nF\n\EOT\EOT\r\STX\ETX\DC2\EOT\196\SOH\STX8\SUB8 A list of storage types for creation fallback storage.\n\n\r\n\ENQ\EOT\r\STX\ETX\EOT\DC2\EOT\196\SOH\STX\n\n\r\n\ENQ\EOT\r\STX\ETX\ACK\DC2\EOT\196\SOH\v\FS\n\r\n\ENQ\EOT\r\STX\ETX\SOH\DC2\EOT\196\SOH\GS3\n\r\n\ENQ\EOT\r\STX\ETX\ETX\DC2\EOT\196\SOH67\n\f\n\EOT\EOT\r\STX\EOT\DC2\EOT\197\SOH\STX;\n\r\n\ENQ\EOT\r\STX\EOT\EOT\DC2\EOT\197\SOH\STX\n\n\r\n\ENQ\EOT\r\STX\EOT\ACK\DC2\EOT\197\SOH\v\FS\n\r\n\ENQ\EOT\r\STX\EOT\SOH\DC2\EOT\197\SOH\GS6\n\r\n\ENQ\EOT\r\STX\EOT\ETX\DC2\EOT\197\SOH9:\n)\n\STX\EOT\SO\DC2\ACK\203\SOH\NUL\205\SOH\SOH\SUB\ESC*\n A list of storage IDs. \n\n\v\n\ETX\EOT\SO\SOH\DC2\EOT\203\SOH\b\EM\n\f\n\EOT\EOT\SO\STX\NUL\DC2\EOT\204\SOH\STX#\n\r\n\ENQ\EOT\SO\STX\NUL\EOT\DC2\EOT\204\SOH\STX\n\n\r\n\ENQ\EOT\SO\STX\NUL\ENQ\DC2\EOT\204\SOH\v\DC1\n\r\n\ENQ\EOT\SO\STX\NUL\SOH\DC2\EOT\204\SOH\DC2\RS\n\r\n\ENQ\EOT\SO\STX\NUL\ETX\DC2\EOT\204\SOH!\"\nR\n\STX\EOT\SI\DC2\ACK\210\SOH\NUL\222\SOH\SOH\SUBD*\n A LocatedBlock gives information about a block and its location.\n\n\v\n\ETX\EOT\SI\SOH\DC2\EOT\210\SOH\b\EM\n\f\n\EOT\EOT\SI\STX\NUL\DC2\EOT\211\SOH\STX%\n\r\n\ENQ\EOT\SI\STX\NUL\EOT\DC2\EOT\211\SOH\STX\n\n\r\n\ENQ\EOT\SI\STX\NUL\ACK\DC2\EOT\211\SOH\v\GS\n\r\n\ENQ\EOT\SI\STX\NUL\SOH\DC2\EOT\211\SOH\RS\US\n\r\n\ENQ\EOT\SI\STX\NUL\ETX\DC2\EOT\211\SOH#$\n9\n\EOT\EOT\SI\STX\SOH\DC2\EOT\212\SOH\STX\GS\"+ offset of first byte of block in the file\n\n\r\n\ENQ\EOT\SI\STX\SOH\EOT\DC2\EOT\212\SOH\STX\n\n\r\n\ENQ\EOT\SI\STX\SOH\ENQ\DC2\EOT\212\SOH\v\DC1\n\r\n\ENQ\EOT\SI\STX\SOH\SOH\DC2\EOT\212\SOH\DC2\CAN\n\r\n\ENQ\EOT\SI\STX\SOH\ETX\DC2\EOT\212\SOH\ESC\FS\n;\n\EOT\EOT\SI\STX\STX\DC2\EOT\213\SOH\STX&\"- Locations ordered by proximity to client ip\n\n\r\n\ENQ\EOT\SI\STX\STX\EOT\DC2\EOT\213\SOH\STX\n\n\r\n\ENQ\EOT\SI\STX\STX\ACK\DC2\EOT\213\SOH\v\FS\n\r\n\ENQ\EOT\SI\STX\STX\SOH\DC2\EOT\213\SOH\GS!\n\r\n\ENQ\EOT\SI\STX\STX\ETX\DC2\EOT\213\SOH$%\nG\n\EOT\EOT\SI\STX\ETX\DC2\EOT\214\SOH\STX\FS\"9 true if all replicas of a block are corrupt, else false\n\n\r\n\ENQ\EOT\SI\STX\ETX\EOT\DC2\EOT\214\SOH\STX\n\n\r\n\ENQ\EOT\SI\STX\ETX\ENQ\DC2\EOT\214\SOH\v\SI\n\r\n\ENQ\EOT\SI\STX\ETX\SOH\DC2\EOT\214\SOH\DLE\ETB\n\r\n\ENQ\EOT\SI\STX\ETX\ETX\DC2\EOT\214\SOH\SUB\ESC\n\f\n\EOT\EOT\SI\STX\EOT\DC2\EOT\218\SOH\STX3\n\r\n\ENQ\EOT\SI\STX\EOT\EOT\DC2\EOT\218\SOH\STX\n\n\r\n\ENQ\EOT\SI\STX\EOT\ACK\DC2\EOT\218\SOH\v#\n\r\n\ENQ\EOT\SI\STX\EOT\SOH\DC2\EOT\218\SOH$.\n\r\n\ENQ\EOT\SI\STX\EOT\ETX\DC2\EOT\218\SOH12\n/\n\EOT\EOT\SI\STX\ENQ\DC2\EOT\219\SOH\STX+\"! if a location in locs is cached\n\n\r\n\ENQ\EOT\SI\STX\ENQ\EOT\DC2\EOT\219\SOH\STX\n\n\r\n\ENQ\EOT\SI\STX\ENQ\ENQ\DC2\EOT\219\SOH\v\SI\n\r\n\ENQ\EOT\SI\STX\ENQ\SOH\DC2\EOT\219\SOH\DLE\CAN\n\r\n\ENQ\EOT\SI\STX\ENQ\ETX\DC2\EOT\219\SOH\ESC\FS\n\r\n\ENQ\EOT\SI\STX\ENQ\b\DC2\EOT\219\SOH\GS*\n\DLE\n\b\EOT\SI\STX\ENQ\b\231\a\NUL\DC2\EOT\219\SOH\RS)\n\DC1\n\t\EOT\SI\STX\ENQ\b\231\a\NUL\STX\DC2\EOT\219\SOH\RS$\n\DC2\n\n\EOT\SI\STX\ENQ\b\231\a\NUL\STX\NUL\DC2\EOT\219\SOH\RS$\n\DC3\n\v\EOT\SI\STX\ENQ\b\231\a\NUL\STX\NUL\SOH\DC2\EOT\219\SOH\RS$\n\DC1\n\t\EOT\SI\STX\ENQ\b\231\a\NUL\ETX\DC2\EOT\219\SOH%)\n\f\n\EOT\EOT\SI\STX\ACK\DC2\EOT\220\SOH\STX-\n\r\n\ENQ\EOT\SI\STX\ACK\EOT\DC2\EOT\220\SOH\STX\n\n\r\n\ENQ\EOT\SI\STX\ACK\ACK\DC2\EOT\220\SOH\v\ESC\n\r\n\ENQ\EOT\SI\STX\ACK\SOH\DC2\EOT\220\SOH\FS(\n\r\n\ENQ\EOT\SI\STX\ACK\ETX\DC2\EOT\220\SOH+,\n\f\n\EOT\EOT\SI\STX\a\DC2\EOT\221\SOH\STX!\n\r\n\ENQ\EOT\SI\STX\a\EOT\DC2\EOT\221\SOH\STX\n\n\r\n\ENQ\EOT\SI\STX\a\ENQ\DC2\EOT\221\SOH\v\DC1\n\r\n\ENQ\EOT\SI\STX\a\SOH\DC2\EOT\221\SOH\DC2\FS\n\r\n\ENQ\EOT\SI\STX\a\ETX\DC2\EOT\221\SOH\US \n\f\n\STX\EOT\DLE\DC2\ACK\224\SOH\NUL\231\SOH\SOH\n\v\n\ETX\EOT\DLE\SOH\DC2\EOT\224\SOH\b\RS\n\f\n\EOT\EOT\DLE\STX\NUL\DC2\EOT\225\SOH\STX\FS\n\r\n\ENQ\EOT\DLE\STX\NUL\EOT\DC2\EOT\225\SOH\STX\n\n\r\n\ENQ\EOT\DLE\STX\NUL\ENQ\DC2\EOT\225\SOH\v\DC1\n\r\n\ENQ\EOT\DLE\STX\NUL\SOH\DC2\EOT\225\SOH\DC2\ETB\n\r\n\ENQ\EOT\DLE\STX\NUL\ETX\DC2\EOT\225\SOH\SUB\ESC\n\f\n\EOT\EOT\DLE\STX\SOH\DC2\EOT\226\SOH\STX\"\n\r\n\ENQ\EOT\DLE\STX\SOH\EOT\DC2\EOT\226\SOH\STX\n\n\r\n\ENQ\EOT\DLE\STX\SOH\ENQ\DC2\EOT\226\SOH\v\DC1\n\r\n\ENQ\EOT\DLE\STX\SOH\SOH\DC2\EOT\226\SOH\DC2\GS\n\r\n\ENQ\EOT\DLE\STX\SOH\ETX\DC2\EOT\226\SOH !\n\f\n\EOT\EOT\DLE\STX\STX\DC2\EOT\227\SOH\STX\ESC\n\r\n\ENQ\EOT\DLE\STX\STX\EOT\DC2\EOT\227\SOH\STX\n\n\r\n\ENQ\EOT\DLE\STX\STX\ENQ\DC2\EOT\227\SOH\v\DLE\n\r\n\ENQ\EOT\DLE\STX\STX\SOH\DC2\EOT\227\SOH\DC1\SYN\n\r\n\ENQ\EOT\DLE\STX\STX\ETX\DC2\EOT\227\SOH\EM\SUB\n\f\n\EOT\EOT\DLE\STX\ETX\DC2\EOT\228\SOH\STX#\n\r\n\ENQ\EOT\DLE\STX\ETX\EOT\DC2\EOT\228\SOH\STX\n\n\r\n\ENQ\EOT\DLE\STX\ETX\ENQ\DC2\EOT\228\SOH\v\DLE\n\r\n\ENQ\EOT\DLE\STX\ETX\SOH\DC2\EOT\228\SOH\DC1\RS\n\r\n\ENQ\EOT\DLE\STX\ETX\ETX\DC2\EOT\228\SOH!\"\n\f\n\EOT\EOT\DLE\STX\EOT\DC2\EOT\229\SOH\STX!\n\r\n\ENQ\EOT\DLE\STX\EOT\EOT\DC2\EOT\229\SOH\STX\n\n\r\n\ENQ\EOT\DLE\STX\EOT\ENQ\DC2\EOT\229\SOH\v\DC1\n\r\n\ENQ\EOT\DLE\STX\EOT\SOH\DC2\EOT\229\SOH\DC2\FS\n\r\n\ENQ\EOT\DLE\STX\EOT\ETX\DC2\EOT\229\SOH\US \n\f\n\EOT\EOT\DLE\STX\ENQ\DC2\EOT\230\SOH\STX*\n\r\n\ENQ\EOT\DLE\STX\ENQ\EOT\DC2\EOT\230\SOH\STX\n\n\r\n\ENQ\EOT\DLE\STX\ENQ\ENQ\DC2\EOT\230\SOH\v\DC1\n\r\n\ENQ\EOT\DLE\STX\ENQ\SOH\DC2\EOT\230\SOH\DC2%\n\r\n\ENQ\EOT\DLE\STX\ENQ\ETX\DC2\EOT\230\SOH()\n\US\n\STX\ENQ\SOH\DC2\ACK\236\SOH\NUL\239\SOH\SOH\SUB\DC1*\n Cipher suite.\n\n\v\n\ETX\ENQ\SOH\SOH\DC2\EOT\236\SOH\ENQ\NAK\n\f\n\EOT\ENQ\SOH\STX\NUL\DC2\EOT\237\SOH\EOT\DLE\n\r\n\ENQ\ENQ\SOH\STX\NUL\SOH\DC2\EOT\237\SOH\EOT\v\n\r\n\ENQ\ENQ\SOH\STX\NUL\STX\DC2\EOT\237\SOH\SO\SI\n\f\n\EOT\ENQ\SOH\STX\SOH\DC2\EOT\238\SOH\EOT\SUB\n\r\n\ENQ\ENQ\SOH\STX\SOH\SOH\DC2\EOT\238\SOH\EOT\NAK\n\r\n\ENQ\ENQ\SOH\STX\SOH\STX\DC2\EOT\238\SOH\CAN\EM\nI\n\STX\ENQ\STX\DC2\ACK\244\SOH\NUL\247\SOH\SOH\SUB;*\n Crypto protocol version used to access encrypted files.\n\n\v\n\ETX\ENQ\STX\SOH\DC2\EOT\244\SOH\ENQ\US\n\f\n\EOT\ENQ\STX\STX\NUL\DC2\EOT\245\SOH\EOT!\n\r\n\ENQ\ENQ\STX\STX\NUL\SOH\DC2\EOT\245\SOH\EOT\FS\n\r\n\ENQ\ENQ\STX\STX\NUL\STX\DC2\EOT\245\SOH\US \n\f\n\EOT\ENQ\STX\STX\SOH\DC2\EOT\246\SOH\EOT\EM\n\r\n\ENQ\ENQ\STX\STX\SOH\SOH\DC2\EOT\246\SOH\EOT\DC4\n\r\n\ENQ\ENQ\STX\STX\SOH\STX\DC2\EOT\246\SOH\ETB\CAN\n4\n\STX\EOT\DC1\DC2\ACK\252\SOH\NUL\131\STX\SOH\SUB&*\n Encryption information for a file.\n\n\v\n\ETX\EOT\DC1\SOH\DC2\EOT\252\SOH\b\US\n\f\n\EOT\EOT\DC1\STX\NUL\DC2\EOT\253\SOH\STX&\n\r\n\ENQ\EOT\DC1\STX\NUL\EOT\DC2\EOT\253\SOH\STX\n\n\r\n\ENQ\EOT\DC1\STX\NUL\ACK\DC2\EOT\253\SOH\v\ESC\n\r\n\ENQ\EOT\DC1\STX\NUL\SOH\DC2\EOT\253\SOH\FS!\n\r\n\ENQ\EOT\DC1\STX\NUL\ETX\DC2\EOT\253\SOH$%\n\f\n\EOT\EOT\DC1\STX\SOH\DC2\EOT\254\SOH\STX@\n\r\n\ENQ\EOT\DC1\STX\SOH\EOT\DC2\EOT\254\SOH\STX\n\n\r\n\ENQ\EOT\DC1\STX\SOH\ACK\DC2\EOT\254\SOH\v%\n\r\n\ENQ\EOT\DC1\STX\SOH\SOH\DC2\EOT\254\SOH&;\n\r\n\ENQ\EOT\DC1\STX\SOH\ETX\DC2\EOT\254\SOH>?\n\f\n\EOT\EOT\DC1\STX\STX\DC2\EOT\255\SOH\STX\EM\n\r\n\ENQ\EOT\DC1\STX\STX\EOT\DC2\EOT\255\SOH\STX\n\n\r\n\ENQ\EOT\DC1\STX\STX\ENQ\DC2\EOT\255\SOH\v\DLE\n\r\n\ENQ\EOT\DC1\STX\STX\SOH\DC2\EOT\255\SOH\DC1\DC4\n\r\n\ENQ\EOT\DC1\STX\STX\ETX\DC2\EOT\255\SOH\ETB\CAN\n\f\n\EOT\EOT\DC1\STX\ETX\DC2\EOT\128\STX\STX\CAN\n\r\n\ENQ\EOT\DC1\STX\ETX\EOT\DC2\EOT\128\STX\STX\n\n\r\n\ENQ\EOT\DC1\STX\ETX\ENQ\DC2\EOT\128\STX\v\DLE\n\r\n\ENQ\EOT\DC1\STX\ETX\SOH\DC2\EOT\128\STX\DC1\DC3\n\r\n\ENQ\EOT\DC1\STX\ETX\ETX\DC2\EOT\128\STX\SYN\ETB\n\f\n\EOT\EOT\DC1\STX\EOT\DC2\EOT\129\STX\STX\RS\n\r\n\ENQ\EOT\DC1\STX\EOT\EOT\DC2\EOT\129\STX\STX\n\n\r\n\ENQ\EOT\DC1\STX\EOT\ENQ\DC2\EOT\129\STX\v\DC1\n\r\n\ENQ\EOT\DC1\STX\EOT\SOH\DC2\EOT\129\STX\DC2\EM\n\r\n\ENQ\EOT\DC1\STX\EOT\ETX\DC2\EOT\129\STX\FS\GS\n\f\n\EOT\EOT\DC1\STX\ENQ\DC2\EOT\130\STX\STX'\n\r\n\ENQ\EOT\DC1\STX\ENQ\EOT\DC2\EOT\130\STX\STX\n\n\r\n\ENQ\EOT\DC1\STX\ENQ\ENQ\DC2\EOT\130\STX\v\DC1\n\r\n\ENQ\EOT\DC1\STX\ENQ\SOH\DC2\EOT\130\STX\DC2\"\n\r\n\ENQ\EOT\DC1\STX\ENQ\ETX\DC2\EOT\130\STX%&\nZ\n\STX\EOT\DC2\DC2\ACK\137\STX\NUL\141\STX\SOH\SUBL*\n Encryption information for an individual\n file within an encryption zone\n\n\v\n\ETX\EOT\DC2\SOH\DC2\EOT\137\STX\b\"\n\f\n\EOT\EOT\DC2\STX\NUL\DC2\EOT\138\STX\STX\EM\n\r\n\ENQ\EOT\DC2\STX\NUL\EOT\DC2\EOT\138\STX\STX\n\n\r\n\ENQ\EOT\DC2\STX\NUL\ENQ\DC2\EOT\138\STX\v\DLE\n\r\n\ENQ\EOT\DC2\STX\NUL\SOH\DC2\EOT\138\STX\DC1\DC4\n\r\n\ENQ\EOT\DC2\STX\NUL\ETX\DC2\EOT\138\STX\ETB\CAN\n\f\n\EOT\EOT\DC2\STX\SOH\DC2\EOT\139\STX\STX\CAN\n\r\n\ENQ\EOT\DC2\STX\SOH\EOT\DC2\EOT\139\STX\STX\n\n\r\n\ENQ\EOT\DC2\STX\SOH\ENQ\DC2\EOT\139\STX\v\DLE\n\r\n\ENQ\EOT\DC2\STX\SOH\SOH\DC2\EOT\139\STX\DC1\DC3\n\r\n\ENQ\EOT\DC2\STX\SOH\ETX\DC2\EOT\139\STX\SYN\ETB\n\f\n\EOT\EOT\DC2\STX\STX\DC2\EOT\140\STX\STX'\n\r\n\ENQ\EOT\DC2\STX\STX\EOT\DC2\EOT\140\STX\STX\n\n\r\n\ENQ\EOT\DC2\STX\STX\ENQ\DC2\EOT\140\STX\v\DC1\n\r\n\ENQ\EOT\DC2\STX\STX\SOH\DC2\EOT\140\STX\DC2\"\n\r\n\ENQ\EOT\DC2\STX\STX\ETX\DC2\EOT\140\STX%&\n@\n\STX\EOT\DC3\DC2\ACK\147\STX\NUL\151\STX\SOH\SUB2*\n Encryption information for an encryption\n zone\n\n\v\n\ETX\EOT\DC3\SOH\DC2\EOT\147\STX\b\US\n\f\n\EOT\EOT\DC3\STX\NUL\DC2\EOT\148\STX\STX&\n\r\n\ENQ\EOT\DC3\STX\NUL\EOT\DC2\EOT\148\STX\STX\n\n\r\n\ENQ\EOT\DC3\STX\NUL\ACK\DC2\EOT\148\STX\v\ESC\n\r\n\ENQ\EOT\DC3\STX\NUL\SOH\DC2\EOT\148\STX\FS!\n\r\n\ENQ\EOT\DC3\STX\NUL\ETX\DC2\EOT\148\STX$%\n\f\n\EOT\EOT\DC3\STX\SOH\DC2\EOT\149\STX\STX@\n\r\n\ENQ\EOT\DC3\STX\SOH\EOT\DC2\EOT\149\STX\STX\n\n\r\n\ENQ\EOT\DC3\STX\SOH\ACK\DC2\EOT\149\STX\v%\n\r\n\ENQ\EOT\DC3\STX\SOH\SOH\DC2\EOT\149\STX&;\n\r\n\ENQ\EOT\DC3\STX\SOH\ETX\DC2\EOT\149\STX>?\n\f\n\EOT\EOT\DC3\STX\STX\DC2\EOT\150\STX\STX\RS\n\r\n\ENQ\EOT\DC3\STX\STX\EOT\DC2\EOT\150\STX\STX\n\n\r\n\ENQ\EOT\DC3\STX\STX\ENQ\DC2\EOT\150\STX\v\DC1\n\r\n\ENQ\EOT\DC3\STX\STX\SOH\DC2\EOT\150\STX\DC2\EM\n\r\n\ENQ\EOT\DC3\STX\STX\ETX\DC2\EOT\150\STX\FS\GS\n\US\n\STX\EOT\DC4\DC2\ACK\156\STX\NUL\162\STX\SOH\SUB\DC1*\n Cipher option\n\n\v\n\ETX\EOT\DC4\SOH\DC2\EOT\156\STX\b\EM\n\f\n\EOT\EOT\DC4\STX\NUL\DC2\EOT\157\STX\STX&\n\r\n\ENQ\EOT\DC4\STX\NUL\EOT\DC2\EOT\157\STX\STX\n\n\r\n\ENQ\EOT\DC4\STX\NUL\ACK\DC2\EOT\157\STX\v\ESC\n\r\n\ENQ\EOT\DC4\STX\NUL\SOH\DC2\EOT\157\STX\FS!\n\r\n\ENQ\EOT\DC4\STX\NUL\ETX\DC2\EOT\157\STX$%\n\f\n\EOT\EOT\DC4\STX\SOH\DC2\EOT\158\STX\STX\ESC\n\r\n\ENQ\EOT\DC4\STX\SOH\EOT\DC2\EOT\158\STX\STX\n\n\r\n\ENQ\EOT\DC4\STX\SOH\ENQ\DC2\EOT\158\STX\v\DLE\n\r\n\ENQ\EOT\DC4\STX\SOH\SOH\DC2\EOT\158\STX\DC1\SYN\n\r\n\ENQ\EOT\DC4\STX\SOH\ETX\DC2\EOT\158\STX\EM\SUB\n\f\n\EOT\EOT\DC4\STX\STX\DC2\EOT\159\STX\STX\SUB\n\r\n\ENQ\EOT\DC4\STX\STX\EOT\DC2\EOT\159\STX\STX\n\n\r\n\ENQ\EOT\DC4\STX\STX\ENQ\DC2\EOT\159\STX\v\DLE\n\r\n\ENQ\EOT\DC4\STX\STX\SOH\DC2\EOT\159\STX\DC1\NAK\n\r\n\ENQ\EOT\DC4\STX\STX\ETX\DC2\EOT\159\STX\CAN\EM\n\f\n\EOT\EOT\DC4\STX\ETX\DC2\EOT\160\STX\STX\FS\n\r\n\ENQ\EOT\DC4\STX\ETX\EOT\DC2\EOT\160\STX\STX\n\n\r\n\ENQ\EOT\DC4\STX\ETX\ENQ\DC2\EOT\160\STX\v\DLE\n\r\n\ENQ\EOT\DC4\STX\ETX\SOH\DC2\EOT\160\STX\DC1\ETB\n\r\n\ENQ\EOT\DC4\STX\ETX\ETX\DC2\EOT\160\STX\SUB\ESC\n\f\n\EOT\EOT\DC4\STX\EOT\DC2\EOT\161\STX\STX\ESC\n\r\n\ENQ\EOT\DC4\STX\EOT\EOT\DC2\EOT\161\STX\STX\n\n\r\n\ENQ\EOT\DC4\STX\EOT\ENQ\DC2\EOT\161\STX\v\DLE\n\r\n\ENQ\EOT\DC4\STX\EOT\SOH\DC2\EOT\161\STX\DC1\SYN\n\r\n\ENQ\EOT\DC4\STX\EOT\ETX\DC2\EOT\161\STX\EM\SUB\n;\n\STX\EOT\NAK\DC2\ACK\167\STX\NUL\174\STX\SOH\SUB-*\n A set of file blocks and their locations.\n\n\v\n\ETX\EOT\NAK\SOH\DC2\EOT\167\STX\b\SUB\n\f\n\EOT\EOT\NAK\STX\NUL\DC2\EOT\168\STX\STX!\n\r\n\ENQ\EOT\NAK\STX\NUL\EOT\DC2\EOT\168\STX\STX\n\n\r\n\ENQ\EOT\NAK\STX\NUL\ENQ\DC2\EOT\168\STX\v\DC1\n\r\n\ENQ\EOT\NAK\STX\NUL\SOH\DC2\EOT\168\STX\DC2\FS\n\r\n\ENQ\EOT\NAK\STX\NUL\ETX\DC2\EOT\168\STX\US \n\f\n\EOT\EOT\NAK\STX\SOH\DC2\EOT\169\STX\STX(\n\r\n\ENQ\EOT\NAK\STX\SOH\EOT\DC2\EOT\169\STX\STX\n\n\r\n\ENQ\EOT\NAK\STX\SOH\ACK\DC2\EOT\169\STX\v\FS\n\r\n\ENQ\EOT\NAK\STX\SOH\SOH\DC2\EOT\169\STX\GS#\n\r\n\ENQ\EOT\NAK\STX\SOH\ETX\DC2\EOT\169\STX&'\n\f\n\EOT\EOT\NAK\STX\STX\DC2\EOT\170\STX\STX&\n\r\n\ENQ\EOT\NAK\STX\STX\EOT\DC2\EOT\170\STX\STX\n\n\r\n\ENQ\EOT\NAK\STX\STX\ENQ\DC2\EOT\170\STX\v\SI\n\r\n\ENQ\EOT\NAK\STX\STX\SOH\DC2\EOT\170\STX\DLE!\n\r\n\ENQ\EOT\NAK\STX\STX\ETX\DC2\EOT\170\STX$%\n\f\n\EOT\EOT\NAK\STX\ETX\DC2\EOT\171\STX\STX+\n\r\n\ENQ\EOT\NAK\STX\ETX\EOT\DC2\EOT\171\STX\STX\n\n\r\n\ENQ\EOT\NAK\STX\ETX\ACK\DC2\EOT\171\STX\v\FS\n\r\n\ENQ\EOT\NAK\STX\ETX\SOH\DC2\EOT\171\STX\GS&\n\r\n\ENQ\EOT\NAK\STX\ETX\ETX\DC2\EOT\171\STX)*\n\f\n\EOT\EOT\NAK\STX\EOT\DC2\EOT\172\STX\STX(\n\r\n\ENQ\EOT\NAK\STX\EOT\EOT\DC2\EOT\172\STX\STX\n\n\r\n\ENQ\EOT\NAK\STX\EOT\ENQ\DC2\EOT\172\STX\v\SI\n\r\n\ENQ\EOT\NAK\STX\EOT\SOH\DC2\EOT\172\STX\DLE#\n\r\n\ENQ\EOT\NAK\STX\EOT\ETX\DC2\EOT\172\STX&'\n\f\n\EOT\EOT\NAK\STX\ENQ\DC2\EOT\173\STX\STX:\n\r\n\ENQ\EOT\NAK\STX\ENQ\EOT\DC2\EOT\173\STX\STX\n\n\r\n\ENQ\EOT\NAK\STX\ENQ\ACK\DC2\EOT\173\STX\v\"\n\r\n\ENQ\EOT\NAK\STX\ENQ\SOH\DC2\EOT\173\STX#5\n\r\n\ENQ\EOT\NAK\STX\ENQ\ETX\DC2\EOT\173\STX89\n\143\SOH\n\STX\EOT\SYN\DC2\ACK\180\STX\NUL\210\STX\SOH\SUB\128\SOH*\n Status of a file, directory or symlink\n Optionally includes a file's block locations if requested by client on the rpc call.\n\n\v\n\ETX\EOT\SYN\SOH\DC2\EOT\180\STX\b\ESC\n\SO\n\EOT\EOT\SYN\EOT\NUL\DC2\ACK\181\STX\STX\185\STX\ETX\n\r\n\ENQ\EOT\SYN\EOT\NUL\SOH\DC2\EOT\181\STX\a\SI\n\SO\n\ACK\EOT\SYN\EOT\NUL\STX\NUL\DC2\EOT\182\STX\EOT\SI\n\SI\n\a\EOT\SYN\EOT\NUL\STX\NUL\SOH\DC2\EOT\182\STX\EOT\n\n\SI\n\a\EOT\SYN\EOT\NUL\STX\NUL\STX\DC2\EOT\182\STX\r\SO\n\SO\n\ACK\EOT\SYN\EOT\NUL\STX\SOH\DC2\EOT\183\STX\EOT\DLE\n\SI\n\a\EOT\SYN\EOT\NUL\STX\SOH\SOH\DC2\EOT\183\STX\EOT\v\n\SI\n\a\EOT\SYN\EOT\NUL\STX\SOH\STX\DC2\EOT\183\STX\SO\SI\n\SO\n\ACK\EOT\SYN\EOT\NUL\STX\STX\DC2\EOT\184\STX\EOT\DC3\n\SI\n\a\EOT\SYN\EOT\NUL\STX\STX\SOH\DC2\EOT\184\STX\EOT\SO\n\SI\n\a\EOT\SYN\EOT\NUL\STX\STX\STX\DC2\EOT\184\STX\DC1\DC2\n\f\n\EOT\EOT\SYN\STX\NUL\DC2\EOT\186\STX\STX!\n\r\n\ENQ\EOT\SYN\STX\NUL\EOT\DC2\EOT\186\STX\STX\n\n\r\n\ENQ\EOT\SYN\STX\NUL\ACK\DC2\EOT\186\STX\v\DC3\n\r\n\ENQ\EOT\SYN\STX\NUL\SOH\DC2\EOT\186\STX\DC4\FS\n\r\n\ENQ\EOT\SYN\STX\NUL\ETX\DC2\EOT\186\STX\US \n5\n\EOT\EOT\SYN\STX\SOH\DC2\EOT\187\STX\STX\SUB\"' local name of inode encoded java UTF8\n\n\r\n\ENQ\EOT\SYN\STX\SOH\EOT\DC2\EOT\187\STX\STX\n\n\r\n\ENQ\EOT\SYN\STX\SOH\ENQ\DC2\EOT\187\STX\v\DLE\n\r\n\ENQ\EOT\SYN\STX\SOH\SOH\DC2\EOT\187\STX\DC1\NAK\n\r\n\ENQ\EOT\SYN\STX\SOH\ETX\DC2\EOT\187\STX\CAN\EM\n\f\n\EOT\EOT\SYN\STX\STX\DC2\EOT\188\STX\STX\GS\n\r\n\ENQ\EOT\SYN\STX\STX\EOT\DC2\EOT\188\STX\STX\n\n\r\n\ENQ\EOT\SYN\STX\STX\ENQ\DC2\EOT\188\STX\v\DC1\n\r\n\ENQ\EOT\SYN\STX\STX\SOH\DC2\EOT\188\STX\DC2\CAN\n\r\n\ENQ\EOT\SYN\STX\STX\ETX\DC2\EOT\188\STX\ESC\FS\n\f\n\EOT\EOT\SYN\STX\ETX\DC2\EOT\189\STX\STX,\n\r\n\ENQ\EOT\SYN\STX\ETX\EOT\DC2\EOT\189\STX\STX\n\n\r\n\ENQ\EOT\SYN\STX\ETX\ACK\DC2\EOT\189\STX\v\FS\n\r\n\ENQ\EOT\SYN\STX\ETX\SOH\DC2\EOT\189\STX\GS'\n\r\n\ENQ\EOT\SYN\STX\ETX\ETX\DC2\EOT\189\STX*+\n\f\n\EOT\EOT\SYN\STX\EOT\DC2\EOT\190\STX\STX\FS\n\r\n\ENQ\EOT\SYN\STX\EOT\EOT\DC2\EOT\190\STX\STX\n\n\r\n\ENQ\EOT\SYN\STX\EOT\ENQ\DC2\EOT\190\STX\v\DC1\n\r\n\ENQ\EOT\SYN\STX\EOT\SOH\DC2\EOT\190\STX\DC2\ETB\n\r\n\ENQ\EOT\SYN\STX\EOT\ETX\DC2\EOT\190\STX\SUB\ESC\n\f\n\EOT\EOT\SYN\STX\ENQ\DC2\EOT\191\STX\STX\FS\n\r\n\ENQ\EOT\SYN\STX\ENQ\EOT\DC2\EOT\191\STX\STX\n\n\r\n\ENQ\EOT\SYN\STX\ENQ\ENQ\DC2\EOT\191\STX\v\DC1\n\r\n\ENQ\EOT\SYN\STX\ENQ\SOH\DC2\EOT\191\STX\DC2\ETB\n\r\n\ENQ\EOT\SYN\STX\ENQ\ETX\DC2\EOT\191\STX\SUB\ESC\n\f\n\EOT\EOT\SYN\STX\ACK\DC2\EOT\192\STX\STX(\n\r\n\ENQ\EOT\SYN\STX\ACK\EOT\DC2\EOT\192\STX\STX\n\n\r\n\ENQ\EOT\SYN\STX\ACK\ENQ\DC2\EOT\192\STX\v\DC1\n\r\n\ENQ\EOT\SYN\STX\ACK\SOH\DC2\EOT\192\STX\DC2#\n\r\n\ENQ\EOT\SYN\STX\ACK\ETX\DC2\EOT\192\STX&'\n\f\n\EOT\EOT\SYN\STX\a\DC2\EOT\193\STX\STX\"\n\r\n\ENQ\EOT\SYN\STX\a\EOT\DC2\EOT\193\STX\STX\n\n\r\n\ENQ\EOT\SYN\STX\a\ENQ\DC2\EOT\193\STX\v\DC1\n\r\n\ENQ\EOT\SYN\STX\a\SOH\DC2\EOT\193\STX\DC2\GS\n\r\n\ENQ\EOT\SYN\STX\a\ETX\DC2\EOT\193\STX !\nT\n\EOT\EOT\SYN\STX\b\DC2\EOT\196\STX\STX\GS\SUB\GS Optional fields for symlink\n\"' if symlink, target encoded java UTF8 \n\n\r\n\ENQ\EOT\SYN\STX\b\EOT\DC2\EOT\196\STX\STX\n\n\r\n\ENQ\EOT\SYN\STX\b\ENQ\DC2\EOT\196\STX\v\DLE\n\r\n\ENQ\EOT\SYN\STX\b\SOH\DC2\EOT\196\STX\DC1\CAN\n\r\n\ENQ\EOT\SYN\STX\b\ETX\DC2\EOT\196\STX\ESC\FS\n<\n\EOT\EOT\SYN\STX\t\DC2\EOT\199\STX\STX7\SUB\SUB Optional fields for file\n\"\DC2 only 16bits used\n\n\r\n\ENQ\EOT\SYN\STX\t\EOT\DC2\EOT\199\STX\STX\n\n\r\n\ENQ\EOT\SYN\STX\t\ENQ\DC2\EOT\199\STX\v\DC1\n\r\n\ENQ\EOT\SYN\STX\t\SOH\DC2\EOT\199\STX\DC2#\n\r\n\ENQ\EOT\SYN\STX\t\ETX\DC2\EOT\199\STX&(\n\r\n\ENQ\EOT\SYN\STX\t\b\DC2\EOT\199\STX)6\n\r\n\ENQ\EOT\SYN\STX\t\a\DC2\EOT\199\STX45\n\f\n\EOT\EOT\SYN\STX\n\DC2\EOT\200\STX\STX/\n\r\n\ENQ\EOT\SYN\STX\n\EOT\DC2\EOT\200\STX\STX\n\n\r\n\ENQ\EOT\SYN\STX\n\ENQ\DC2\EOT\200\STX\v\DC1\n\r\n\ENQ\EOT\SYN\STX\n\SOH\DC2\EOT\200\STX\DC2\ESC\n\r\n\ENQ\EOT\SYN\STX\n\ETX\DC2\EOT\200\STX\RS \n\r\n\ENQ\EOT\SYN\STX\n\b\DC2\EOT\200\STX!.\n\r\n\ENQ\EOT\SYN\STX\n\a\DC2\EOT\200\STX,-\n/\n\EOT\EOT\SYN\STX\v\DC2\EOT\201\STX\STX-\"! suppled only if asked by client\n\n\r\n\ENQ\EOT\SYN\STX\v\EOT\DC2\EOT\201\STX\STX\n\n\r\n\ENQ\EOT\SYN\STX\v\ACK\DC2\EOT\201\STX\v\GS\n\r\n\ENQ\EOT\SYN\STX\v\SOH\DC2\EOT\201\STX\RS'\n\r\n\ENQ\EOT\SYN\STX\v\ETX\DC2\EOT\201\STX*,\nE\n\EOT\EOT\SYN\STX\f\DC2\EOT\204\STX\STX,\SUB\ESC Optional field for fileId\n\"\SUB default as an invalid id\n\n\r\n\ENQ\EOT\SYN\STX\f\EOT\DC2\EOT\204\STX\STX\n\n\r\n\ENQ\EOT\SYN\STX\f\ENQ\DC2\EOT\204\STX\v\DC1\n\r\n\ENQ\EOT\SYN\STX\f\SOH\DC2\EOT\204\STX\DC2\CAN\n\r\n\ENQ\EOT\SYN\STX\f\ETX\DC2\EOT\204\STX\ESC\GS\n\r\n\ENQ\EOT\SYN\STX\f\b\DC2\EOT\204\STX\RS+\n\r\n\ENQ\EOT\SYN\STX\f\a\DC2\EOT\204\STX)*\n\f\n\EOT\EOT\SYN\STX\r\DC2\EOT\205\STX\STX1\n\r\n\ENQ\EOT\SYN\STX\r\EOT\DC2\EOT\205\STX\STX\n\n\r\n\ENQ\EOT\SYN\STX\r\ENQ\DC2\EOT\205\STX\v\DLE\n\r\n\ENQ\EOT\SYN\STX\r\SOH\DC2\EOT\205\STX\DC1\FS\n\r\n\ENQ\EOT\SYN\STX\r\ETX\DC2\EOT\205\STX\US!\n\r\n\ENQ\EOT\SYN\STX\r\b\DC2\EOT\205\STX\"0\n\r\n\ENQ\EOT\SYN\STX\r\a\DC2\EOT\205\STX-/\n2\n\EOT\EOT\SYN\STX\SO\DC2\EOT\207\STX\STX;\SUB$ Optional field for file encryption\n\n\r\n\ENQ\EOT\SYN\STX\SO\EOT\DC2\EOT\207\STX\STX\n\n\r\n\ENQ\EOT\SYN\STX\SO\ACK\DC2\EOT\207\STX\v\"\n\r\n\ENQ\EOT\SYN\STX\SO\SOH\DC2\EOT\207\STX#5\n\r\n\ENQ\EOT\SYN\STX\SO\ETX\DC2\EOT\207\STX8:\n'\n\EOT\EOT\SYN\STX\SI\DC2\EOT\209\STX\STX3\"\EM block storage policy id\n\n\r\n\ENQ\EOT\SYN\STX\SI\EOT\DC2\EOT\209\STX\STX\n\n\r\n\ENQ\EOT\SYN\STX\SI\ENQ\DC2\EOT\209\STX\v\DC1\n\r\n\ENQ\EOT\SYN\STX\SI\SOH\DC2\EOT\209\STX\DC2\US\n\r\n\ENQ\EOT\SYN\STX\SI\ETX\DC2\EOT\209\STX\"$\n\r\n\ENQ\EOT\SYN\STX\SI\b\DC2\EOT\209\STX%2\n\r\n\ENQ\EOT\SYN\STX\SI\a\DC2\EOT\209\STX01\n\181\SOH\n\STX\ENQ\ETX\DC2\ACK\217\STX\NUL\221\STX\SOH\SUB\166\SOH*\n Checksum algorithms/types used in HDFS\n Make sure this enum's integer values match enum values' id properties defined\n in org.apache.hadoop.util.DataChecksum.Type\n\n\v\n\ETX\ENQ\ETX\SOH\DC2\EOT\217\STX\ENQ\SYN\n\f\n\EOT\ENQ\ETX\STX\NUL\DC2\EOT\218\STX\STX\DC4\n\r\n\ENQ\ENQ\ETX\STX\NUL\SOH\DC2\EOT\218\STX\STX\SI\n\r\n\ENQ\ENQ\ETX\STX\NUL\STX\DC2\EOT\218\STX\DC2\DC3\n\f\n\EOT\ENQ\ETX\STX\SOH\DC2\EOT\219\STX\STX\NAK\n\r\n\ENQ\ENQ\ETX\STX\SOH\SOH\DC2\EOT\219\STX\STX\DLE\n\r\n\ENQ\ENQ\ETX\STX\SOH\STX\DC2\EOT\219\STX\DC3\DC4\n\f\n\EOT\ENQ\ETX\STX\STX\DC2\EOT\220\STX\STX\SYN\n\r\n\ENQ\ENQ\ETX\STX\STX\SOH\DC2\EOT\220\STX\STX\DC1\n\r\n\ENQ\ENQ\ETX\STX\STX\STX\DC2\EOT\220\STX\DC4\NAK\n&\n\STX\EOT\ETB\DC2\ACK\226\STX\NUL\235\STX\SOH\SUB\CAN*\n HDFS Server Defaults\n\n\v\n\ETX\EOT\ETB\SOH\DC2\EOT\226\STX\b\GS\n\f\n\EOT\EOT\ETB\STX\NUL\DC2\EOT\227\STX\STX \n\r\n\ENQ\EOT\ETB\STX\NUL\EOT\DC2\EOT\227\STX\STX\n\n\r\n\ENQ\EOT\ETB\STX\NUL\ENQ\DC2\EOT\227\STX\v\DC1\n\r\n\ENQ\EOT\ETB\STX\NUL\SOH\DC2\EOT\227\STX\DC2\ESC\n\r\n\ENQ\EOT\ETB\STX\NUL\ETX\DC2\EOT\227\STX\RS\US\n\f\n\EOT\EOT\ETB\STX\SOH\DC2\EOT\228\STX\STX'\n\r\n\ENQ\EOT\ETB\STX\SOH\EOT\DC2\EOT\228\STX\STX\n\n\r\n\ENQ\EOT\ETB\STX\SOH\ENQ\DC2\EOT\228\STX\v\DC1\n\r\n\ENQ\EOT\ETB\STX\SOH\SOH\DC2\EOT\228\STX\DC2\"\n\r\n\ENQ\EOT\ETB\STX\SOH\ETX\DC2\EOT\228\STX%&\n\f\n\EOT\EOT\ETB\STX\STX\DC2\EOT\229\STX\STX&\n\r\n\ENQ\EOT\ETB\STX\STX\EOT\DC2\EOT\229\STX\STX\n\n\r\n\ENQ\EOT\ETB\STX\STX\ENQ\DC2\EOT\229\STX\v\DC1\n\r\n\ENQ\EOT\ETB\STX\STX\SOH\DC2\EOT\229\STX\DC2!\n\r\n\ENQ\EOT\ETB\STX\STX\ETX\DC2\EOT\229\STX$%\n4\n\EOT\EOT\ETB\STX\ETX\DC2\EOT\230\STX\STX\"\"& Actually a short - only 16 bits used\n\n\r\n\ENQ\EOT\ETB\STX\ETX\EOT\DC2\EOT\230\STX\STX\n\n\r\n\ENQ\EOT\ETB\STX\ETX\ENQ\DC2\EOT\230\STX\v\DC1\n\r\n\ENQ\EOT\ETB\STX\ETX\SOH\DC2\EOT\230\STX\DC2\GS\n\r\n\ENQ\EOT\ETB\STX\ETX\ETX\DC2\EOT\230\STX !\n\f\n\EOT\EOT\ETB\STX\EOT\DC2\EOT\231\STX\STX%\n\r\n\ENQ\EOT\ETB\STX\EOT\EOT\DC2\EOT\231\STX\STX\n\n\r\n\ENQ\EOT\ETB\STX\EOT\ENQ\DC2\EOT\231\STX\v\DC1\n\r\n\ENQ\EOT\ETB\STX\EOT\SOH\DC2\EOT\231\STX\DC2 \n\r\n\ENQ\EOT\ETB\STX\EOT\ETX\DC2\EOT\231\STX#$\n\f\n\EOT\EOT\ETB\STX\ENQ\DC2\EOT\232\STX\STX:\n\r\n\ENQ\EOT\ETB\STX\ENQ\EOT\DC2\EOT\232\STX\STX\n\n\r\n\ENQ\EOT\ETB\STX\ENQ\ENQ\DC2\EOT\232\STX\v\SI\n\r\n\ENQ\EOT\ETB\STX\ENQ\SOH\DC2\EOT\232\STX\DLE#\n\r\n\ENQ\EOT\ETB\STX\ENQ\ETX\DC2\EOT\232\STX&'\n\r\n\ENQ\EOT\ETB\STX\ENQ\b\DC2\EOT\232\STX(9\n\r\n\ENQ\EOT\ETB\STX\ENQ\a\DC2\EOT\232\STX38\n\f\n\EOT\EOT\ETB\STX\ACK\DC2\EOT\233\STX\STX2\n\r\n\ENQ\EOT\ETB\STX\ACK\EOT\DC2\EOT\233\STX\STX\n\n\r\n\ENQ\EOT\ETB\STX\ACK\ENQ\DC2\EOT\233\STX\v\DC1\n\r\n\ENQ\EOT\ETB\STX\ACK\SOH\DC2\EOT\233\STX\DC2\US\n\r\n\ENQ\EOT\ETB\STX\ACK\ETX\DC2\EOT\233\STX\"#\n\r\n\ENQ\EOT\ETB\STX\ACK\b\DC2\EOT\233\STX$1\n\r\n\ENQ\EOT\ETB\STX\ACK\a\DC2\EOT\233\STX/0\n\f\n\EOT\EOT\ETB\STX\a\DC2\EOT\234\STX\STXI\n\r\n\ENQ\EOT\ETB\STX\a\EOT\DC2\EOT\234\STX\STX\n\n\r\n\ENQ\EOT\ETB\STX\a\ACK\DC2\EOT\234\STX\v\FS\n\r\n\ENQ\EOT\ETB\STX\a\SOH\DC2\EOT\234\STX\GS)\n\r\n\ENQ\EOT\ETB\STX\a\ETX\DC2\EOT\234\STX,-\n\r\n\ENQ\EOT\ETB\STX\a\b\DC2\EOT\234\STX.H\n\r\n\ENQ\EOT\ETB\STX\a\a\DC2\EOT\234\STX9G\n#\n\STX\EOT\CAN\DC2\ACK\241\STX\NUL\244\STX\SOH\SUB\NAK*\n Directory listing\n\n\v\n\ETX\EOT\CAN\SOH\DC2\EOT\241\STX\b\GS\n\f\n\EOT\EOT\CAN\STX\NUL\DC2\EOT\242\STX\STX2\n\r\n\ENQ\EOT\CAN\STX\NUL\EOT\DC2\EOT\242\STX\STX\n\n\r\n\ENQ\EOT\CAN\STX\NUL\ACK\DC2\EOT\242\STX\v\RS\n\r\n\ENQ\EOT\CAN\STX\NUL\SOH\DC2\EOT\242\STX\US-\n\r\n\ENQ\EOT\CAN\STX\NUL\ETX\DC2\EOT\242\STX01\n\f\n\EOT\EOT\CAN\STX\SOH\DC2\EOT\243\STX\STX(\n\r\n\ENQ\EOT\CAN\STX\SOH\EOT\DC2\EOT\243\STX\STX\n\n\r\n\ENQ\EOT\CAN\STX\SOH\ENQ\DC2\EOT\243\STX\v\DC1\n\r\n\ENQ\EOT\CAN\STX\SOH\SOH\DC2\EOT\243\STX\DC2\"\n\r\n\ENQ\EOT\CAN\STX\SOH\ETX\DC2\EOT\243\STX&'\n\207\SOH\n\STX\EOT\EM\DC2\ACK\251\STX\NUL\130\ETX\SOH\SUB\192\SOH*\n Status of a snapshottable directory: besides the normal information for \n a directory status, also include snapshot quota, number of snapshots, and\n the full path of the parent directory. \n\n\v\n\ETX\EOT\EM\SOH\DC2\EOT\251\STX\b)\n\f\n\EOT\EOT\EM\STX\NUL\DC2\EOT\252\STX\STX-\n\r\n\ENQ\EOT\EM\STX\NUL\EOT\DC2\EOT\252\STX\STX\n\n\r\n\ENQ\EOT\EM\STX\NUL\ACK\DC2\EOT\252\STX\v\RS\n\r\n\ENQ\EOT\EM\STX\NUL\SOH\DC2\EOT\252\STX\US(\n\r\n\ENQ\EOT\EM\STX\NUL\ETX\DC2\EOT\252\STX+,\n;\n\EOT\EOT\EM\STX\SOH\DC2\EOT\255\STX\STX%\SUB- Fields specific for snapshottable directory\n\n\r\n\ENQ\EOT\EM\STX\SOH\EOT\DC2\EOT\255\STX\STX\n\n\r\n\ENQ\EOT\EM\STX\SOH\ENQ\DC2\EOT\255\STX\v\DC1\n\r\n\ENQ\EOT\EM\STX\SOH\SOH\DC2\EOT\255\STX\DC2 \n\r\n\ENQ\EOT\EM\STX\SOH\ETX\DC2\EOT\255\STX#$\n\f\n\EOT\EOT\EM\STX\STX\DC2\EOT\128\ETX\STX&\n\r\n\ENQ\EOT\EM\STX\STX\EOT\DC2\EOT\128\ETX\STX\n\n\r\n\ENQ\EOT\EM\STX\STX\ENQ\DC2\EOT\128\ETX\v\DC1\n\r\n\ENQ\EOT\EM\STX\STX\SOH\DC2\EOT\128\ETX\DC2!\n\r\n\ENQ\EOT\EM\STX\STX\ETX\DC2\EOT\128\ETX$%\n\f\n\EOT\EOT\EM\STX\ETX\DC2\EOT\129\ETX\STX%\n\r\n\ENQ\EOT\EM\STX\ETX\EOT\DC2\EOT\129\ETX\STX\n\n\r\n\ENQ\EOT\EM\STX\ETX\ENQ\DC2\EOT\129\ETX\v\DLE\n\r\n\ENQ\EOT\EM\STX\ETX\SOH\DC2\EOT\129\ETX\DC1 \n\r\n\ENQ\EOT\EM\STX\ETX\ETX\DC2\EOT\129\ETX#$\n1\n\STX\EOT\SUB\DC2\ACK\135\ETX\NUL\137\ETX\SOH\SUB#*\n Snapshottable directory listing\n\n\v\n\ETX\EOT\SUB\SOH\DC2\EOT\135\ETX\b*\n\f\n\EOT\EOT\SUB\STX\NUL\DC2\EOT\136\ETX\STXI\n\r\n\ENQ\EOT\SUB\STX\NUL\EOT\DC2\EOT\136\ETX\STX\n\n\r\n\ENQ\EOT\SUB\STX\NUL\ACK\DC2\EOT\136\ETX\v,\n\r\n\ENQ\EOT\SUB\STX\NUL\SOH\DC2\EOT\136\ETX-D\n\r\n\ENQ\EOT\SUB\STX\NUL\ETX\DC2\EOT\136\ETXGH\n,\n\STX\EOT\ESC\DC2\ACK\142\ETX\NUL\146\ETX\SOH\SUB\RS*\n Snapshot diff report entry\n\n\v\n\ETX\EOT\ESC\SOH\DC2\EOT\142\ETX\b$\n\f\n\EOT\EOT\ESC\STX\NUL\DC2\EOT\143\ETX\STX\RS\n\r\n\ENQ\EOT\ESC\STX\NUL\EOT\DC2\EOT\143\ETX\STX\n\n\r\n\ENQ\EOT\ESC\STX\NUL\ENQ\DC2\EOT\143\ETX\v\DLE\n\r\n\ENQ\EOT\ESC\STX\NUL\SOH\DC2\EOT\143\ETX\DC1\EM\n\r\n\ENQ\EOT\ESC\STX\NUL\ETX\DC2\EOT\143\ETX\FS\GS\n\f\n\EOT\EOT\ESC\STX\SOH\DC2\EOT\144\ETX\STX(\n\r\n\ENQ\EOT\ESC\STX\SOH\EOT\DC2\EOT\144\ETX\STX\n\n\r\n\ENQ\EOT\ESC\STX\SOH\ENQ\DC2\EOT\144\ETX\v\DC1\n\r\n\ENQ\EOT\ESC\STX\SOH\SOH\DC2\EOT\144\ETX\DC2#\n\r\n\ENQ\EOT\ESC\STX\SOH\ETX\DC2\EOT\144\ETX&'\n\f\n\EOT\EOT\ESC\STX\STX\DC2\EOT\145\ETX\STX \n\r\n\ENQ\EOT\ESC\STX\STX\EOT\DC2\EOT\145\ETX\STX\n\n\r\n\ENQ\EOT\ESC\STX\STX\ENQ\DC2\EOT\145\ETX\v\DLE\n\r\n\ENQ\EOT\ESC\STX\STX\SOH\DC2\EOT\145\ETX\DC1\ESC\n\r\n\ENQ\EOT\ESC\STX\STX\ETX\DC2\EOT\145\ETX\RS\US\n&\n\STX\EOT\FS\DC2\ACK\151\ETX\NUL\157\ETX\SOH\SUB\CAN*\n Snapshot diff report\n\n\v\n\ETX\EOT\FS\SOH\DC2\EOT\151\ETX\b\US\nE\n\EOT\EOT\FS\STX\NUL\DC2\EOT\153\ETX\STX#\SUB7 full path of the directory where snapshots were taken\n\n\r\n\ENQ\EOT\FS\STX\NUL\EOT\DC2\EOT\153\ETX\STX\n\n\r\n\ENQ\EOT\FS\STX\NUL\ENQ\DC2\EOT\153\ETX\v\DC1\n\r\n\ENQ\EOT\FS\STX\NUL\SOH\DC2\EOT\153\ETX\DC2\RS\n\r\n\ENQ\EOT\FS\STX\NUL\ETX\DC2\EOT\153\ETX!\"\n\f\n\EOT\EOT\FS\STX\SOH\DC2\EOT\154\ETX\STX#\n\r\n\ENQ\EOT\FS\STX\SOH\EOT\DC2\EOT\154\ETX\STX\n\n\r\n\ENQ\EOT\FS\STX\SOH\ENQ\DC2\EOT\154\ETX\v\DC1\n\r\n\ENQ\EOT\FS\STX\SOH\SOH\DC2\EOT\154\ETX\DC2\RS\n\r\n\ENQ\EOT\FS\STX\SOH\ETX\DC2\EOT\154\ETX!\"\n\f\n\EOT\EOT\FS\STX\STX\DC2\EOT\155\ETX\STX!\n\r\n\ENQ\EOT\FS\STX\STX\EOT\DC2\EOT\155\ETX\STX\n\n\r\n\ENQ\EOT\FS\STX\STX\ENQ\DC2\EOT\155\ETX\v\DC1\n\r\n\ENQ\EOT\FS\STX\STX\SOH\DC2\EOT\155\ETX\DC2\FS\n\r\n\ENQ\EOT\FS\STX\STX\ETX\DC2\EOT\155\ETX\US \n\f\n\EOT\EOT\FS\STX\ETX\DC2\EOT\156\ETX\STX>\n\r\n\ENQ\EOT\FS\STX\ETX\EOT\DC2\EOT\156\ETX\STX\n\n\r\n\ENQ\EOT\FS\STX\ETX\ACK\DC2\EOT\156\ETX\v'\n\r\n\ENQ\EOT\FS\STX\ETX\SOH\DC2\EOT\156\ETX(9\n\r\n\ENQ\EOT\FS\STX\ETX\ETX\DC2\EOT\156\ETX<=\nP\n\STX\EOT\GS\DC2\ACK\162\ETX\NUL\167\ETX\SOH\SUBB*\n Common node information shared by all the nodes in the cluster\n\n\v\n\ETX\EOT\GS\SOH\DC2\EOT\162\ETX\b\CAN\n1\n\EOT\EOT\GS\STX\NUL\DC2\EOT\163\ETX\STX$\"# Layout version of the file system\n\n\r\n\ENQ\EOT\GS\STX\NUL\EOT\DC2\EOT\163\ETX\STX\n\n\r\n\ENQ\EOT\GS\STX\NUL\ENQ\DC2\EOT\163\ETX\v\DC1\n\r\n\ENQ\EOT\GS\STX\NUL\SOH\DC2\EOT\163\ETX\DC2\US\n\r\n\ENQ\EOT\GS\STX\NUL\ETX\DC2\EOT\163\ETX\"#\n(\n\EOT\EOT\GS\STX\SOH\DC2\EOT\164\ETX\STX!\"\SUB File system namespace ID\n\n\r\n\ENQ\EOT\GS\STX\SOH\EOT\DC2\EOT\164\ETX\STX\n\n\r\n\ENQ\EOT\GS\STX\SOH\ENQ\DC2\EOT\164\ETX\v\DC1\n\r\n\ENQ\EOT\GS\STX\SOH\SOH\DC2\EOT\164\ETX\DC2\FS\n\r\n\ENQ\EOT\GS\STX\SOH\ETX\DC2\EOT\164\ETX\US \n!\n\EOT\EOT\GS\STX\STX\DC2\EOT\165\ETX\STX \"\DC3 ID of the cluster\n\n\r\n\ENQ\EOT\GS\STX\STX\EOT\DC2\EOT\165\ETX\STX\n\n\r\n\ENQ\EOT\GS\STX\STX\ENQ\DC2\EOT\165\ETX\v\DC1\n\r\n\ENQ\EOT\GS\STX\STX\SOH\DC2\EOT\165\ETX\DC2\ESC\n\r\n\ENQ\EOT\GS\STX\STX\ETX\DC2\EOT\165\ETX\RS\US\n)\n\EOT\EOT\GS\STX\ETX\DC2\EOT\166\ETX\STX\FS\"\ESC File system creation time\n\n\r\n\ENQ\EOT\GS\STX\ETX\EOT\DC2\EOT\166\ETX\STX\n\n\r\n\ENQ\EOT\GS\STX\ETX\ENQ\DC2\EOT\166\ETX\v\DC1\n\r\n\ENQ\EOT\GS\STX\ETX\SOH\DC2\EOT\166\ETX\DC2\ETB\n\r\n\ENQ\EOT\GS\STX\ETX\ETX\DC2\EOT\166\ETX\SUB\ESC\n\\\n\STX\EOT\RS\DC2\ACK\172\ETX\NUL\182\ETX\SOH\SUBN*\n Information sent by a namenode to identify itself to the primary namenode.\n\n\v\n\ETX\EOT\RS\SOH\DC2\EOT\172\ETX\b!\n5\n\EOT\EOT\RS\STX\NUL\DC2\EOT\173\ETX\STX!\"' host:port of the namenode RPC address\n\n\r\n\ENQ\EOT\RS\STX\NUL\EOT\DC2\EOT\173\ETX\STX\n\n\r\n\ENQ\EOT\RS\STX\NUL\ENQ\DC2\EOT\173\ETX\v\DC1\n\r\n\ENQ\EOT\RS\STX\NUL\SOH\DC2\EOT\173\ETX\DC2\FS\n\r\n\ENQ\EOT\RS\STX\NUL\ETX\DC2\EOT\173\ETX\US \n5\n\EOT\EOT\RS\STX\SOH\DC2\EOT\174\ETX\STX\"\"' host:port of the namenode http server\n\n\r\n\ENQ\EOT\RS\STX\SOH\EOT\DC2\EOT\174\ETX\STX\n\n\r\n\ENQ\EOT\RS\STX\SOH\ENQ\DC2\EOT\174\ETX\v\DC1\n\r\n\ENQ\EOT\RS\STX\SOH\SOH\DC2\EOT\174\ETX\DC2\GS\n\r\n\ENQ\EOT\RS\STX\SOH\ETX\DC2\EOT\174\ETX !\n\SO\n\EOT\EOT\RS\EOT\NUL\DC2\ACK\175\ETX\STX\179\ETX\ETX\n\r\n\ENQ\EOT\RS\EOT\NUL\SOH\DC2\EOT\175\ETX\a\CAN\n\SO\n\ACK\EOT\RS\EOT\NUL\STX\NUL\DC2\EOT\176\ETX\EOT\DC1\n\SI\n\a\EOT\RS\EOT\NUL\STX\NUL\SOH\DC2\EOT\176\ETX\EOT\f\n\SI\n\a\EOT\RS\EOT\NUL\STX\NUL\STX\DC2\EOT\176\ETX\SI\DLE\n\SO\n\ACK\EOT\RS\EOT\NUL\STX\SOH\DC2\EOT\177\ETX\EOT\SI\n\SI\n\a\EOT\RS\EOT\NUL\STX\SOH\SOH\DC2\EOT\177\ETX\EOT\n\n\SI\n\a\EOT\RS\EOT\NUL\STX\SOH\STX\DC2\EOT\177\ETX\r\SO\n\SO\n\ACK\EOT\RS\EOT\NUL\STX\STX\DC2\EOT\178\ETX\EOT\DC3\n\SI\n\a\EOT\RS\EOT\NUL\STX\STX\SOH\DC2\EOT\178\ETX\EOT\SO\n\SI\n\a\EOT\RS\EOT\NUL\STX\STX\STX\DC2\EOT\178\ETX\DC1\DC2\n \n\EOT\EOT\RS\STX\STX\DC2\EOT\180\ETX\STX,\"\DC2 Node information\n\n\r\n\ENQ\EOT\RS\STX\STX\EOT\DC2\EOT\180\ETX\STX\n\n\r\n\ENQ\EOT\RS\STX\STX\ACK\DC2\EOT\180\ETX\v\ESC\n\r\n\ENQ\EOT\RS\STX\STX\SOH\DC2\EOT\180\ETX\FS'\n\r\n\ENQ\EOT\RS\STX\STX\ETX\DC2\EOT\180\ETX*+\n\GS\n\EOT\EOT\RS\STX\ETX\DC2\EOT\181\ETX\STX;\"\SI Namenode role\n\n\r\n\ENQ\EOT\RS\STX\ETX\EOT\DC2\EOT\181\ETX\STX\n\n\r\n\ENQ\EOT\RS\STX\ETX\ACK\DC2\EOT\181\ETX\v\FS\n\r\n\ENQ\EOT\RS\STX\ETX\SOH\DC2\EOT\181\ETX\GS!\n\r\n\ENQ\EOT\RS\STX\ETX\ETX\DC2\EOT\181\ETX$%\n\r\n\ENQ\EOT\RS\STX\ETX\b\DC2\EOT\181\ETX&:\n\r\n\ENQ\EOT\RS\STX\ETX\a\DC2\EOT\181\ETX19\nG\n\STX\EOT\US\DC2\ACK\187\ETX\NUL\192\ETX\SOH\SUB9*\n Unique signature to identify checkpoint transactions.\n\n\v\n\ETX\EOT\US\SOH\DC2\EOT\187\ETX\b \n\f\n\EOT\EOT\US\STX\NUL\DC2\EOT\188\ETX\STX\"\n\r\n\ENQ\EOT\US\STX\NUL\EOT\DC2\EOT\188\ETX\STX\n\n\r\n\ENQ\EOT\US\STX\NUL\ENQ\DC2\EOT\188\ETX\v\DC1\n\r\n\ENQ\EOT\US\STX\NUL\SOH\DC2\EOT\188\ETX\DC2\GS\n\r\n\ENQ\EOT\US\STX\NUL\ETX\DC2\EOT\188\ETX !\n\f\n\EOT\EOT\US\STX\SOH\DC2\EOT\189\ETX\STX/\n\r\n\ENQ\EOT\US\STX\SOH\EOT\DC2\EOT\189\ETX\STX\n\n\r\n\ENQ\EOT\US\STX\SOH\ENQ\DC2\EOT\189\ETX\v\DC1\n\r\n\ENQ\EOT\US\STX\SOH\SOH\DC2\EOT\189\ETX\DC2*\n\r\n\ENQ\EOT\US\STX\SOH\ETX\DC2\EOT\189\ETX-.\n\f\n\EOT\EOT\US\STX\STX\DC2\EOT\190\ETX\STX%\n\r\n\ENQ\EOT\US\STX\STX\EOT\DC2\EOT\190\ETX\STX\n\n\r\n\ENQ\EOT\US\STX\STX\ENQ\DC2\EOT\190\ETX\v\DC1\n\r\n\ENQ\EOT\US\STX\STX\SOH\DC2\EOT\190\ETX\DC2 \n\r\n\ENQ\EOT\US\STX\STX\ETX\DC2\EOT\190\ETX#$\n\f\n\EOT\EOT\US\STX\ETX\DC2\EOT\191\ETX\STX,\n\r\n\ENQ\EOT\US\STX\ETX\EOT\DC2\EOT\191\ETX\STX\n\n\r\n\ENQ\EOT\US\STX\ETX\ACK\DC2\EOT\191\ETX\v\ESC\n\r\n\ENQ\EOT\US\STX\ETX\SOH\DC2\EOT\191\ETX\FS'\n\r\n\ENQ\EOT\US\STX\ETX\ETX\DC2\EOT\191\ETX*+\nE\n\STX\EOT \DC2\ACK\197\ETX\NUL\205\ETX\SOH\SUB7*\n Command sent from one namenode to another namenode.\n\n\v\n\ETX\EOT \SOH\DC2\EOT\197\ETX\b\FS\n\SO\n\EOT\EOT \EOT\NUL\DC2\ACK\198\ETX\STX\201\ETX\ETX\n\r\n\ENQ\EOT \EOT\NUL\SOH\DC2\EOT\198\ETX\a\v\n\RS\n\ACK\EOT \EOT\NUL\STX\NUL\DC2\EOT\199\ETX\EOT\CAN\"\SO Base command\n\n\SI\n\a\EOT \EOT\NUL\STX\NUL\SOH\DC2\EOT\199\ETX\EOT\DC3\n\SI\n\a\EOT \EOT\NUL\STX\NUL\STX\DC2\EOT\199\ETX\SYN\ETB\n%\n\ACK\EOT \EOT\NUL\STX\SOH\DC2\EOT\200\ETX\EOT\SUB\"\NAK Check point command\n\n\SI\n\a\EOT \EOT\NUL\STX\SOH\SOH\DC2\EOT\200\ETX\EOT\NAK\n\SI\n\a\EOT \EOT\NUL\STX\SOH\STX\DC2\EOT\200\ETX\CAN\EM\n\f\n\EOT\EOT \STX\NUL\DC2\EOT\202\ETX\STX\GS\n\r\n\ENQ\EOT \STX\NUL\EOT\DC2\EOT\202\ETX\STX\n\n\r\n\ENQ\EOT \STX\NUL\ENQ\DC2\EOT\202\ETX\v\DC1\n\r\n\ENQ\EOT \STX\NUL\SOH\DC2\EOT\202\ETX\DC2\CAN\n\r\n\ENQ\EOT \STX\NUL\ETX\DC2\EOT\202\ETX\ESC\FS\n\f\n\EOT\EOT \STX\SOH\DC2\EOT\203\ETX\STX\EM\n\r\n\ENQ\EOT \STX\SOH\EOT\DC2\EOT\203\ETX\STX\n\n\r\n\ENQ\EOT \STX\SOH\ACK\DC2\EOT\203\ETX\v\SI\n\r\n\ENQ\EOT \STX\SOH\SOH\DC2\EOT\203\ETX\DLE\DC4\n\r\n\ENQ\EOT \STX\SOH\ETX\DC2\EOT\203\ETX\ETB\CAN\n\f\n\EOT\EOT \STX\STX\DC2\EOT\204\ETX\STX4\n\r\n\ENQ\EOT \STX\STX\EOT\DC2\EOT\204\ETX\STX\n\n\r\n\ENQ\EOT \STX\STX\ACK\DC2\EOT\204\ETX\v!\n\r\n\ENQ\EOT \STX\STX\SOH\DC2\EOT\204\ETX\"/\n\r\n\ENQ\EOT \STX\STX\ETX\DC2\EOT\204\ETX23\n\221\SOH\n\STX\EOT!\DC2\ACK\213\ETX\NUL\219\ETX\SOH\SUB\206\SOH*\n Command returned from primary to checkpointing namenode.\n This command has checkpoint signature that identifies\n checkpoint transaction and is needed for further\n communication related to checkpointing.\n\n\v\n\ETX\EOT!\SOH\DC2\EOT\213\ETX\b\RS\nB\n\EOT\EOT!\STX\NUL\DC2\EOT\215\ETX\STX2\SUB4 Unique signature to identify checkpoint transation\n\n\r\n\ENQ\EOT!\STX\NUL\EOT\DC2\EOT\215\ETX\STX\n\n\r\n\ENQ\EOT!\STX\NUL\ACK\DC2\EOT\215\ETX\v#\n\r\n\ENQ\EOT!\STX\NUL\SOH\DC2\EOT\215\ETX$-\n\r\n\ENQ\EOT!\STX\NUL\ETX\DC2\EOT\215\ETX01\n[\n\EOT\EOT!\STX\SOH\DC2\EOT\218\ETX\STX&\SUBM If true, return transfer image to primary upon the completion of checkpoint\n\n\r\n\ENQ\EOT!\STX\SOH\EOT\DC2\EOT\218\ETX\STX\n\n\r\n\ENQ\EOT!\STX\SOH\ENQ\DC2\EOT\218\ETX\v\SI\n\r\n\ENQ\EOT!\STX\SOH\SOH\DC2\EOT\218\ETX\DLE!\n\r\n\ENQ\EOT!\STX\SOH\ETX\DC2\EOT\218\ETX$%\n\161\STX\n\STX\EOT\"\DC2\ACK\230\ETX\NUL\234\ETX\SOH\SUB\146\STX*\n Block information\n\n Please be wary of adding additional fields here, since INodeFiles\n need to fit in PB's default max message size of 64MB.\n We restrict the max # of blocks per file\n (dfs.namenode.fs-limits.max-blocks-per-file), but it's better\n to avoid changing this.\n\n\v\n\ETX\EOT\"\SOH\DC2\EOT\230\ETX\b\DC2\n\f\n\EOT\EOT\"\STX\NUL\DC2\EOT\231\ETX\STX\RS\n\r\n\ENQ\EOT\"\STX\NUL\EOT\DC2\EOT\231\ETX\STX\n\n\r\n\ENQ\EOT\"\STX\NUL\ENQ\DC2\EOT\231\ETX\v\DC1\n\r\n\ENQ\EOT\"\STX\NUL\SOH\DC2\EOT\231\ETX\DC2\EM\n\r\n\ENQ\EOT\"\STX\NUL\ETX\DC2\EOT\231\ETX\FS\GS\n\f\n\EOT\EOT\"\STX\SOH\DC2\EOT\232\ETX\STX\US\n\r\n\ENQ\EOT\"\STX\SOH\EOT\DC2\EOT\232\ETX\STX\n\n\r\n\ENQ\EOT\"\STX\SOH\ENQ\DC2\EOT\232\ETX\v\DC1\n\r\n\ENQ\EOT\"\STX\SOH\SOH\DC2\EOT\232\ETX\DC2\SUB\n\r\n\ENQ\EOT\"\STX\SOH\ETX\DC2\EOT\232\ETX\GS\RS\n\f\n\EOT\EOT\"\STX\STX\DC2\EOT\233\ETX\STX-\n\r\n\ENQ\EOT\"\STX\STX\EOT\DC2\EOT\233\ETX\STX\n\n\r\n\ENQ\EOT\"\STX\STX\ENQ\DC2\EOT\233\ETX\v\DC1\n\r\n\ENQ\EOT\"\STX\STX\SOH\DC2\EOT\233\ETX\DC2\SUB\n\r\n\ENQ\EOT\"\STX\STX\ETX\DC2\EOT\233\ETX\GS\RS\n\r\n\ENQ\EOT\"\STX\STX\b\DC2\EOT\233\ETX\US,\n\r\n\ENQ\EOT\"\STX\STX\a\DC2\EOT\233\ETX*+\n9\n\STX\EOT#\DC2\ACK\239\ETX\NUL\244\ETX\SOH\SUB+*\n Block and datanodes where is it located\n\n\v\n\ETX\EOT#\SOH\DC2\EOT\239\ETX\b\US\n\NAK\n\EOT\EOT#\STX\NUL\DC2\EOT\240\ETX\STX \"\a Block\n\n\r\n\ENQ\EOT#\STX\NUL\EOT\DC2\EOT\240\ETX\STX\n\n\r\n\ENQ\EOT#\STX\NUL\ACK\DC2\EOT\240\ETX\v\NAK\n\r\n\ENQ\EOT#\STX\NUL\SOH\DC2\EOT\240\ETX\SYN\ESC\n\r\n\ENQ\EOT#\STX\NUL\ETX\DC2\EOT\240\ETX\RS\US\n4\n\EOT\EOT#\STX\SOH\DC2\EOT\241\ETX\STX$\"& Datanodes with replicas of the block\n\n\r\n\ENQ\EOT#\STX\SOH\EOT\DC2\EOT\241\ETX\STX\n\n\r\n\ENQ\EOT#\STX\SOH\ENQ\DC2\EOT\241\ETX\v\DC1\n\r\n\ENQ\EOT#\STX\SOH\SOH\DC2\EOT\241\ETX\DC2\US\n\r\n\ENQ\EOT#\STX\SOH\ETX\DC2\EOT\241\ETX\"#\n3\n\EOT\EOT#\STX\STX\DC2\EOT\242\ETX\STX#\"% Storages with replicas of the block\n\n\r\n\ENQ\EOT#\STX\STX\EOT\DC2\EOT\242\ETX\STX\n\n\r\n\ENQ\EOT#\STX\STX\ENQ\DC2\EOT\242\ETX\v\DC1\n\r\n\ENQ\EOT#\STX\STX\SOH\DC2\EOT\242\ETX\DC2\RS\n\r\n\ENQ\EOT#\STX\STX\ETX\DC2\EOT\242\ETX!\"\n\f\n\EOT\EOT#\STX\ETX\DC2\EOT\243\ETX\STX-\n\r\n\ENQ\EOT#\STX\ETX\EOT\DC2\EOT\243\ETX\STX\n\n\r\n\ENQ\EOT#\STX\ETX\ACK\DC2\EOT\243\ETX\v\ESC\n\r\n\ENQ\EOT#\STX\ETX\SOH\DC2\EOT\243\ETX\FS(\n\r\n\ENQ\EOT#\STX\ETX\ETX\DC2\EOT\243\ETX+,\n.\n\STX\EOT$\DC2\ACK\249\ETX\NUL\251\ETX\SOH\SUB *\n List of block with locations\n\n\v\n\ETX\EOT$\SOH\DC2\EOT\249\ETX\b \n\f\n\EOT\EOT$\STX\NUL\DC2\EOT\250\ETX\STX.\n\r\n\ENQ\EOT$\STX\NUL\EOT\DC2\EOT\250\ETX\STX\n\n\r\n\ENQ\EOT$\STX\NUL\ACK\DC2\EOT\250\ETX\v\"\n\r\n\ENQ\EOT$\STX\NUL\SOH\DC2\EOT\250\ETX#)\n\r\n\ENQ\EOT$\STX\NUL\ETX\DC2\EOT\250\ETX,-\nA\n\STX\EOT%\DC2\ACK\128\EOT\NUL\132\EOT\SOH\SUB3*\n Editlog information with available transactions\n\n\v\n\ETX\EOT%\SOH\DC2\EOT\128\EOT\b\SUB\n7\n\EOT\EOT%\STX\NUL\DC2\EOT\129\EOT\STX \") Starting available edit log transaction\n\n\r\n\ENQ\EOT%\STX\NUL\EOT\DC2\EOT\129\EOT\STX\n\n\r\n\ENQ\EOT%\STX\NUL\ENQ\DC2\EOT\129\EOT\v\DC1\n\r\n\ENQ\EOT%\STX\NUL\SOH\DC2\EOT\129\EOT\DC2\ESC\n\r\n\ENQ\EOT%\STX\NUL\ETX\DC2\EOT\129\EOT\RS\US\n5\n\EOT\EOT%\STX\SOH\DC2\EOT\130\EOT\STX\RS\"' Ending available edit log transaction\n\n\r\n\ENQ\EOT%\STX\SOH\EOT\DC2\EOT\130\EOT\STX\n\n\r\n\ENQ\EOT%\STX\SOH\ENQ\DC2\EOT\130\EOT\v\DC1\n\r\n\ENQ\EOT%\STX\SOH\SOH\DC2\EOT\130\EOT\DC2\EM\n\r\n\ENQ\EOT%\STX\SOH\ETX\DC2\EOT\130\EOT\FS\GS\n\f\n\EOT\EOT%\STX\STX\DC2\EOT\131\EOT\STX3\n\r\n\ENQ\EOT%\STX\STX\EOT\DC2\EOT\131\EOT\STX\n\n\r\n\ENQ\EOT%\STX\STX\ENQ\DC2\EOT\131\EOT\v\SI\n\r\n\ENQ\EOT%\STX\STX\SOH\DC2\EOT\131\EOT\DLE\FS\n\r\n\ENQ\EOT%\STX\STX\ETX\DC2\EOT\131\EOT\US \n\r\n\ENQ\EOT%\STX\STX\b\DC2\EOT\131\EOT!2\n\r\n\ENQ\EOT%\STX\STX\a\DC2\EOT\131\EOT,1\nH\n\STX\EOT&\DC2\ACK\137\EOT\NUL\139\EOT\SOH\SUB:*\n Enumeration of editlogs available on a remote namenode\n\n\v\n\ETX\EOT&\SOH\DC2\EOT\137\EOT\b\"\n\f\n\EOT\EOT&\STX\NUL\DC2\EOT\138\EOT\STX'\n\r\n\ENQ\EOT&\STX\NUL\EOT\DC2\EOT\138\EOT\STX\n\n\r\n\ENQ\EOT&\STX\NUL\ACK\DC2\EOT\138\EOT\v\GS\n\r\n\ENQ\EOT&\STX\NUL\SOH\DC2\EOT\138\EOT\RS\"\n\r\n\ENQ\EOT&\STX\NUL\ETX\DC2\EOT\138\EOT%&\nN\n\STX\EOT'\DC2\ACK\144\EOT\NUL\151\EOT\SOH\SUB@*\n Namespace information that describes namespace on a namenode\n\n\v\n\ETX\EOT'\SOH\DC2\EOT\144\EOT\b\SUB\nG\n\EOT\EOT'\STX\NUL\DC2\EOT\145\EOT\STX#\"9 Software revision version (e.g. an svn or git revision)\n\n\r\n\ENQ\EOT'\STX\NUL\EOT\DC2\EOT\145\EOT\STX\n\n\r\n\ENQ\EOT'\STX\NUL\ENQ\DC2\EOT\145\EOT\v\DC1\n\r\n\ENQ\EOT'\STX\NUL\SOH\DC2\EOT\145\EOT\DC2\RS\n\r\n\ENQ\EOT'\STX\NUL\ETX\DC2\EOT\145\EOT!\"\n3\n\EOT\EOT'\STX\SOH\DC2\EOT\146\EOT\STX\GS\"% Retained for backward compatibility\n\n\r\n\ENQ\EOT'\STX\SOH\EOT\DC2\EOT\146\EOT\STX\n\n\r\n\ENQ\EOT'\STX\SOH\ENQ\DC2\EOT\146\EOT\v\DC1\n\r\n\ENQ\EOT'\STX\SOH\SOH\DC2\EOT\146\EOT\DC2\CAN\n\r\n\ENQ\EOT'\STX\SOH\ETX\DC2\EOT\146\EOT\ESC\FS\n0\n\EOT\EOT'\STX\STX\DC2\EOT\147\EOT\STX\"\"\" block pool used by the namespace\n\n\r\n\ENQ\EOT'\STX\STX\EOT\DC2\EOT\147\EOT\STX\n\n\r\n\ENQ\EOT'\STX\STX\ENQ\DC2\EOT\147\EOT\v\DC1\n\r\n\ENQ\EOT'\STX\STX\SOH\DC2\EOT\147\EOT\DC2\GS\n\r\n\ENQ\EOT'\STX\STX\ETX\DC2\EOT\147\EOT !\n \n\EOT\EOT'\STX\ETX\DC2\EOT\148\EOT\STX,\"\DC2 Node information\n\n\r\n\ENQ\EOT'\STX\ETX\EOT\DC2\EOT\148\EOT\STX\n\n\r\n\ENQ\EOT'\STX\ETX\ACK\DC2\EOT\148\EOT\v\ESC\n\r\n\ENQ\EOT'\STX\ETX\SOH\DC2\EOT\148\EOT\FS'\n\r\n\ENQ\EOT'\STX\ETX\ETX\DC2\EOT\148\EOT*+\n4\n\EOT\EOT'\STX\EOT\DC2\EOT\149\EOT\STX&\"& Software version number (e.g. 2.0.0)\n\n\r\n\ENQ\EOT'\STX\EOT\EOT\DC2\EOT\149\EOT\STX\n\n\r\n\ENQ\EOT'\STX\EOT\ENQ\DC2\EOT\149\EOT\v\DC1\n\r\n\ENQ\EOT'\STX\EOT\SOH\DC2\EOT\149\EOT\DC2!\n\r\n\ENQ\EOT'\STX\EOT\ETX\DC2\EOT\149\EOT$%\n\GS\n\EOT\EOT'\STX\ENQ\DC2\EOT\150\EOT\STX1\"\SI feature flags\n\n\r\n\ENQ\EOT'\STX\ENQ\EOT\DC2\EOT\150\EOT\STX\n\n\r\n\ENQ\EOT'\STX\ENQ\ENQ\DC2\EOT\150\EOT\v\DC1\n\r\n\ENQ\EOT'\STX\ENQ\SOH\DC2\EOT\150\EOT\DC2\RS\n\r\n\ENQ\EOT'\STX\ENQ\ETX\DC2\EOT\150\EOT!\"\n\r\n\ENQ\EOT'\STX\ENQ\b\DC2\EOT\150\EOT#0\n\r\n\ENQ\EOT'\STX\ENQ\a\DC2\EOT\150\EOT./\n0\n\STX\EOT(\DC2\ACK\156\EOT\NUL\160\EOT\SOH\SUB\"*\n Block access token information\n\n\v\n\ETX\EOT(\SOH\DC2\EOT\156\EOT\b\NAK\n\RS\n\EOT\EOT(\STX\NUL\DC2\EOT\157\EOT\STX\FS\"\DLE Key identifier\n\n\r\n\ENQ\EOT(\STX\NUL\EOT\DC2\EOT\157\EOT\STX\n\n\r\n\ENQ\EOT(\STX\NUL\ENQ\DC2\EOT\157\EOT\v\DC1\n\r\n\ENQ\EOT(\STX\NUL\SOH\DC2\EOT\157\EOT\DC2\ETB\n\r\n\ENQ\EOT(\STX\NUL\ETX\DC2\EOT\157\EOT\SUB\ESC\n+\n\EOT\EOT(\STX\SOH\DC2\EOT\158\EOT\STX!\"\GS Expiry time in milliseconds\n\n\r\n\ENQ\EOT(\STX\SOH\EOT\DC2\EOT\158\EOT\STX\n\n\r\n\ENQ\EOT(\STX\SOH\ENQ\DC2\EOT\158\EOT\v\DC1\n\r\n\ENQ\EOT(\STX\SOH\SOH\DC2\EOT\158\EOT\DC2\FS\n\r\n\ENQ\EOT(\STX\SOH\ETX\DC2\EOT\158\EOT\US \n\SUB\n\EOT\EOT(\STX\STX\DC2\EOT\159\EOT\STX\RS\"\f Key secret\n\n\r\n\ENQ\EOT(\STX\STX\EOT\DC2\EOT\159\EOT\STX\n\n\r\n\ENQ\EOT(\STX\STX\ENQ\DC2\EOT\159\EOT\v\DLE\n\r\n\ENQ\EOT(\STX\STX\SOH\DC2\EOT\159\EOT\DC1\EM\n\r\n\ENQ\EOT(\STX\STX\ETX\DC2\EOT\159\EOT\FS\GS\nD\n\STX\EOT)\DC2\ACK\165\EOT\NUL\171\EOT\SOH\SUB6*\n Current key and set of block keys at the namenode.\n\n\v\n\ETX\EOT)\SOH\DC2\EOT\165\EOT\b\RS\n\f\n\EOT\EOT)\STX\NUL\DC2\EOT\166\EOT\STX(\n\r\n\ENQ\EOT)\STX\NUL\EOT\DC2\EOT\166\EOT\STX\n\n\r\n\ENQ\EOT)\STX\NUL\ENQ\DC2\EOT\166\EOT\v\SI\n\r\n\ENQ\EOT)\STX\NUL\SOH\DC2\EOT\166\EOT\DLE#\n\r\n\ENQ\EOT)\STX\NUL\ETX\DC2\EOT\166\EOT&'\n\f\n\EOT\EOT)\STX\SOH\DC2\EOT\167\EOT\STX(\n\r\n\ENQ\EOT)\STX\SOH\EOT\DC2\EOT\167\EOT\STX\n\n\r\n\ENQ\EOT)\STX\SOH\ENQ\DC2\EOT\167\EOT\v\DC1\n\r\n\ENQ\EOT)\STX\SOH\SOH\DC2\EOT\167\EOT\DC2#\n\r\n\ENQ\EOT)\STX\SOH\ETX\DC2\EOT\167\EOT&'\n\f\n\EOT\EOT)\STX\STX\DC2\EOT\168\EOT\STX$\n\r\n\ENQ\EOT)\STX\STX\EOT\DC2\EOT\168\EOT\STX\n\n\r\n\ENQ\EOT)\STX\STX\ENQ\DC2\EOT\168\EOT\v\DC1\n\r\n\ENQ\EOT)\STX\STX\SOH\DC2\EOT\168\EOT\DC2\US\n\r\n\ENQ\EOT)\STX\STX\ETX\DC2\EOT\168\EOT\"#\n\f\n\EOT\EOT)\STX\ETX\DC2\EOT\169\EOT\STX(\n\r\n\ENQ\EOT)\STX\ETX\EOT\DC2\EOT\169\EOT\STX\n\n\r\n\ENQ\EOT)\STX\ETX\ACK\DC2\EOT\169\EOT\v\CAN\n\r\n\ENQ\EOT)\STX\ETX\SOH\DC2\EOT\169\EOT\EM#\n\r\n\ENQ\EOT)\STX\ETX\ETX\DC2\EOT\169\EOT&'\n\f\n\EOT\EOT)\STX\EOT\DC2\EOT\170\EOT\STX%\n\r\n\ENQ\EOT)\STX\EOT\EOT\DC2\EOT\170\EOT\STX\n\n\r\n\ENQ\EOT)\STX\EOT\ACK\DC2\EOT\170\EOT\v\CAN\n\r\n\ENQ\EOT)\STX\EOT\SOH\DC2\EOT\170\EOT\EM \n\r\n\ENQ\EOT)\STX\EOT\ETX\DC2\EOT\170\EOT#$\n8\n\STX\ENQ\EOT\DC2\ACK\176\EOT\NUL\182\EOT\SOH\SUB**\n State of a block replica at a datanode\n\n\v\n\ETX\ENQ\EOT\SOH\DC2\EOT\176\EOT\ENQ\SYN\n:\n\EOT\ENQ\EOT\STX\NUL\DC2\EOT\177\EOT\STX\DLE\", State of a replica when it is not modified\n\n\r\n\ENQ\ENQ\EOT\STX\NUL\SOH\DC2\EOT\177\EOT\STX\v\n\r\n\ENQ\ENQ\EOT\STX\NUL\STX\DC2\EOT\177\EOT\SO\SI\n9\n\EOT\ENQ\EOT\STX\SOH\DC2\EOT\178\EOT\STX\n\"+ State of replica that is being written to\n\n\r\n\ENQ\ENQ\EOT\STX\SOH\SOH\DC2\EOT\178\EOT\STX\ENQ\n\r\n\ENQ\ENQ\EOT\STX\SOH\STX\DC2\EOT\178\EOT\b\t\n@\n\EOT\ENQ\EOT\STX\STX\DC2\EOT\179\EOT\STX\n\"2 State of replica that is waiting to be recovered\n\n\r\n\ENQ\ENQ\EOT\STX\STX\SOH\DC2\EOT\179\EOT\STX\ENQ\n\r\n\ENQ\ENQ\EOT\STX\STX\STX\DC2\EOT\179\EOT\b\t\n7\n\EOT\ENQ\EOT\STX\ETX\DC2\EOT\180\EOT\STX\n\") State of replica that is under recovery\n\n\r\n\ENQ\ENQ\EOT\STX\ETX\SOH\DC2\EOT\180\EOT\STX\ENQ\n\r\n\ENQ\ENQ\EOT\STX\ETX\STX\DC2\EOT\180\EOT\b\t\n@\n\EOT\ENQ\EOT\STX\EOT\DC2\EOT\181\EOT\STX\DLE\"2 State of replica that is created for replication\n\n\r\n\ENQ\ENQ\EOT\STX\EOT\SOH\DC2\EOT\181\EOT\STX\v\n\r\n\ENQ\ENQ\EOT\STX\EOT\STX\DC2\EOT\181\EOT\SO\SI\nK\n\STX\EOT*\DC2\ACK\187\EOT\NUL\191\EOT\SOH\SUB=*\n Block that needs to be recovered with at a given location\n\n\v\n\ETX\EOT*\SOH\DC2\EOT\187\EOT\b\FS\n*\n\EOT\EOT*\STX\NUL\DC2\EOT\188\EOT\STX\"\"\FS New genstamp post recovery\n\n\r\n\ENQ\EOT*\STX\NUL\EOT\DC2\EOT\188\EOT\STX\n\n\r\n\ENQ\EOT*\STX\NUL\ENQ\DC2\EOT\188\EOT\v\DC1\n\r\n\ENQ\EOT*\STX\NUL\SOH\DC2\EOT\188\EOT\DC2\GS\n\r\n\ENQ\EOT*\STX\NUL\ETX\DC2\EOT\188\EOT !\n%\n\EOT\EOT*\STX\SOH\DC2\EOT\189\EOT\STX'\"\ETB Block to be recovered\n\n\r\n\ENQ\EOT*\STX\SOH\EOT\DC2\EOT\189\EOT\STX\n\n\r\n\ENQ\EOT*\STX\SOH\ACK\DC2\EOT\189\EOT\v\FS\n\r\n\ENQ\EOT*\STX\SOH\SOH\DC2\EOT\189\EOT\GS\"\n\r\n\ENQ\EOT*\STX\SOH\ETX\DC2\EOT\189\EOT%&\n1\n\EOT\EOT*\STX\STX\DC2\EOT\190\EOT\STX(\"# New block for recovery (truncate)\n\n\r\n\ENQ\EOT*\STX\STX\EOT\DC2\EOT\190\EOT\STX\n\n\r\n\ENQ\EOT*\STX\STX\ACK\DC2\EOT\190\EOT\v\NAK\n\r\n\ENQ\EOT*\STX\STX\SOH\DC2\EOT\190\EOT\SYN#\n\r\n\ENQ\EOT*\STX\STX\ETX\DC2\EOT\190\EOT&'\n\RS\n\STX\EOT+\DC2\ACK\196\EOT\NUL\197\EOT\SOH\SUB\DLE*\n void request\n\n\v\n\ETX\EOT+\SOH\DC2\EOT\196\EOT\b\ESC\n1\n\STX\EOT,\DC2\ACK\202\EOT\NUL\204\EOT\SOH\SUB#*\n Version response from namenode.\n\n\v\n\ETX\EOT,\SOH\DC2\EOT\202\EOT\b\FS\n\f\n\EOT\EOT,\STX\NUL\DC2\EOT\203\EOT\STX'\n\r\n\ENQ\EOT,\STX\NUL\EOT\DC2\EOT\203\EOT\STX\n\n\r\n\ENQ\EOT,\STX\NUL\ACK\DC2\EOT\203\EOT\v\GS\n\r\n\ENQ\EOT,\STX\NUL\SOH\DC2\EOT\203\EOT\RS\"\n\r\n\ENQ\EOT,\STX\NUL\ETX\DC2\EOT\203\EOT%&\nO\n\STX\EOT-\DC2\ACK\210\EOT\NUL\218\EOT\SOH\SUBA*\n Information related to a snapshot\n TODO: add more information\n\n\v\n\ETX\EOT-\SOH\DC2\EOT\210\EOT\b\EM\n\f\n\EOT\EOT-\STX\NUL\DC2\EOT\211\EOT\STX#\n\r\n\ENQ\EOT-\STX\NUL\EOT\DC2\EOT\211\EOT\STX\n\n\r\n\ENQ\EOT-\STX\NUL\ENQ\DC2\EOT\211\EOT\v\DC1\n\r\n\ENQ\EOT-\STX\NUL\SOH\DC2\EOT\211\EOT\DC2\RS\n\r\n\ENQ\EOT-\STX\NUL\ETX\DC2\EOT\211\EOT!\"\n\f\n\EOT\EOT-\STX\SOH\DC2\EOT\212\EOT\STX#\n\r\n\ENQ\EOT-\STX\SOH\EOT\DC2\EOT\212\EOT\STX\n\n\r\n\ENQ\EOT-\STX\SOH\ENQ\DC2\EOT\212\EOT\v\DC1\n\r\n\ENQ\EOT-\STX\SOH\SOH\DC2\EOT\212\EOT\DC2\RS\n\r\n\ENQ\EOT-\STX\SOH\ETX\DC2\EOT\212\EOT!\"\n\f\n\EOT\EOT-\STX\STX\DC2\EOT\213\EOT\STX,\n\r\n\ENQ\EOT-\STX\STX\EOT\DC2\EOT\213\EOT\STX\n\n\r\n\ENQ\EOT-\STX\STX\ACK\DC2\EOT\213\EOT\v\FS\n\r\n\ENQ\EOT-\STX\STX\SOH\DC2\EOT\213\EOT\GS'\n\r\n\ENQ\EOT-\STX\STX\ETX\DC2\EOT\213\EOT*+\n\f\n\EOT\EOT-\STX\ETX\DC2\EOT\214\EOT\STX\FS\n\r\n\ENQ\EOT-\STX\ETX\EOT\DC2\EOT\214\EOT\STX\n\n\r\n\ENQ\EOT-\STX\ETX\ENQ\DC2\EOT\214\EOT\v\DC1\n\r\n\ENQ\EOT-\STX\ETX\SOH\DC2\EOT\214\EOT\DC2\ETB\n\r\n\ENQ\EOT-\STX\ETX\ETX\DC2\EOT\214\EOT\SUB\ESC\n\f\n\EOT\EOT-\STX\EOT\DC2\EOT\215\EOT\STX\FS\n\r\n\ENQ\EOT-\STX\EOT\EOT\DC2\EOT\215\EOT\STX\n\n\r\n\ENQ\EOT-\STX\EOT\ENQ\DC2\EOT\215\EOT\v\DC1\n\r\n\ENQ\EOT-\STX\EOT\SOH\DC2\EOT\215\EOT\DC2\ETB\n\r\n\ENQ\EOT-\STX\EOT\ETX\DC2\EOT\215\EOT\SUB\ESC\n-\n\EOT\EOT-\STX\ENQ\DC2\EOT\216\EOT\STX!\"\US TODO: do we need access time?\n\n\r\n\ENQ\EOT-\STX\ENQ\EOT\DC2\EOT\216\EOT\STX\n\n\r\n\ENQ\EOT-\STX\ENQ\ENQ\DC2\EOT\216\EOT\v\DC1\n\r\n\ENQ\EOT-\STX\ENQ\SOH\DC2\EOT\216\EOT\DC2\FS\n\r\n\ENQ\EOT-\STX\ENQ\ETX\DC2\EOT\216\EOT\US \n(\n\STX\EOT.\DC2\ACK\223\EOT\NUL\226\EOT\SOH\SUB\SUB*\n Rolling upgrade status\n\n\v\n\ETX\EOT.\SOH\DC2\EOT\223\EOT\b!\n\f\n\EOT\EOT.\STX\NUL\DC2\EOT\224\EOT\STX\"\n\r\n\ENQ\EOT.\STX\NUL\EOT\DC2\EOT\224\EOT\STX\n\n\r\n\ENQ\EOT.\STX\NUL\ENQ\DC2\EOT\224\EOT\v\DC1\n\r\n\ENQ\EOT.\STX\NUL\SOH\DC2\EOT\224\EOT\DC2\GS\n\r\n\ENQ\EOT.\STX\NUL\ETX\DC2\EOT\224\EOT !\n\f\n\EOT\EOT.\STX\SOH\DC2\EOT\225\EOT\STX0\n\r\n\ENQ\EOT.\STX\SOH\EOT\DC2\EOT\225\EOT\STX\n\n\r\n\ENQ\EOT.\STX\SOH\ENQ\DC2\EOT\225\EOT\v\SI\n\r\n\ENQ\EOT.\STX\SOH\SOH\DC2\EOT\225\EOT\DLE\EM\n\r\n\ENQ\EOT.\STX\SOH\ETX\DC2\EOT\225\EOT\FS\GS\n\r\n\ENQ\EOT.\STX\SOH\b\DC2\EOT\225\EOT\RS/\n\r\n\ENQ\EOT.\STX\SOH\a\DC2\EOT\225\EOT).")