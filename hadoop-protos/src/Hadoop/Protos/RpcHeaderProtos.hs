{-# LANGUAGE BangPatterns, DeriveDataTypeable, FlexibleInstances, MultiParamTypeClasses, TemplateHaskell #-}
{-# OPTIONS_GHC -fno-warn-unused-imports #-}
module Hadoop.Protos.RpcHeaderProtos (protoInfo, fileDescriptorProto) where
import Prelude ((+), (/))
import qualified Prelude as Prelude'
import qualified Data.Typeable as Prelude'
import qualified Data.Data as Prelude'
import qualified Text.ProtocolBuffers.Header as P'
import Text.DescriptorProtos.FileDescriptorProto (FileDescriptorProto)
import Text.ProtocolBuffers.Reflections (ProtoInfo)
import qualified Text.ProtocolBuffers.WireMessage as P' (wireGet,getFromBS)
 
protoInfo :: ProtoInfo
protoInfo
 = Prelude'.read
    "ProtoInfo {protoMod = ProtoName {protobufName = FIName \".hadoop.common\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [], baseName = MName \"RpcHeaderProtos\"}, protoFilePath = [\"Hadoop\",\"Protos\",\"RpcHeaderProtos.hs\"], protoSource = \"RpcHeader.proto\", extensionKeys = fromList [], messages = [DescriptorInfo {descName = ProtoName {protobufName = FIName \".hadoop.common.RPCTraceInfoProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"RpcHeaderProtos\"], baseName = MName \"RPCTraceInfoProto\"}, descFilePath = [\"Hadoop\",\"Protos\",\"RpcHeaderProtos\",\"RPCTraceInfoProto.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.common.RPCTraceInfoProto.traceId\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"RpcHeaderProtos\",MName \"RPCTraceInfoProto\"], baseName' = FName \"traceId\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 8}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 3}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.common.RPCTraceInfoProto.parentId\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"RpcHeaderProtos\",MName \"RPCTraceInfoProto\"], baseName' = FName \"parentId\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 16}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 3}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".hadoop.common.RpcRequestHeaderProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"RpcHeaderProtos\"], baseName = MName \"RpcRequestHeaderProto\"}, descFilePath = [\"Hadoop\",\"Protos\",\"RpcHeaderProtos\",\"RpcRequestHeaderProto.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.common.RpcRequestHeaderProto.rpcKind\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"RpcHeaderProtos\",MName \"RpcRequestHeaderProto\"], baseName' = FName \"rpcKind\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 8}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 14}, typeName = Just (ProtoName {protobufName = FIName \".hadoop.common.RpcKindProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"RpcHeaderProtos\"], baseName = MName \"RpcKindProto\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.common.RpcRequestHeaderProto.rpcOp\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"RpcHeaderProtos\",MName \"RpcRequestHeaderProto\"], baseName' = FName \"rpcOp\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 16}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 14}, typeName = Just (ProtoName {protobufName = FIName \".hadoop.common.RpcRequestHeaderProto.OperationProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"RpcHeaderProtos\",MName \"RpcRequestHeaderProto\"], baseName = MName \"OperationProto\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.common.RpcRequestHeaderProto.callId\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"RpcHeaderProtos\",MName \"RpcRequestHeaderProto\"], baseName' = FName \"callId\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 24}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 17}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.common.RpcRequestHeaderProto.clientId\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"RpcHeaderProtos\",MName \"RpcRequestHeaderProto\"], baseName' = FName \"clientId\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 4}, wireTag = WireTag {getWireTag = 34}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 12}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.common.RpcRequestHeaderProto.retryCount\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"RpcHeaderProtos\",MName \"RpcRequestHeaderProto\"], baseName' = FName \"retryCount\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 5}, wireTag = WireTag {getWireTag = 40}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 17}, typeName = Nothing, hsRawDefault = Just \"-1\", hsDefault = Just (HsDef'Integer (-1))},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.common.RpcRequestHeaderProto.traceInfo\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"RpcHeaderProtos\",MName \"RpcRequestHeaderProto\"], baseName' = FName \"traceInfo\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 6}, wireTag = WireTag {getWireTag = 50}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".hadoop.common.RPCTraceInfoProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"RpcHeaderProtos\"], baseName = MName \"RPCTraceInfoProto\"}), hsRawDefault = Nothing, hsDefault = Nothing}], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".hadoop.common.RpcResponseHeaderProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"RpcHeaderProtos\"], baseName = MName \"RpcResponseHeaderProto\"}, descFilePath = [\"Hadoop\",\"Protos\",\"RpcHeaderProtos\",\"RpcResponseHeaderProto.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.common.RpcResponseHeaderProto.callId\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"RpcHeaderProtos\",MName \"RpcResponseHeaderProto\"], baseName' = FName \"callId\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 8}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.common.RpcResponseHeaderProto.status\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"RpcHeaderProtos\",MName \"RpcResponseHeaderProto\"], baseName' = FName \"status\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 16}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 14}, typeName = Just (ProtoName {protobufName = FIName \".hadoop.common.RpcResponseHeaderProto.RpcStatusProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"RpcHeaderProtos\",MName \"RpcResponseHeaderProto\"], baseName = MName \"RpcStatusProto\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.common.RpcResponseHeaderProto.serverIpcVersionNum\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"RpcHeaderProtos\",MName \"RpcResponseHeaderProto\"], baseName' = FName \"serverIpcVersionNum\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 24}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.common.RpcResponseHeaderProto.exceptionClassName\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"RpcHeaderProtos\",MName \"RpcResponseHeaderProto\"], baseName' = FName \"exceptionClassName\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 4}, wireTag = WireTag {getWireTag = 34}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.common.RpcResponseHeaderProto.errorMsg\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"RpcHeaderProtos\",MName \"RpcResponseHeaderProto\"], baseName' = FName \"errorMsg\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 5}, wireTag = WireTag {getWireTag = 42}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.common.RpcResponseHeaderProto.errorDetail\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"RpcHeaderProtos\",MName \"RpcResponseHeaderProto\"], baseName' = FName \"errorDetail\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 6}, wireTag = WireTag {getWireTag = 48}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 14}, typeName = Just (ProtoName {protobufName = FIName \".hadoop.common.RpcResponseHeaderProto.RpcErrorCodeProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"RpcHeaderProtos\",MName \"RpcResponseHeaderProto\"], baseName = MName \"RpcErrorCodeProto\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.common.RpcResponseHeaderProto.clientId\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"RpcHeaderProtos\",MName \"RpcResponseHeaderProto\"], baseName' = FName \"clientId\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 7}, wireTag = WireTag {getWireTag = 58}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 12}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.common.RpcResponseHeaderProto.retryCount\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"RpcHeaderProtos\",MName \"RpcResponseHeaderProto\"], baseName' = FName \"retryCount\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 8}, wireTag = WireTag {getWireTag = 64}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 17}, typeName = Nothing, hsRawDefault = Just \"-1\", hsDefault = Just (HsDef'Integer (-1))}], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".hadoop.common.RpcSaslProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"RpcHeaderProtos\"], baseName = MName \"RpcSaslProto\"}, descFilePath = [\"Hadoop\",\"Protos\",\"RpcHeaderProtos\",\"RpcSaslProto.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.common.RpcSaslProto.version\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"RpcHeaderProtos\",MName \"RpcSaslProto\"], baseName' = FName \"version\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 8}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.common.RpcSaslProto.state\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"RpcHeaderProtos\",MName \"RpcSaslProto\"], baseName' = FName \"state\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 16}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 14}, typeName = Just (ProtoName {protobufName = FIName \".hadoop.common.RpcSaslProto.SaslState\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"RpcHeaderProtos\",MName \"RpcSaslProto\"], baseName = MName \"SaslState\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.common.RpcSaslProto.token\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"RpcHeaderProtos\",MName \"RpcSaslProto\"], baseName' = FName \"token\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 26}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 12}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.common.RpcSaslProto.auths\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"RpcHeaderProtos\",MName \"RpcSaslProto\"], baseName' = FName \"auths\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 4}, wireTag = WireTag {getWireTag = 34}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = True, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".hadoop.common.RpcSaslProto.SaslAuth\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"RpcHeaderProtos\",MName \"RpcSaslProto\"], baseName = MName \"SaslAuth\"}), hsRawDefault = Nothing, hsDefault = Nothing}], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".hadoop.common.RpcSaslProto.SaslAuth\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"RpcHeaderProtos\",MName \"RpcSaslProto\"], baseName = MName \"SaslAuth\"}, descFilePath = [\"Hadoop\",\"Protos\",\"RpcHeaderProtos\",\"RpcSaslProto\",\"SaslAuth.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.common.RpcSaslProto.SaslAuth.method\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"RpcHeaderProtos\",MName \"RpcSaslProto\",MName \"SaslAuth\"], baseName' = FName \"method\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.common.RpcSaslProto.SaslAuth.mechanism\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"RpcHeaderProtos\",MName \"RpcSaslProto\",MName \"SaslAuth\"], baseName' = FName \"mechanism\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 18}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.common.RpcSaslProto.SaslAuth.protocol\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"RpcHeaderProtos\",MName \"RpcSaslProto\",MName \"SaslAuth\"], baseName' = FName \"protocol\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 26}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.common.RpcSaslProto.SaslAuth.serverId\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"RpcHeaderProtos\",MName \"RpcSaslProto\",MName \"SaslAuth\"], baseName' = FName \"serverId\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 4}, wireTag = WireTag {getWireTag = 34}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.common.RpcSaslProto.SaslAuth.challenge\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"RpcHeaderProtos\",MName \"RpcSaslProto\",MName \"SaslAuth\"], baseName' = FName \"challenge\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 5}, wireTag = WireTag {getWireTag = 42}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 12}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False}], enums = [EnumInfo {enumName = ProtoName {protobufName = FIName \".hadoop.common.RpcKindProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"RpcHeaderProtos\"], baseName = MName \"RpcKindProto\"}, enumFilePath = [\"Hadoop\",\"Protos\",\"RpcHeaderProtos\",\"RpcKindProto.hs\"], enumValues = [(EnumCode {getEnumCode = 0},\"RPC_BUILTIN\"),(EnumCode {getEnumCode = 1},\"RPC_WRITABLE\"),(EnumCode {getEnumCode = 2},\"RPC_PROTOCOL_BUFFER\")]},EnumInfo {enumName = ProtoName {protobufName = FIName \".hadoop.common.RpcRequestHeaderProto.OperationProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"RpcHeaderProtos\",MName \"RpcRequestHeaderProto\"], baseName = MName \"OperationProto\"}, enumFilePath = [\"Hadoop\",\"Protos\",\"RpcHeaderProtos\",\"RpcRequestHeaderProto\",\"OperationProto.hs\"], enumValues = [(EnumCode {getEnumCode = 0},\"RPC_FINAL_PACKET\"),(EnumCode {getEnumCode = 1},\"RPC_CONTINUATION_PACKET\"),(EnumCode {getEnumCode = 2},\"RPC_CLOSE_CONNECTION\")]},EnumInfo {enumName = ProtoName {protobufName = FIName \".hadoop.common.RpcResponseHeaderProto.RpcStatusProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"RpcHeaderProtos\",MName \"RpcResponseHeaderProto\"], baseName = MName \"RpcStatusProto\"}, enumFilePath = [\"Hadoop\",\"Protos\",\"RpcHeaderProtos\",\"RpcResponseHeaderProto\",\"RpcStatusProto.hs\"], enumValues = [(EnumCode {getEnumCode = 0},\"SUCCESS\"),(EnumCode {getEnumCode = 1},\"ERROR\"),(EnumCode {getEnumCode = 2},\"FATAL\")]},EnumInfo {enumName = ProtoName {protobufName = FIName \".hadoop.common.RpcResponseHeaderProto.RpcErrorCodeProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"RpcHeaderProtos\",MName \"RpcResponseHeaderProto\"], baseName = MName \"RpcErrorCodeProto\"}, enumFilePath = [\"Hadoop\",\"Protos\",\"RpcHeaderProtos\",\"RpcResponseHeaderProto\",\"RpcErrorCodeProto.hs\"], enumValues = [(EnumCode {getEnumCode = 1},\"ERROR_APPLICATION\"),(EnumCode {getEnumCode = 2},\"ERROR_NO_SUCH_METHOD\"),(EnumCode {getEnumCode = 3},\"ERROR_NO_SUCH_PROTOCOL\"),(EnumCode {getEnumCode = 4},\"ERROR_RPC_SERVER\"),(EnumCode {getEnumCode = 5},\"ERROR_SERIALIZING_RESPONSE\"),(EnumCode {getEnumCode = 6},\"ERROR_RPC_VERSION_MISMATCH\"),(EnumCode {getEnumCode = 10},\"FATAL_UNKNOWN\"),(EnumCode {getEnumCode = 11},\"FATAL_UNSUPPORTED_SERIALIZATION\"),(EnumCode {getEnumCode = 12},\"FATAL_INVALID_RPC_HEADER\"),(EnumCode {getEnumCode = 13},\"FATAL_DESERIALIZING_REQUEST\"),(EnumCode {getEnumCode = 14},\"FATAL_VERSION_MISMATCH\"),(EnumCode {getEnumCode = 15},\"FATAL_UNAUTHORIZED\")]},EnumInfo {enumName = ProtoName {protobufName = FIName \".hadoop.common.RpcSaslProto.SaslState\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"RpcHeaderProtos\",MName \"RpcSaslProto\"], baseName = MName \"SaslState\"}, enumFilePath = [\"Hadoop\",\"Protos\",\"RpcHeaderProtos\",\"RpcSaslProto\",\"SaslState.hs\"], enumValues = [(EnumCode {getEnumCode = 0},\"SUCCESS\"),(EnumCode {getEnumCode = 1},\"NEGOTIATE\"),(EnumCode {getEnumCode = 2},\"INITIATE\"),(EnumCode {getEnumCode = 3},\"CHALLENGE\"),(EnumCode {getEnumCode = 4},\"RESPONSE\"),(EnumCode {getEnumCode = 5},\"WRAP\")]}], knownKeyMap = fromList []}"
 
fileDescriptorProto :: FileDescriptorProto
fileDescriptorProto
 = P'.getFromBS (P'.wireGet 11)
    (P'.pack
      "\167L\n\SIRpcHeader.proto\DC2\rhadoop.common\"6\n\DC1RPCTraceInfoProto\DC2\SI\n\atraceId\CAN\SOH \SOH(\ETX\DC2\DLE\n\bparentId\CAN\STX \SOH(\ETX\"\215\STX\n\NAKRpcRequestHeaderProto\DC2,\n\arpcKind\CAN\SOH \SOH(\SO2\ESC.hadoop.common.RpcKindProto\DC2B\n\ENQrpcOp\CAN\STX \SOH(\SO23.hadoop.common.RpcRequestHeaderProto.OperationProto\DC2\SO\n\ACKcallId\CAN\ETX \STX(\DC1\DC2\DLE\n\bclientId\CAN\EOT \STX(\f\DC2\SYN\n\nretryCount\CAN\ENQ \SOH(\DC1:\STX-1\DC23\n\ttraceInfo\CAN\ACK \SOH(\v2 .hadoop.common.RPCTraceInfoProto\"]\n\SOOperationProto\DC2\DC4\n\DLERPC_FINAL_PACKET\DLE\NUL\DC2\ESC\n\ETBRPC_CONTINUATION_PACKET\DLE\SOH\DC2\CAN\n\DC4RPC_CLOSE_CONNECTION\DLE\STX\"\202\ENQ\n\SYNRpcResponseHeaderProto\DC2\SO\n\ACKcallId\CAN\SOH \STX(\r\DC2D\n\ACKstatus\CAN\STX \STX(\SO24.hadoop.common.RpcResponseHeaderProto.RpcStatusProto\DC2\ESC\n\DC3serverIpcVersionNum\CAN\ETX \SOH(\r\DC2\SUB\n\DC2exceptionClassName\CAN\EOT \SOH(\t\DC2\DLE\n\berrorMsg\CAN\ENQ \SOH(\t\DC2L\n\verrorDetail\CAN\ACK \SOH(\SO27.hadoop.common.RpcResponseHeaderProto.RpcErrorCodeProto\DC2\DLE\n\bclientId\CAN\a \SOH(\f\DC2\SYN\n\nretryCount\CAN\b \SOH(\DC1:\STX-1\"3\n\SORpcStatusProto\DC2\v\n\aSUCCESS\DLE\NUL\DC2\t\n\ENQERROR\DLE\SOH\DC2\t\n\ENQFATAL\DLE\STX\"\225\STX\n\DC1RpcErrorCodeProto\DC2\NAK\n\DC1ERROR_APPLICATION\DLE\SOH\DC2\CAN\n\DC4ERROR_NO_SUCH_METHOD\DLE\STX\DC2\SUB\n\SYNERROR_NO_SUCH_PROTOCOL\DLE\ETX\DC2\DC4\n\DLEERROR_RPC_SERVER\DLE\EOT\DC2\RS\n\SUBERROR_SERIALIZING_RESPONSE\DLE\ENQ\DC2\RS\n\SUBERROR_RPC_VERSION_MISMATCH\DLE\ACK\DC2\DC1\n\rFATAL_UNKNOWN\DLE\n\DC2#\n\USFATAL_UNSUPPORTED_SERIALIZATION\DLE\v\DC2\FS\n\CANFATAL_INVALID_RPC_HEADER\DLE\f\DC2\US\n\ESCFATAL_DESERIALIZING_REQUEST\DLE\r\DC2\SUB\n\SYNFATAL_VERSION_MISMATCH\DLE\SO\DC2\SYN\n\DC2FATAL_UNAUTHORIZED\DLE\SI\"\221\STX\n\fRpcSaslProto\DC2\SI\n\aversion\CAN\SOH \SOH(\r\DC24\n\ENQstate\CAN\STX \STX(\SO2%.hadoop.common.RpcSaslProto.SaslState\DC2\r\n\ENQtoken\CAN\ETX \SOH(\f\DC23\n\ENQauths\CAN\EOT \ETX(\v2$.hadoop.common.RpcSaslProto.SaslAuth\SUBd\n\bSaslAuth\DC2\SO\n\ACKmethod\CAN\SOH \STX(\t\DC2\DC1\n\tmechanism\CAN\STX \STX(\t\DC2\DLE\n\bprotocol\CAN\ETX \SOH(\t\DC2\DLE\n\bserverId\CAN\EOT \SOH(\t\DC2\DC1\n\tchallenge\CAN\ENQ \SOH(\f\"\\\n\tSaslState\DC2\v\n\aSUCCESS\DLE\NUL\DC2\r\n\tNEGOTIATE\DLE\SOH\DC2\f\n\bINITIATE\DLE\STX\DC2\r\n\tCHALLENGE\DLE\ETX\DC2\f\n\bRESPONSE\DLE\EOT\DC2\b\n\EOTWRAP\DLE\ENQ*J\n\fRpcKindProto\DC2\SI\n\vRPC_BUILTIN\DLE\NUL\DC2\DLE\n\fRPC_WRITABLE\DLE\SOH\DC2\ETB\n\DC3RPC_PROTOCOL_BUFFER\DLE\STXBA\n\RSorg.apache.hadoop.ipc.protobufB\SIRpcHeaderProtosH\SOHP\NUL\128\SOH\NUL\136\SOH\NUL\144\SOH\NUL\160\SOH\SOHJ\182?\n\t\n\NUL\DC2\ENQ\CAN\NUL\171\SOH\SOH\n\b\n\SOH\b\DC2\ETX\CAN\NUL7\n\190\a\n\EOT\b\231\a\NUL\DC2\ETX\CAN\NUL72\131\ACK*\n Licensed to the Apache Software Foundation (ASF) under one\n or more contributor license agreements.  See the NOTICE file\n distributed with this work for additional information\n regarding copyright ownership.  The ASF licenses this file\n to you under the Apache License, Version 2.0 (the\n \"License\"); you may not use this file except in compliance\n with the License.  You may obtain a copy of the License at\n\n     http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n2\170\SOH*\n These .proto interfaces are private and stable.\n Please see http://wiki.apache.org/hadoop/Compatibility\n for what changes are allowed for a *stable* .proto interface.\n\n\f\n\ENQ\b\231\a\NUL\STX\DC2\ETX\CAN\a\DC3\n\r\n\ACK\b\231\a\NUL\STX\NUL\DC2\ETX\CAN\a\DC3\n\SO\n\a\b\231\a\NUL\STX\NUL\SOH\DC2\ETX\CAN\a\DC3\n\f\n\ENQ\b\231\a\NUL\a\DC2\ETX\CAN\SYN6\n\b\n\SOH\b\DC2\ETX\EM\NUL0\n\v\n\EOT\b\231\a\SOH\DC2\ETX\EM\NUL0\n\f\n\ENQ\b\231\a\SOH\STX\DC2\ETX\EM\a\ESC\n\r\n\ACK\b\231\a\SOH\STX\NUL\DC2\ETX\EM\a\ESC\n\SO\n\a\b\231\a\SOH\STX\NUL\SOH\DC2\ETX\EM\a\ESC\n\f\n\ENQ\b\231\a\SOH\a\DC2\ETX\EM\RS/\n\b\n\SOH\b\DC2\ETX\SUB\NUL,\n\v\n\EOT\b\231\a\STX\DC2\ETX\SUB\NUL,\n\f\n\ENQ\b\231\a\STX\STX\DC2\ETX\SUB\a$\n\r\n\ACK\b\231\a\STX\STX\NUL\DC2\ETX\SUB\a$\n\SO\n\a\b\231\a\STX\STX\NUL\SOH\DC2\ETX\SUB\a$\n\f\n\ENQ\b\231\a\STX\ETX\DC2\ETX\SUB'+\n\b\n\SOH\STX\DC2\ETX\ESC\b\NAK\n\216\ENQ\n\STX\ENQ\NUL\DC2\EOT/\NUL3\SOH\SUBL*\n RpcKind determine the rpcEngine and the serialization of the rpc request\n2\253\EOT*\n This is the rpc request header. It is sent with every rpc call.\n \n The format of RPC call is as follows:\n +--------------------------------------------------------------+\n | Rpc length in bytes (4 bytes int) sum of next two parts      |\n +--------------------------------------------------------------+\n | RpcRequestHeaderProto - serialized delimited ie has len      |\n +--------------------------------------------------------------+\n | RpcRequest The actual rpc request                            |\n | This request is serialized based on RpcKindProto             |\n +--------------------------------------------------------------+\n\n\n\n\n\ETX\ENQ\NUL\SOH\DC2\ETX/\ENQ\DC1\n/\n\EOT\ENQ\NUL\STX\NUL\DC2\ETX0\STX\ESC\"\" Used for built in calls by tests\n\n\f\n\ENQ\ENQ\NUL\STX\NUL\SOH\DC2\ETX0\STX\r\n\f\n\ENQ\ENQ\NUL\STX\NUL\STX\DC2\ETX0\EM\SUB\n%\n\EOT\ENQ\NUL\STX\SOH\DC2\ETX1\STX\ESC\"\CAN Use WritableRpcEngine \n\n\f\n\ENQ\ENQ\NUL\STX\SOH\SOH\DC2\ETX1\STX\SO\n\f\n\ENQ\ENQ\NUL\STX\SOH\STX\DC2\ETX1\EM\SUB\n$\n\EOT\ENQ\NUL\STX\STX\DC2\ETX2\STX\ESC\"\ETB Use ProtobufRpcEngine\n\n\f\n\ENQ\ENQ\NUL\STX\STX\SOH\DC2\ETX2\STX\NAK\n\f\n\ENQ\ENQ\NUL\STX\STX\STX\DC2\ETX2\EM\SUB\n\216\STX\n\STX\EOT\NUL\DC2\EOT>\NULA\SOH\SUB\203\STX*\n Used to pass through the information necessary to continue\n a trace after an RPC is made. All we need is the traceid\n (so we know the overarching trace this message is a part of), and\n the id of the current span when this message was sent, so we know\n what span caused the new span we will create when this message is received.\n\n\n\n\ETX\EOT\NUL\SOH\DC2\ETX>\b\EM\n\v\n\EOT\EOT\NUL\STX\NUL\DC2\ETX?\STX\GS\n\f\n\ENQ\EOT\NUL\STX\NUL\EOT\DC2\ETX?\STX\n\n\f\n\ENQ\EOT\NUL\STX\NUL\ENQ\DC2\ETX?\v\DLE\n\f\n\ENQ\EOT\NUL\STX\NUL\SOH\DC2\ETX?\DC1\CAN\n\f\n\ENQ\EOT\NUL\STX\NUL\ETX\DC2\ETX?\ESC\FS\n\v\n\EOT\EOT\NUL\STX\SOH\DC2\ETX@\STX\RS\n\f\n\ENQ\EOT\NUL\STX\SOH\EOT\DC2\ETX@\STX\n\n\f\n\ENQ\EOT\NUL\STX\SOH\ENQ\DC2\ETX@\v\DLE\n\f\n\ENQ\EOT\NUL\STX\SOH\SOH\DC2\ETX@\DC1\EM\n\f\n\ENQ\EOT\NUL\STX\SOH\ETX\DC2\ETX@\FS\GS\n+\n\STX\EOT\SOH\DC2\EOTC\NULR\SOH\"\US the header for the RpcRequest\n\n\n\n\ETX\EOT\SOH\SOH\DC2\ETXC\b\GS\n\f\n\EOT\EOT\SOH\EOT\NUL\DC2\EOTD\STXH\ETX\n\f\n\ENQ\EOT\SOH\EOT\NUL\SOH\DC2\ETXD\a\NAK\n%\n\ACK\EOT\SOH\EOT\NUL\STX\NUL\DC2\ETXE\EOT \"\SYN The final RPC Packet\n\n\SO\n\a\EOT\SOH\EOT\NUL\STX\NUL\SOH\DC2\ETXE\EOT\DC4\n\SO\n\a\EOT\SOH\EOT\NUL\STX\NUL\STX\DC2\ETXE\RS\US\n$\n\ACK\EOT\SOH\EOT\NUL\STX\SOH\DC2\ETXF\EOT \"\NAK not implemented yet\n\n\SO\n\a\EOT\SOH\EOT\NUL\STX\SOH\SOH\DC2\ETXF\EOT\ESC\n\SO\n\a\EOT\SOH\EOT\NUL\STX\SOH\STX\DC2\ETXF\RS\US\n)\n\ACK\EOT\SOH\EOT\NUL\STX\STX\DC2\ETXG\EOT!\"\SUB close the rpc connection\n\n\SO\n\a\EOT\SOH\EOT\NUL\STX\STX\SOH\DC2\ETXG\EOT\CAN\n\SO\n\a\EOT\SOH\EOT\NUL\STX\STX\STX\DC2\ETXG\US \n\v\n\EOT\EOT\SOH\STX\NUL\DC2\ETXJ\STX$\n\f\n\ENQ\EOT\SOH\STX\NUL\EOT\DC2\ETXJ\STX\n\n\f\n\ENQ\EOT\SOH\STX\NUL\ACK\DC2\ETXJ\v\ETB\n\f\n\ENQ\EOT\SOH\STX\NUL\SOH\DC2\ETXJ\CAN\US\n\f\n\ENQ\EOT\SOH\STX\NUL\ETX\DC2\ETXJ\"#\n\v\n\EOT\EOT\SOH\STX\SOH\DC2\ETXK\STX$\n\f\n\ENQ\EOT\SOH\STX\SOH\EOT\DC2\ETXK\STX\n\n\f\n\ENQ\EOT\SOH\STX\SOH\ACK\DC2\ETXK\v\EM\n\f\n\ENQ\EOT\SOH\STX\SOH\SOH\DC2\ETXK\SUB\US\n\f\n\ENQ\EOT\SOH\STX\SOH\ETX\DC2\ETXK\"#\n>\n\EOT\EOT\SOH\STX\STX\DC2\ETXL\STX\GS\"1 a sequence number that is sent back in response\n\n\f\n\ENQ\EOT\SOH\STX\STX\EOT\DC2\ETXL\STX\n\n\f\n\ENQ\EOT\SOH\STX\STX\ENQ\DC2\ETXL\v\DC1\n\f\n\ENQ\EOT\SOH\STX\STX\SOH\DC2\ETXL\DC2\CAN\n\f\n\ENQ\EOT\SOH\STX\STX\ETX\DC2\ETXL\ESC\FS\n(\n\EOT\EOT\SOH\STX\ETX\DC2\ETXM\STX\RS\"\ESC Globally unique client ID\n\n\f\n\ENQ\EOT\SOH\STX\ETX\EOT\DC2\ETXM\STX\n\n\f\n\ENQ\EOT\SOH\STX\ETX\ENQ\DC2\ETXM\v\DLE\n\f\n\ENQ\EOT\SOH\STX\ETX\SOH\DC2\ETXM\DC1\EM\n\f\n\ENQ\EOT\SOH\STX\ETX\ETX\DC2\ETXM\FS\GS\nl\n\EOT\EOT\SOH\STX\EOT\DC2\ETXP\STX0\SUB_ clientId + callId uniquely identifies a request\n retry count, 1 means this is the first retry\n\n\f\n\ENQ\EOT\SOH\STX\EOT\EOT\DC2\ETXP\STX\n\n\f\n\ENQ\EOT\SOH\STX\EOT\ENQ\DC2\ETXP\v\DC1\n\f\n\ENQ\EOT\SOH\STX\EOT\SOH\DC2\ETXP\DC2\FS\n\f\n\ENQ\EOT\SOH\STX\EOT\ETX\DC2\ETXP\US \n\f\n\ENQ\EOT\SOH\STX\EOT\b\DC2\ETXP!/\n\f\n\ENQ\EOT\SOH\STX\EOT\a\DC2\ETXP,.\n\ESC\n\EOT\EOT\SOH\STX\ENQ\DC2\ETXQ\STX+\"\SO tracing info\n\n\f\n\ENQ\EOT\SOH\STX\ENQ\EOT\DC2\ETXQ\STX\n\n\f\n\ENQ\EOT\SOH\STX\ENQ\ACK\DC2\ETXQ\v\FS\n\f\n\ENQ\EOT\SOH\STX\ENQ\SOH\DC2\ETXQ\GS&\n\f\n\ENQ\EOT\SOH\STX\ENQ\ETX\DC2\ETXQ)*\n\203\t\n\STX\EOT\STX\DC2\ENQi\NUL\147\SOH\SOH\SUB\175\b*\n Rpc Response Header\n +------------------------------------------------------------------+\n | Rpc total response length in bytes (4 bytes int)                 |\n |  (sum of next two parts)                                         |\n +------------------------------------------------------------------+\n | RpcResponseHeaderProto - serialized delimited ie has len         |\n +------------------------------------------------------------------+\n | if request is successful:                                        |\n |   - RpcResponse -  The actual rpc response  bytes follow         |\n |     the response header                                          |\n |     This response is serialized based on RpcKindProto            |\n | if request fails :                                               |\n |   The rpc response header contains the necessary info            |\n +------------------------------------------------------------------+\n\n Note that rpc response header is also used when connection setup fails. \n Ie the response looks like a rpc response with a fake callId.\n\"\139\SOH*\n \n RpcStastus - success or failure\n The reponseHeader's errDetail,  exceptionClassName and errMsg contains\n further details on the error\n\n\n\n\ETX\EOT\STX\SOH\DC2\ETXi\b\RS\n\f\n\EOT\EOT\STX\EOT\NUL\DC2\EOTq\STXu\ETX\n\f\n\ENQ\EOT\STX\EOT\NUL\SOH\DC2\ETXq\a\NAK\n\RS\n\ACK\EOT\STX\EOT\NUL\STX\NUL\DC2\ETXr\ETX\SI\"\SI RPC succeeded\n\n\SO\n\a\EOT\STX\EOT\NUL\STX\NUL\SOH\DC2\ETXr\ETX\n\n\SO\n\a\EOT\STX\EOT\NUL\STX\NUL\STX\DC2\ETXr\r\SO\nE\n\ACK\EOT\STX\EOT\NUL\STX\SOH\DC2\ETXs\ETX\r\"6 RPC or error - connection left open for future calls\n\n\SO\n\a\EOT\STX\EOT\NUL\STX\SOH\SOH\DC2\ETXs\ETX\b\n\SO\n\a\EOT\STX\EOT\NUL\STX\SOH\STX\DC2\ETXs\v\f\n0\n\ACK\EOT\STX\EOT\NUL\STX\STX\DC2\ETXt\ETX\r\"! Fatal error - connection closed\n\n\SO\n\a\EOT\STX\EOT\NUL\STX\STX\SOH\DC2\ETXt\ETX\b\n\SO\n\a\EOT\STX\EOT\NUL\STX\STX\STX\DC2\ETXt\v\f\n\r\n\EOT\EOT\STX\EOT\SOH\DC2\ENQw\STX\137\SOH\ETX\n\f\n\ENQ\EOT\STX\EOT\SOH\SOH\DC2\ETXw\a\CAN\nx\n\ACK\EOT\STX\EOT\SOH\STX\NUL\DC2\ETXz\ETX\EM\SUBA Non-fatal Rpc error - connection left open for future rpc calls\n\"& RPC Failed - rpc app threw exception\n\n\SO\n\a\EOT\STX\EOT\SOH\STX\NUL\SOH\DC2\ETXz\ETX\DC4\n\SO\n\a\EOT\STX\EOT\SOH\STX\NUL\STX\DC2\ETXz\ETB\CAN\n+\n\ACK\EOT\STX\EOT\SOH\STX\SOH\DC2\ETX{\ETX\FS\"\FS Rpc error - no such method\n\n\SO\n\a\EOT\STX\EOT\SOH\STX\SOH\SOH\DC2\ETX{\ETX\ETB\n\SO\n\a\EOT\STX\EOT\SOH\STX\SOH\STX\DC2\ETX{\SUB\ESC\n-\n\ACK\EOT\STX\EOT\SOH\STX\STX\DC2\ETX|\ETX\RS\"\RS Rpc error - no such protocol\n\n\SO\n\a\EOT\STX\EOT\SOH\STX\STX\SOH\DC2\ETX|\ETX\EM\n\SO\n\a\EOT\STX\EOT\SOH\STX\STX\STX\DC2\ETX|\FS\GS\n)\n\ACK\EOT\STX\EOT\SOH\STX\ETX\DC2\ETX}\ETX\EM\"\SUB Rpc error on server side\n\n\SO\n\a\EOT\STX\EOT\SOH\STX\ETX\SOH\DC2\ETX}\ETX\DC3\n\SO\n\a\EOT\STX\EOT\SOH\STX\ETX\STX\DC2\ETX}\ETB\CAN\n+\n\ACK\EOT\STX\EOT\SOH\STX\EOT\DC2\ETX~\ETX\"\"\FS error serializign response\n\n\SO\n\a\EOT\STX\EOT\SOH\STX\EOT\SOH\DC2\ETX~\ETX\GS\n\SO\n\a\EOT\STX\EOT\SOH\STX\EOT\STX\DC2\ETX~ !\n.\n\ACK\EOT\STX\EOT\SOH\STX\ENQ\DC2\ETX\DEL\ETX\"\"\US Rpc protocol version mismatch\n\n\SO\n\a\EOT\STX\EOT\SOH\STX\ENQ\SOH\DC2\ETX\DEL\ETX\GS\n\SO\n\a\EOT\STX\EOT\SOH\STX\ENQ\STX\DC2\ETX\DEL !\nX\n\ACK\EOT\STX\EOT\SOH\STX\ACK\DC2\EOT\131\SOH\ETX\SYN\SUB1 Fatal Server side Rpc error - connection closed\n\"\NAK unknown Fatal error\n\n\SI\n\a\EOT\STX\EOT\SOH\STX\ACK\SOH\DC2\EOT\131\SOH\ETX\DLE\n\SI\n\a\EOT\STX\EOT\SOH\STX\ACK\STX\DC2\EOT\131\SOH\DC3\NAK\n5\n\ACK\EOT\STX\EOT\SOH\STX\a\DC2\EOT\132\SOH\ETX(\"% IPC layer serilization type invalid\n\n\SI\n\a\EOT\STX\EOT\SOH\STX\a\SOH\DC2\EOT\132\SOH\ETX\"\n\SI\n\a\EOT\STX\EOT\SOH\STX\a\STX\DC2\EOT\132\SOH%'\n1\n\ACK\EOT\STX\EOT\SOH\STX\b\DC2\EOT\133\SOH\ETX!\"! fields of RpcHeader are invalid\n\n\SI\n\a\EOT\STX\EOT\SOH\STX\b\SOH\DC2\EOT\133\SOH\ETX\ESC\n\SI\n\a\EOT\STX\EOT\SOH\STX\b\STX\DC2\EOT\133\SOH\RS \n2\n\ACK\EOT\STX\EOT\SOH\STX\t\DC2\EOT\134\SOH\ETX$\"\" could not deserilize rpc request\n\n\SI\n\a\EOT\STX\EOT\SOH\STX\t\SOH\DC2\EOT\134\SOH\ETX\RS\n\SI\n\a\EOT\STX\EOT\SOH\STX\t\STX\DC2\EOT\134\SOH!#\n,\n\ACK\EOT\STX\EOT\SOH\STX\n\DC2\EOT\135\SOH\ETX\US\"\FS Ipc Layer version mismatch\n\n\SI\n\a\EOT\STX\EOT\SOH\STX\n\SOH\DC2\EOT\135\SOH\ETX\EM\n\SI\n\a\EOT\STX\EOT\SOH\STX\n\STX\DC2\EOT\135\SOH\FS\RS\n\GS\n\ACK\EOT\STX\EOT\SOH\STX\v\DC2\EOT\136\SOH\ETX\ESC\"\r Auth failed\n\n\SI\n\a\EOT\STX\EOT\SOH\STX\v\SOH\DC2\EOT\136\SOH\ETX\NAK\n\SI\n\a\EOT\STX\EOT\SOH\STX\v\STX\DC2\EOT\136\SOH\CAN\SUB\n&\n\EOT\EOT\STX\STX\NUL\DC2\EOT\139\SOH\STX\GS\"\CAN callId used in Request\n\n\r\n\ENQ\EOT\STX\STX\NUL\EOT\DC2\EOT\139\SOH\STX\n\n\r\n\ENQ\EOT\STX\STX\NUL\ENQ\DC2\EOT\139\SOH\v\DC1\n\r\n\ENQ\EOT\STX\STX\NUL\SOH\DC2\EOT\139\SOH\DC2\CAN\n\r\n\ENQ\EOT\STX\STX\NUL\ETX\DC2\EOT\139\SOH\ESC\FS\n\f\n\EOT\EOT\STX\STX\SOH\DC2\EOT\140\SOH\STX%\n\r\n\ENQ\EOT\STX\STX\SOH\EOT\DC2\EOT\140\SOH\STX\n\n\r\n\ENQ\EOT\STX\STX\SOH\ACK\DC2\EOT\140\SOH\v\EM\n\r\n\ENQ\EOT\STX\STX\SOH\SOH\DC2\EOT\140\SOH\SUB \n\r\n\ENQ\EOT\STX\STX\SOH\ETX\DC2\EOT\140\SOH#$\n'\n\EOT\EOT\STX\STX\STX\DC2\EOT\141\SOH\STX*\"\EM Sent if success or fail\n\n\r\n\ENQ\EOT\STX\STX\STX\EOT\DC2\EOT\141\SOH\STX\n\n\r\n\ENQ\EOT\STX\STX\STX\ENQ\DC2\EOT\141\SOH\v\DC1\n\r\n\ENQ\EOT\STX\STX\STX\SOH\DC2\EOT\141\SOH\DC2%\n\r\n\ENQ\EOT\STX\STX\STX\ETX\DC2\EOT\141\SOH()\n \n\EOT\EOT\STX\STX\ETX\DC2\EOT\142\SOH\STX)\"\DC2 if request fails\n\n\r\n\ENQ\EOT\STX\STX\ETX\EOT\DC2\EOT\142\SOH\STX\n\n\r\n\ENQ\EOT\STX\STX\ETX\ENQ\DC2\EOT\142\SOH\v\DC1\n\r\n\ENQ\EOT\STX\STX\ETX\SOH\DC2\EOT\142\SOH\DC2$\n\r\n\ENQ\EOT\STX\STX\ETX\ETX\DC2\EOT\142\SOH'(\n=\n\EOT\EOT\STX\STX\EOT\DC2\EOT\143\SOH\STX\US\"/ if request fails, often contains strack trace\n\n\r\n\ENQ\EOT\STX\STX\EOT\EOT\DC2\EOT\143\SOH\STX\n\n\r\n\ENQ\EOT\STX\STX\EOT\ENQ\DC2\EOT\143\SOH\v\DC1\n\r\n\ENQ\EOT\STX\STX\EOT\SOH\DC2\EOT\143\SOH\DC2\SUB\n\r\n\ENQ\EOT\STX\STX\EOT\ETX\DC2\EOT\143\SOH\GS\RS\n \n\EOT\EOT\STX\STX\ENQ\DC2\EOT\144\SOH\STX-\"\DC2 in case of error\n\n\r\n\ENQ\EOT\STX\STX\ENQ\EOT\DC2\EOT\144\SOH\STX\n\n\r\n\ENQ\EOT\STX\STX\ENQ\ACK\DC2\EOT\144\SOH\v\FS\n\r\n\ENQ\EOT\STX\STX\ENQ\SOH\DC2\EOT\144\SOH\GS(\n\r\n\ENQ\EOT\STX\STX\ENQ\ETX\DC2\EOT\144\SOH+,\n)\n\EOT\EOT\STX\STX\ACK\DC2\EOT\145\SOH\STX\RS\"\ESC Globally unique client ID\n\n\r\n\ENQ\EOT\STX\STX\ACK\EOT\DC2\EOT\145\SOH\STX\n\n\r\n\ENQ\EOT\STX\STX\ACK\ENQ\DC2\EOT\145\SOH\v\DLE\n\r\n\ENQ\EOT\STX\STX\ACK\SOH\DC2\EOT\145\SOH\DC1\EM\n\r\n\ENQ\EOT\STX\STX\ACK\ETX\DC2\EOT\145\SOH\FS\GS\n\f\n\EOT\EOT\STX\STX\a\DC2\EOT\146\SOH\STX0\n\r\n\ENQ\EOT\STX\STX\a\EOT\DC2\EOT\146\SOH\STX\n\n\r\n\ENQ\EOT\STX\STX\a\ENQ\DC2\EOT\146\SOH\v\DC1\n\r\n\ENQ\EOT\STX\STX\a\SOH\DC2\EOT\146\SOH\DC2\FS\n\r\n\ENQ\EOT\STX\STX\a\ETX\DC2\EOT\146\SOH\US \n\r\n\ENQ\EOT\STX\STX\a\b\DC2\EOT\146\SOH!/\n\r\n\ENQ\EOT\STX\STX\a\a\DC2\EOT\146\SOH,.\n\f\n\STX\EOT\ETX\DC2\ACK\149\SOH\NUL\171\SOH\SOH\n\v\n\ETX\EOT\ETX\SOH\DC2\EOT\149\SOH\b\DC4\n\SO\n\EOT\EOT\ETX\EOT\NUL\DC2\ACK\150\SOH\STX\157\SOH\ETX\n\r\n\ENQ\EOT\ETX\EOT\NUL\SOH\DC2\EOT\150\SOH\a\DLE\n\SO\n\ACK\EOT\ETX\EOT\NUL\STX\NUL\DC2\EOT\151\SOH\EOT\DC2\n\SI\n\a\EOT\ETX\EOT\NUL\STX\NUL\SOH\DC2\EOT\151\SOH\EOT\v\n\SI\n\a\EOT\ETX\EOT\NUL\STX\NUL\STX\DC2\EOT\151\SOH\DLE\DC1\n\SO\n\ACK\EOT\ETX\EOT\NUL\STX\SOH\DC2\EOT\152\SOH\EOT\DC2\n\SI\n\a\EOT\ETX\EOT\NUL\STX\SOH\SOH\DC2\EOT\152\SOH\EOT\r\n\SI\n\a\EOT\ETX\EOT\NUL\STX\SOH\STX\DC2\EOT\152\SOH\DLE\DC1\n\SO\n\ACK\EOT\ETX\EOT\NUL\STX\STX\DC2\EOT\153\SOH\EOT\DC2\n\SI\n\a\EOT\ETX\EOT\NUL\STX\STX\SOH\DC2\EOT\153\SOH\EOT\f\n\SI\n\a\EOT\ETX\EOT\NUL\STX\STX\STX\DC2\EOT\153\SOH\DLE\DC1\n\SO\n\ACK\EOT\ETX\EOT\NUL\STX\ETX\DC2\EOT\154\SOH\EOT\DC2\n\SI\n\a\EOT\ETX\EOT\NUL\STX\ETX\SOH\DC2\EOT\154\SOH\EOT\r\n\SI\n\a\EOT\ETX\EOT\NUL\STX\ETX\STX\DC2\EOT\154\SOH\DLE\DC1\n\SO\n\ACK\EOT\ETX\EOT\NUL\STX\EOT\DC2\EOT\155\SOH\EOT\DC2\n\SI\n\a\EOT\ETX\EOT\NUL\STX\EOT\SOH\DC2\EOT\155\SOH\EOT\f\n\SI\n\a\EOT\ETX\EOT\NUL\STX\EOT\STX\DC2\EOT\155\SOH\DLE\DC1\n\SO\n\ACK\EOT\ETX\EOT\NUL\STX\ENQ\DC2\EOT\156\SOH\EOT\r\n\SI\n\a\EOT\ETX\EOT\NUL\STX\ENQ\SOH\DC2\EOT\156\SOH\EOT\b\n\SI\n\a\EOT\ETX\EOT\NUL\STX\ENQ\STX\DC2\EOT\156\SOH\v\f\n\SO\n\EOT\EOT\ETX\ETX\NUL\DC2\ACK\159\SOH\STX\165\SOH\ETX\n\r\n\ENQ\EOT\ETX\ETX\NUL\SOH\DC2\EOT\159\SOH\n\DC2\n\SO\n\ACK\EOT\ETX\ETX\NUL\STX\NUL\DC2\EOT\160\SOH\EOT\"\n\SI\n\a\EOT\ETX\ETX\NUL\STX\NUL\EOT\DC2\EOT\160\SOH\EOT\f\n\SI\n\a\EOT\ETX\ETX\NUL\STX\NUL\ENQ\DC2\EOT\160\SOH\r\DC3\n\SI\n\a\EOT\ETX\ETX\NUL\STX\NUL\SOH\DC2\EOT\160\SOH\DC4\SUB\n\SI\n\a\EOT\ETX\ETX\NUL\STX\NUL\ETX\DC2\EOT\160\SOH !\n\SO\n\ACK\EOT\ETX\ETX\NUL\STX\SOH\DC2\EOT\161\SOH\EOT\"\n\SI\n\a\EOT\ETX\ETX\NUL\STX\SOH\EOT\DC2\EOT\161\SOH\EOT\f\n\SI\n\a\EOT\ETX\ETX\NUL\STX\SOH\ENQ\DC2\EOT\161\SOH\r\DC3\n\SI\n\a\EOT\ETX\ETX\NUL\STX\SOH\SOH\DC2\EOT\161\SOH\DC4\GS\n\SI\n\a\EOT\ETX\ETX\NUL\STX\SOH\ETX\DC2\EOT\161\SOH !\n\SO\n\ACK\EOT\ETX\ETX\NUL\STX\STX\DC2\EOT\162\SOH\EOT\"\n\SI\n\a\EOT\ETX\ETX\NUL\STX\STX\EOT\DC2\EOT\162\SOH\EOT\f\n\SI\n\a\EOT\ETX\ETX\NUL\STX\STX\ENQ\DC2\EOT\162\SOH\r\DC3\n\SI\n\a\EOT\ETX\ETX\NUL\STX\STX\SOH\DC2\EOT\162\SOH\DC4\FS\n\SI\n\a\EOT\ETX\ETX\NUL\STX\STX\ETX\DC2\EOT\162\SOH !\n\SO\n\ACK\EOT\ETX\ETX\NUL\STX\ETX\DC2\EOT\163\SOH\EOT\"\n\SI\n\a\EOT\ETX\ETX\NUL\STX\ETX\EOT\DC2\EOT\163\SOH\EOT\f\n\SI\n\a\EOT\ETX\ETX\NUL\STX\ETX\ENQ\DC2\EOT\163\SOH\r\DC3\n\SI\n\a\EOT\ETX\ETX\NUL\STX\ETX\SOH\DC2\EOT\163\SOH\DC4\FS\n\SI\n\a\EOT\ETX\ETX\NUL\STX\ETX\ETX\DC2\EOT\163\SOH !\n\SO\n\ACK\EOT\ETX\ETX\NUL\STX\EOT\DC2\EOT\164\SOH\EOT\"\n\SI\n\a\EOT\ETX\ETX\NUL\STX\EOT\EOT\DC2\EOT\164\SOH\EOT\f\n\SI\n\a\EOT\ETX\ETX\NUL\STX\EOT\ENQ\DC2\EOT\164\SOH\r\DC2\n\SI\n\a\EOT\ETX\ETX\NUL\STX\EOT\SOH\DC2\EOT\164\SOH\DC4\GS\n\SI\n\a\EOT\ETX\ETX\NUL\STX\EOT\ETX\DC2\EOT\164\SOH !\n\f\n\EOT\EOT\ETX\STX\NUL\DC2\EOT\167\SOH\STX\US\n\r\n\ENQ\EOT\ETX\STX\NUL\EOT\DC2\EOT\167\SOH\STX\n\n\r\n\ENQ\EOT\ETX\STX\NUL\ENQ\DC2\EOT\167\SOH\v\DC1\n\r\n\ENQ\EOT\ETX\STX\NUL\SOH\DC2\EOT\167\SOH\DC2\EM\n\r\n\ENQ\EOT\ETX\STX\NUL\ETX\DC2\EOT\167\SOH\GS\RS\n\f\n\EOT\EOT\ETX\STX\SOH\DC2\EOT\168\SOH\STX\US\n\r\n\ENQ\EOT\ETX\STX\SOH\EOT\DC2\EOT\168\SOH\STX\n\n\r\n\ENQ\EOT\ETX\STX\SOH\ACK\DC2\EOT\168\SOH\v\DC4\n\r\n\ENQ\EOT\ETX\STX\SOH\SOH\DC2\EOT\168\SOH\NAK\SUB\n\r\n\ENQ\EOT\ETX\STX\SOH\ETX\DC2\EOT\168\SOH\GS\RS\n\f\n\EOT\EOT\ETX\STX\STX\DC2\EOT\169\SOH\STX\US\n\r\n\ENQ\EOT\ETX\STX\STX\EOT\DC2\EOT\169\SOH\STX\n\n\r\n\ENQ\EOT\ETX\STX\STX\ENQ\DC2\EOT\169\SOH\v\DLE\n\r\n\ENQ\EOT\ETX\STX\STX\SOH\DC2\EOT\169\SOH\DC1\SYN\n\r\n\ENQ\EOT\ETX\STX\STX\ETX\DC2\EOT\169\SOH\GS\RS\n\f\n\EOT\EOT\ETX\STX\ETX\DC2\EOT\170\SOH\STX\US\n\r\n\ENQ\EOT\ETX\STX\ETX\EOT\DC2\EOT\170\SOH\STX\n\n\r\n\ENQ\EOT\ETX\STX\ETX\ACK\DC2\EOT\170\SOH\v\DC3\n\r\n\ENQ\EOT\ETX\STX\ETX\SOH\DC2\EOT\170\SOH\DC4\EM\n\r\n\ENQ\EOT\ETX\STX\ETX\ETX\DC2\EOT\170\SOH\GS\RS")