{-# LANGUAGE BangPatterns, DataKinds, DeriveDataTypeable, FlexibleInstances, MultiParamTypeClasses #-}
{-# OPTIONS_GHC -fno-warn-unused-imports #-}
module Hadoop.Protos.DatanodeProtocolProtos (protoInfo, fileDescriptorProto) where
import Prelude ((+), (/))
import qualified Prelude as Prelude'
import qualified Data.Typeable as Prelude'
import qualified Data.Data as Prelude'
import qualified Text.ProtocolBuffers.Header as P'
import Text.DescriptorProtos.FileDescriptorProto (FileDescriptorProto)
import Text.ProtocolBuffers.Reflections (ProtoInfo)
import qualified Text.ProtocolBuffers.WireMessage as P' (wireGet,getFromBS)
 
protoInfo :: ProtoInfo
protoInfo
 = Prelude'.read
    "ProtoInfo {protoMod = ProtoName {protobufName = FIName \".hadoop.hdfs.datanode\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [], baseName = MName \"DatanodeProtocolProtos\"}, protoFilePath = [\"Hadoop\",\"Protos\",\"DatanodeProtocolProtos.hs\"], protoSource = \"DatanodeProtocol.proto\", extensionKeys = fromList [], messages = [DescriptorInfo {descName = ProtoName {protobufName = FIName \".hadoop.hdfs.datanode.DatanodeRegistrationProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"DatanodeProtocolProtos\"], baseName = MName \"DatanodeRegistrationProto\"}, descFilePath = [\"Hadoop\",\"Protos\",\"DatanodeProtocolProtos\",\"DatanodeRegistrationProto.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.datanode.DatanodeRegistrationProto.datanodeID\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"DatanodeProtocolProtos\",MName \"DatanodeRegistrationProto\"], baseName' = FName \"datanodeID\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".hadoop.hdfs.DatanodeIDProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"HdfsProtos\"], baseName = MName \"DatanodeIDProto\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.datanode.DatanodeRegistrationProto.storageInfo\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"DatanodeProtocolProtos\",MName \"DatanodeRegistrationProto\"], baseName' = FName \"storageInfo\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 18}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".hadoop.hdfs.StorageInfoProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"HdfsProtos\"], baseName = MName \"StorageInfoProto\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.datanode.DatanodeRegistrationProto.keys\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"DatanodeProtocolProtos\",MName \"DatanodeRegistrationProto\"], baseName' = FName \"keys\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 26}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".hadoop.hdfs.ExportedBlockKeysProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"HdfsProtos\"], baseName = MName \"ExportedBlockKeysProto\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.datanode.DatanodeRegistrationProto.softwareVersion\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"DatanodeProtocolProtos\",MName \"DatanodeRegistrationProto\"], baseName' = FName \"softwareVersion\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 4}, wireTag = WireTag {getWireTag = 34}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".hadoop.hdfs.datanode.DatanodeCommandProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"DatanodeProtocolProtos\"], baseName = MName \"DatanodeCommandProto\"}, descFilePath = [\"Hadoop\",\"Protos\",\"DatanodeProtocolProtos\",\"DatanodeCommandProto.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.datanode.DatanodeCommandProto.cmdType\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"DatanodeProtocolProtos\",MName \"DatanodeCommandProto\"], baseName' = FName \"cmdType\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 8}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 14}, typeName = Just (ProtoName {protobufName = FIName \".hadoop.hdfs.datanode.DatanodeCommandProto.Type\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"DatanodeProtocolProtos\",MName \"DatanodeCommandProto\"], baseName = MName \"Type\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.datanode.DatanodeCommandProto.balancerCmd\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"DatanodeProtocolProtos\",MName \"DatanodeCommandProto\"], baseName' = FName \"balancerCmd\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 18}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".hadoop.hdfs.datanode.BalancerBandwidthCommandProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"DatanodeProtocolProtos\"], baseName = MName \"BalancerBandwidthCommandProto\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.datanode.DatanodeCommandProto.blkCmd\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"DatanodeProtocolProtos\",MName \"DatanodeCommandProto\"], baseName' = FName \"blkCmd\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 26}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".hadoop.hdfs.datanode.BlockCommandProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"DatanodeProtocolProtos\"], baseName = MName \"BlockCommandProto\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.datanode.DatanodeCommandProto.recoveryCmd\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"DatanodeProtocolProtos\",MName \"DatanodeCommandProto\"], baseName' = FName \"recoveryCmd\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 4}, wireTag = WireTag {getWireTag = 34}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".hadoop.hdfs.datanode.BlockRecoveryCommandProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"DatanodeProtocolProtos\"], baseName = MName \"BlockRecoveryCommandProto\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.datanode.DatanodeCommandProto.finalizeCmd\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"DatanodeProtocolProtos\",MName \"DatanodeCommandProto\"], baseName' = FName \"finalizeCmd\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 5}, wireTag = WireTag {getWireTag = 42}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".hadoop.hdfs.datanode.FinalizeCommandProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"DatanodeProtocolProtos\"], baseName = MName \"FinalizeCommandProto\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.datanode.DatanodeCommandProto.keyUpdateCmd\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"DatanodeProtocolProtos\",MName \"DatanodeCommandProto\"], baseName' = FName \"keyUpdateCmd\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 6}, wireTag = WireTag {getWireTag = 50}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".hadoop.hdfs.datanode.KeyUpdateCommandProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"DatanodeProtocolProtos\"], baseName = MName \"KeyUpdateCommandProto\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.datanode.DatanodeCommandProto.registerCmd\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"DatanodeProtocolProtos\",MName \"DatanodeCommandProto\"], baseName' = FName \"registerCmd\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 7}, wireTag = WireTag {getWireTag = 58}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".hadoop.hdfs.datanode.RegisterCommandProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"DatanodeProtocolProtos\"], baseName = MName \"RegisterCommandProto\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.datanode.DatanodeCommandProto.blkIdCmd\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"DatanodeProtocolProtos\",MName \"DatanodeCommandProto\"], baseName' = FName \"blkIdCmd\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 8}, wireTag = WireTag {getWireTag = 66}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".hadoop.hdfs.datanode.BlockIdCommandProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"DatanodeProtocolProtos\"], baseName = MName \"BlockIdCommandProto\"}), hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".hadoop.hdfs.datanode.BalancerBandwidthCommandProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"DatanodeProtocolProtos\"], baseName = MName \"BalancerBandwidthCommandProto\"}, descFilePath = [\"Hadoop\",\"Protos\",\"DatanodeProtocolProtos\",\"BalancerBandwidthCommandProto.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.datanode.BalancerBandwidthCommandProto.bandwidth\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"DatanodeProtocolProtos\",MName \"BalancerBandwidthCommandProto\"], baseName' = FName \"bandwidth\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 8}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 4}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".hadoop.hdfs.datanode.BlockCommandProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"DatanodeProtocolProtos\"], baseName = MName \"BlockCommandProto\"}, descFilePath = [\"Hadoop\",\"Protos\",\"DatanodeProtocolProtos\",\"BlockCommandProto.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.datanode.BlockCommandProto.action\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"DatanodeProtocolProtos\",MName \"BlockCommandProto\"], baseName' = FName \"action\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 8}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 14}, typeName = Just (ProtoName {protobufName = FIName \".hadoop.hdfs.datanode.BlockCommandProto.Action\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"DatanodeProtocolProtos\",MName \"BlockCommandProto\"], baseName = MName \"Action\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.datanode.BlockCommandProto.blockPoolId\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"DatanodeProtocolProtos\",MName \"BlockCommandProto\"], baseName' = FName \"blockPoolId\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 18}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.datanode.BlockCommandProto.blocks\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"DatanodeProtocolProtos\",MName \"BlockCommandProto\"], baseName' = FName \"blocks\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 26}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = True, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".hadoop.hdfs.BlockProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"HdfsProtos\"], baseName = MName \"BlockProto\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.datanode.BlockCommandProto.targets\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"DatanodeProtocolProtos\",MName \"BlockCommandProto\"], baseName' = FName \"targets\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 4}, wireTag = WireTag {getWireTag = 34}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = True, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".hadoop.hdfs.DatanodeInfosProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"HdfsProtos\"], baseName = MName \"DatanodeInfosProto\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.datanode.BlockCommandProto.targetStorageUuids\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"DatanodeProtocolProtos\",MName \"BlockCommandProto\"], baseName' = FName \"targetStorageUuids\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 5}, wireTag = WireTag {getWireTag = 42}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = True, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".hadoop.hdfs.StorageUuidsProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"HdfsProtos\"], baseName = MName \"StorageUuidsProto\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.datanode.BlockCommandProto.targetStorageTypes\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"DatanodeProtocolProtos\",MName \"BlockCommandProto\"], baseName' = FName \"targetStorageTypes\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 6}, wireTag = WireTag {getWireTag = 50}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = True, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".hadoop.hdfs.StorageTypesProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"HdfsProtos\"], baseName = MName \"StorageTypesProto\"}), hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".hadoop.hdfs.datanode.BlockIdCommandProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"DatanodeProtocolProtos\"], baseName = MName \"BlockIdCommandProto\"}, descFilePath = [\"Hadoop\",\"Protos\",\"DatanodeProtocolProtos\",\"BlockIdCommandProto.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.datanode.BlockIdCommandProto.action\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"DatanodeProtocolProtos\",MName \"BlockIdCommandProto\"], baseName' = FName \"action\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 8}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 14}, typeName = Just (ProtoName {protobufName = FIName \".hadoop.hdfs.datanode.BlockIdCommandProto.Action\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"DatanodeProtocolProtos\",MName \"BlockIdCommandProto\"], baseName = MName \"Action\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.datanode.BlockIdCommandProto.blockPoolId\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"DatanodeProtocolProtos\",MName \"BlockIdCommandProto\"], baseName' = FName \"blockPoolId\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 18}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.datanode.BlockIdCommandProto.blockIds\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"DatanodeProtocolProtos\",MName \"BlockIdCommandProto\"], baseName' = FName \"blockIds\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 26}, packedTag = Just (WireTag {getWireTag = 24},WireTag {getWireTag = 26}), wireTagLength = 1, isPacked = True, isRequired = False, canRepeat = True, mightPack = True, typeCode = FieldType {getFieldType = 4}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".hadoop.hdfs.datanode.BlockRecoveryCommandProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"DatanodeProtocolProtos\"], baseName = MName \"BlockRecoveryCommandProto\"}, descFilePath = [\"Hadoop\",\"Protos\",\"DatanodeProtocolProtos\",\"BlockRecoveryCommandProto.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.datanode.BlockRecoveryCommandProto.blocks\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"DatanodeProtocolProtos\",MName \"BlockRecoveryCommandProto\"], baseName' = FName \"blocks\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = True, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".hadoop.hdfs.RecoveringBlockProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"HdfsProtos\"], baseName = MName \"RecoveringBlockProto\"}), hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".hadoop.hdfs.datanode.FinalizeCommandProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"DatanodeProtocolProtos\"], baseName = MName \"FinalizeCommandProto\"}, descFilePath = [\"Hadoop\",\"Protos\",\"DatanodeProtocolProtos\",\"FinalizeCommandProto.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.datanode.FinalizeCommandProto.blockPoolId\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"DatanodeProtocolProtos\",MName \"FinalizeCommandProto\"], baseName' = FName \"blockPoolId\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".hadoop.hdfs.datanode.KeyUpdateCommandProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"DatanodeProtocolProtos\"], baseName = MName \"KeyUpdateCommandProto\"}, descFilePath = [\"Hadoop\",\"Protos\",\"DatanodeProtocolProtos\",\"KeyUpdateCommandProto.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.datanode.KeyUpdateCommandProto.keys\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"DatanodeProtocolProtos\",MName \"KeyUpdateCommandProto\"], baseName' = FName \"keys\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".hadoop.hdfs.ExportedBlockKeysProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"HdfsProtos\"], baseName = MName \"ExportedBlockKeysProto\"}), hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".hadoop.hdfs.datanode.RegisterCommandProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"DatanodeProtocolProtos\"], baseName = MName \"RegisterCommandProto\"}, descFilePath = [\"Hadoop\",\"Protos\",\"DatanodeProtocolProtos\",\"RegisterCommandProto.hs\"], isGroup = False, fields = fromList [], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".hadoop.hdfs.datanode.RegisterDatanodeRequestProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"DatanodeProtocolProtos\"], baseName = MName \"RegisterDatanodeRequestProto\"}, descFilePath = [\"Hadoop\",\"Protos\",\"DatanodeProtocolProtos\",\"RegisterDatanodeRequestProto.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.datanode.RegisterDatanodeRequestProto.registration\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"DatanodeProtocolProtos\",MName \"RegisterDatanodeRequestProto\"], baseName' = FName \"registration\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".hadoop.hdfs.datanode.DatanodeRegistrationProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"DatanodeProtocolProtos\"], baseName = MName \"DatanodeRegistrationProto\"}), hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".hadoop.hdfs.datanode.RegisterDatanodeResponseProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"DatanodeProtocolProtos\"], baseName = MName \"RegisterDatanodeResponseProto\"}, descFilePath = [\"Hadoop\",\"Protos\",\"DatanodeProtocolProtos\",\"RegisterDatanodeResponseProto.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.datanode.RegisterDatanodeResponseProto.registration\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"DatanodeProtocolProtos\",MName \"RegisterDatanodeResponseProto\"], baseName' = FName \"registration\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".hadoop.hdfs.datanode.DatanodeRegistrationProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"DatanodeProtocolProtos\"], baseName = MName \"DatanodeRegistrationProto\"}), hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".hadoop.hdfs.datanode.VolumeFailureSummaryProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"DatanodeProtocolProtos\"], baseName = MName \"VolumeFailureSummaryProto\"}, descFilePath = [\"Hadoop\",\"Protos\",\"DatanodeProtocolProtos\",\"VolumeFailureSummaryProto.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.datanode.VolumeFailureSummaryProto.failedStorageLocations\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"DatanodeProtocolProtos\",MName \"VolumeFailureSummaryProto\"], baseName' = FName \"failedStorageLocations\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = True, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.datanode.VolumeFailureSummaryProto.lastVolumeFailureDate\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"DatanodeProtocolProtos\",MName \"VolumeFailureSummaryProto\"], baseName' = FName \"lastVolumeFailureDate\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 16}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 4}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.datanode.VolumeFailureSummaryProto.estimatedCapacityLostTotal\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"DatanodeProtocolProtos\",MName \"VolumeFailureSummaryProto\"], baseName' = FName \"estimatedCapacityLostTotal\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 24}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 4}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".hadoop.hdfs.datanode.HeartbeatRequestProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"DatanodeProtocolProtos\"], baseName = MName \"HeartbeatRequestProto\"}, descFilePath = [\"Hadoop\",\"Protos\",\"DatanodeProtocolProtos\",\"HeartbeatRequestProto.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.datanode.HeartbeatRequestProto.registration\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"DatanodeProtocolProtos\",MName \"HeartbeatRequestProto\"], baseName' = FName \"registration\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".hadoop.hdfs.datanode.DatanodeRegistrationProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"DatanodeProtocolProtos\"], baseName = MName \"DatanodeRegistrationProto\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.datanode.HeartbeatRequestProto.reports\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"DatanodeProtocolProtos\",MName \"HeartbeatRequestProto\"], baseName' = FName \"reports\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 18}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = True, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".hadoop.hdfs.StorageReportProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"HdfsProtos\"], baseName = MName \"StorageReportProto\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.datanode.HeartbeatRequestProto.xmitsInProgress\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"DatanodeProtocolProtos\",MName \"HeartbeatRequestProto\"], baseName' = FName \"xmitsInProgress\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 24}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Just \"0\", hsDefault = Just (HsDef'Integer 0)},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.datanode.HeartbeatRequestProto.xceiverCount\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"DatanodeProtocolProtos\",MName \"HeartbeatRequestProto\"], baseName' = FName \"xceiverCount\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 4}, wireTag = WireTag {getWireTag = 32}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Just \"0\", hsDefault = Just (HsDef'Integer 0)},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.datanode.HeartbeatRequestProto.failedVolumes\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"DatanodeProtocolProtos\",MName \"HeartbeatRequestProto\"], baseName' = FName \"failedVolumes\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 5}, wireTag = WireTag {getWireTag = 40}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Just \"0\", hsDefault = Just (HsDef'Integer 0)},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.datanode.HeartbeatRequestProto.cacheCapacity\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"DatanodeProtocolProtos\",MName \"HeartbeatRequestProto\"], baseName' = FName \"cacheCapacity\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 6}, wireTag = WireTag {getWireTag = 48}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 4}, typeName = Nothing, hsRawDefault = Just \"0\", hsDefault = Just (HsDef'Integer 0)},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.datanode.HeartbeatRequestProto.cacheUsed\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"DatanodeProtocolProtos\",MName \"HeartbeatRequestProto\"], baseName' = FName \"cacheUsed\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 7}, wireTag = WireTag {getWireTag = 56}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 4}, typeName = Nothing, hsRawDefault = Just \"0\", hsDefault = Just (HsDef'Integer 0)},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.datanode.HeartbeatRequestProto.volumeFailureSummary\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"DatanodeProtocolProtos\",MName \"HeartbeatRequestProto\"], baseName' = FName \"volumeFailureSummary\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 8}, wireTag = WireTag {getWireTag = 66}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".hadoop.hdfs.datanode.VolumeFailureSummaryProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"DatanodeProtocolProtos\"], baseName = MName \"VolumeFailureSummaryProto\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.datanode.HeartbeatRequestProto.requestFullBlockReportLease\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"DatanodeProtocolProtos\",MName \"HeartbeatRequestProto\"], baseName' = FName \"requestFullBlockReportLease\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 9}, wireTag = WireTag {getWireTag = 72}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 8}, typeName = Nothing, hsRawDefault = Just \"false\", hsDefault = Just (HsDef'Bool False)}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".hadoop.hdfs.datanode.NNHAStatusHeartbeatProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"DatanodeProtocolProtos\"], baseName = MName \"NNHAStatusHeartbeatProto\"}, descFilePath = [\"Hadoop\",\"Protos\",\"DatanodeProtocolProtos\",\"NNHAStatusHeartbeatProto.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.datanode.NNHAStatusHeartbeatProto.state\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"DatanodeProtocolProtos\",MName \"NNHAStatusHeartbeatProto\"], baseName' = FName \"state\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 8}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 14}, typeName = Just (ProtoName {protobufName = FIName \".hadoop.common.HAServiceStateProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"HAServiceProtocolProtos\"], baseName = MName \"HAServiceStateProto\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.datanode.NNHAStatusHeartbeatProto.txid\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"DatanodeProtocolProtos\",MName \"NNHAStatusHeartbeatProto\"], baseName' = FName \"txid\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 16}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 4}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".hadoop.hdfs.datanode.HeartbeatResponseProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"DatanodeProtocolProtos\"], baseName = MName \"HeartbeatResponseProto\"}, descFilePath = [\"Hadoop\",\"Protos\",\"DatanodeProtocolProtos\",\"HeartbeatResponseProto.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.datanode.HeartbeatResponseProto.cmds\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"DatanodeProtocolProtos\",MName \"HeartbeatResponseProto\"], baseName' = FName \"cmds\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = True, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".hadoop.hdfs.datanode.DatanodeCommandProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"DatanodeProtocolProtos\"], baseName = MName \"DatanodeCommandProto\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.datanode.HeartbeatResponseProto.haStatus\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"DatanodeProtocolProtos\",MName \"HeartbeatResponseProto\"], baseName' = FName \"haStatus\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 18}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".hadoop.hdfs.datanode.NNHAStatusHeartbeatProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"DatanodeProtocolProtos\"], baseName = MName \"NNHAStatusHeartbeatProto\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.datanode.HeartbeatResponseProto.rollingUpgradeStatus\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"DatanodeProtocolProtos\",MName \"HeartbeatResponseProto\"], baseName' = FName \"rollingUpgradeStatus\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 26}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".hadoop.hdfs.RollingUpgradeStatusProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"HdfsProtos\"], baseName = MName \"RollingUpgradeStatusProto\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.datanode.HeartbeatResponseProto.fullBlockReportLeaseId\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"DatanodeProtocolProtos\",MName \"HeartbeatResponseProto\"], baseName' = FName \"fullBlockReportLeaseId\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 4}, wireTag = WireTag {getWireTag = 32}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 4}, typeName = Nothing, hsRawDefault = Just \"0\", hsDefault = Just (HsDef'Integer 0)}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".hadoop.hdfs.datanode.BlockReportRequestProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"DatanodeProtocolProtos\"], baseName = MName \"BlockReportRequestProto\"}, descFilePath = [\"Hadoop\",\"Protos\",\"DatanodeProtocolProtos\",\"BlockReportRequestProto.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.datanode.BlockReportRequestProto.registration\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"DatanodeProtocolProtos\",MName \"BlockReportRequestProto\"], baseName' = FName \"registration\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".hadoop.hdfs.datanode.DatanodeRegistrationProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"DatanodeProtocolProtos\"], baseName = MName \"DatanodeRegistrationProto\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.datanode.BlockReportRequestProto.blockPoolId\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"DatanodeProtocolProtos\",MName \"BlockReportRequestProto\"], baseName' = FName \"blockPoolId\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 18}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.datanode.BlockReportRequestProto.reports\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"DatanodeProtocolProtos\",MName \"BlockReportRequestProto\"], baseName' = FName \"reports\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 26}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = True, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".hadoop.hdfs.datanode.StorageBlockReportProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"DatanodeProtocolProtos\"], baseName = MName \"StorageBlockReportProto\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.datanode.BlockReportRequestProto.context\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"DatanodeProtocolProtos\",MName \"BlockReportRequestProto\"], baseName' = FName \"context\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 4}, wireTag = WireTag {getWireTag = 34}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".hadoop.hdfs.datanode.BlockReportContextProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"DatanodeProtocolProtos\"], baseName = MName \"BlockReportContextProto\"}), hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".hadoop.hdfs.datanode.BlockReportContextProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"DatanodeProtocolProtos\"], baseName = MName \"BlockReportContextProto\"}, descFilePath = [\"Hadoop\",\"Protos\",\"DatanodeProtocolProtos\",\"BlockReportContextProto.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.datanode.BlockReportContextProto.totalRpcs\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"DatanodeProtocolProtos\",MName \"BlockReportContextProto\"], baseName' = FName \"totalRpcs\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 8}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 5}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.datanode.BlockReportContextProto.curRpc\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"DatanodeProtocolProtos\",MName \"BlockReportContextProto\"], baseName' = FName \"curRpc\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 16}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 5}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.datanode.BlockReportContextProto.id\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"DatanodeProtocolProtos\",MName \"BlockReportContextProto\"], baseName' = FName \"id\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 24}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 3}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.datanode.BlockReportContextProto.leaseId\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"DatanodeProtocolProtos\",MName \"BlockReportContextProto\"], baseName' = FName \"leaseId\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 4}, wireTag = WireTag {getWireTag = 32}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 4}, typeName = Nothing, hsRawDefault = Just \"0\", hsDefault = Just (HsDef'Integer 0)}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".hadoop.hdfs.datanode.StorageBlockReportProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"DatanodeProtocolProtos\"], baseName = MName \"StorageBlockReportProto\"}, descFilePath = [\"Hadoop\",\"Protos\",\"DatanodeProtocolProtos\",\"StorageBlockReportProto.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.datanode.StorageBlockReportProto.storage\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"DatanodeProtocolProtos\",MName \"StorageBlockReportProto\"], baseName' = FName \"storage\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".hadoop.hdfs.DatanodeStorageProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"HdfsProtos\"], baseName = MName \"DatanodeStorageProto\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.datanode.StorageBlockReportProto.blocks\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"DatanodeProtocolProtos\",MName \"StorageBlockReportProto\"], baseName' = FName \"blocks\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 18}, packedTag = Just (WireTag {getWireTag = 16},WireTag {getWireTag = 18}), wireTagLength = 1, isPacked = True, isRequired = False, canRepeat = True, mightPack = True, typeCode = FieldType {getFieldType = 4}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.datanode.StorageBlockReportProto.numberOfBlocks\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"DatanodeProtocolProtos\",MName \"StorageBlockReportProto\"], baseName' = FName \"numberOfBlocks\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 24}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 4}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.datanode.StorageBlockReportProto.blocksBuffers\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"DatanodeProtocolProtos\",MName \"StorageBlockReportProto\"], baseName' = FName \"blocksBuffers\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 4}, wireTag = WireTag {getWireTag = 34}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = True, mightPack = False, typeCode = FieldType {getFieldType = 12}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".hadoop.hdfs.datanode.BlockReportResponseProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"DatanodeProtocolProtos\"], baseName = MName \"BlockReportResponseProto\"}, descFilePath = [\"Hadoop\",\"Protos\",\"DatanodeProtocolProtos\",\"BlockReportResponseProto.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.datanode.BlockReportResponseProto.cmd\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"DatanodeProtocolProtos\",MName \"BlockReportResponseProto\"], baseName' = FName \"cmd\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".hadoop.hdfs.datanode.DatanodeCommandProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"DatanodeProtocolProtos\"], baseName = MName \"DatanodeCommandProto\"}), hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".hadoop.hdfs.datanode.CacheReportRequestProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"DatanodeProtocolProtos\"], baseName = MName \"CacheReportRequestProto\"}, descFilePath = [\"Hadoop\",\"Protos\",\"DatanodeProtocolProtos\",\"CacheReportRequestProto.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.datanode.CacheReportRequestProto.registration\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"DatanodeProtocolProtos\",MName \"CacheReportRequestProto\"], baseName' = FName \"registration\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".hadoop.hdfs.datanode.DatanodeRegistrationProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"DatanodeProtocolProtos\"], baseName = MName \"DatanodeRegistrationProto\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.datanode.CacheReportRequestProto.blockPoolId\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"DatanodeProtocolProtos\",MName \"CacheReportRequestProto\"], baseName' = FName \"blockPoolId\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 18}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.datanode.CacheReportRequestProto.blocks\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"DatanodeProtocolProtos\",MName \"CacheReportRequestProto\"], baseName' = FName \"blocks\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 26}, packedTag = Just (WireTag {getWireTag = 24},WireTag {getWireTag = 26}), wireTagLength = 1, isPacked = True, isRequired = False, canRepeat = True, mightPack = True, typeCode = FieldType {getFieldType = 4}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".hadoop.hdfs.datanode.CacheReportResponseProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"DatanodeProtocolProtos\"], baseName = MName \"CacheReportResponseProto\"}, descFilePath = [\"Hadoop\",\"Protos\",\"DatanodeProtocolProtos\",\"CacheReportResponseProto.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.datanode.CacheReportResponseProto.cmd\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"DatanodeProtocolProtos\",MName \"CacheReportResponseProto\"], baseName' = FName \"cmd\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".hadoop.hdfs.datanode.DatanodeCommandProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"DatanodeProtocolProtos\"], baseName = MName \"DatanodeCommandProto\"}), hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".hadoop.hdfs.datanode.ReceivedDeletedBlockInfoProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"DatanodeProtocolProtos\"], baseName = MName \"ReceivedDeletedBlockInfoProto\"}, descFilePath = [\"Hadoop\",\"Protos\",\"DatanodeProtocolProtos\",\"ReceivedDeletedBlockInfoProto.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.datanode.ReceivedDeletedBlockInfoProto.block\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"DatanodeProtocolProtos\",MName \"ReceivedDeletedBlockInfoProto\"], baseName' = FName \"block\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".hadoop.hdfs.BlockProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"HdfsProtos\"], baseName = MName \"BlockProto\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.datanode.ReceivedDeletedBlockInfoProto.status\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"DatanodeProtocolProtos\",MName \"ReceivedDeletedBlockInfoProto\"], baseName' = FName \"status\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 24}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 14}, typeName = Just (ProtoName {protobufName = FIName \".hadoop.hdfs.datanode.ReceivedDeletedBlockInfoProto.BlockStatus\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"DatanodeProtocolProtos\",MName \"ReceivedDeletedBlockInfoProto\"], baseName = MName \"BlockStatus\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.datanode.ReceivedDeletedBlockInfoProto.deleteHint\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"DatanodeProtocolProtos\",MName \"ReceivedDeletedBlockInfoProto\"], baseName' = FName \"deleteHint\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 18}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".hadoop.hdfs.datanode.StorageReceivedDeletedBlocksProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"DatanodeProtocolProtos\"], baseName = MName \"StorageReceivedDeletedBlocksProto\"}, descFilePath = [\"Hadoop\",\"Protos\",\"DatanodeProtocolProtos\",\"StorageReceivedDeletedBlocksProto.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.datanode.StorageReceivedDeletedBlocksProto.storageUuid\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"DatanodeProtocolProtos\",MName \"StorageReceivedDeletedBlocksProto\"], baseName' = FName \"storageUuid\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.datanode.StorageReceivedDeletedBlocksProto.blocks\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"DatanodeProtocolProtos\",MName \"StorageReceivedDeletedBlocksProto\"], baseName' = FName \"blocks\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 18}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = True, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".hadoop.hdfs.datanode.ReceivedDeletedBlockInfoProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"DatanodeProtocolProtos\"], baseName = MName \"ReceivedDeletedBlockInfoProto\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.datanode.StorageReceivedDeletedBlocksProto.storage\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"DatanodeProtocolProtos\",MName \"StorageReceivedDeletedBlocksProto\"], baseName' = FName \"storage\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 26}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".hadoop.hdfs.DatanodeStorageProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"HdfsProtos\"], baseName = MName \"DatanodeStorageProto\"}), hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".hadoop.hdfs.datanode.BlockReceivedAndDeletedRequestProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"DatanodeProtocolProtos\"], baseName = MName \"BlockReceivedAndDeletedRequestProto\"}, descFilePath = [\"Hadoop\",\"Protos\",\"DatanodeProtocolProtos\",\"BlockReceivedAndDeletedRequestProto.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.datanode.BlockReceivedAndDeletedRequestProto.registration\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"DatanodeProtocolProtos\",MName \"BlockReceivedAndDeletedRequestProto\"], baseName' = FName \"registration\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".hadoop.hdfs.datanode.DatanodeRegistrationProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"DatanodeProtocolProtos\"], baseName = MName \"DatanodeRegistrationProto\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.datanode.BlockReceivedAndDeletedRequestProto.blockPoolId\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"DatanodeProtocolProtos\",MName \"BlockReceivedAndDeletedRequestProto\"], baseName' = FName \"blockPoolId\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 18}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.datanode.BlockReceivedAndDeletedRequestProto.blocks\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"DatanodeProtocolProtos\",MName \"BlockReceivedAndDeletedRequestProto\"], baseName' = FName \"blocks\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 26}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = True, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".hadoop.hdfs.datanode.StorageReceivedDeletedBlocksProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"DatanodeProtocolProtos\"], baseName = MName \"StorageReceivedDeletedBlocksProto\"}), hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".hadoop.hdfs.datanode.BlockReceivedAndDeletedResponseProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"DatanodeProtocolProtos\"], baseName = MName \"BlockReceivedAndDeletedResponseProto\"}, descFilePath = [\"Hadoop\",\"Protos\",\"DatanodeProtocolProtos\",\"BlockReceivedAndDeletedResponseProto.hs\"], isGroup = False, fields = fromList [], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".hadoop.hdfs.datanode.ErrorReportRequestProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"DatanodeProtocolProtos\"], baseName = MName \"ErrorReportRequestProto\"}, descFilePath = [\"Hadoop\",\"Protos\",\"DatanodeProtocolProtos\",\"ErrorReportRequestProto.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.datanode.ErrorReportRequestProto.registartion\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"DatanodeProtocolProtos\",MName \"ErrorReportRequestProto\"], baseName' = FName \"registartion\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".hadoop.hdfs.datanode.DatanodeRegistrationProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"DatanodeProtocolProtos\"], baseName = MName \"DatanodeRegistrationProto\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.datanode.ErrorReportRequestProto.errorCode\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"DatanodeProtocolProtos\",MName \"ErrorReportRequestProto\"], baseName' = FName \"errorCode\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 16}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.datanode.ErrorReportRequestProto.msg\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"DatanodeProtocolProtos\",MName \"ErrorReportRequestProto\"], baseName' = FName \"msg\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 26}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".hadoop.hdfs.datanode.ErrorReportResponseProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"DatanodeProtocolProtos\"], baseName = MName \"ErrorReportResponseProto\"}, descFilePath = [\"Hadoop\",\"Protos\",\"DatanodeProtocolProtos\",\"ErrorReportResponseProto.hs\"], isGroup = False, fields = fromList [], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".hadoop.hdfs.datanode.ReportBadBlocksRequestProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"DatanodeProtocolProtos\"], baseName = MName \"ReportBadBlocksRequestProto\"}, descFilePath = [\"Hadoop\",\"Protos\",\"DatanodeProtocolProtos\",\"ReportBadBlocksRequestProto.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.datanode.ReportBadBlocksRequestProto.blocks\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"DatanodeProtocolProtos\",MName \"ReportBadBlocksRequestProto\"], baseName' = FName \"blocks\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = True, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".hadoop.hdfs.LocatedBlockProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"HdfsProtos\"], baseName = MName \"LocatedBlockProto\"}), hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".hadoop.hdfs.datanode.ReportBadBlocksResponseProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"DatanodeProtocolProtos\"], baseName = MName \"ReportBadBlocksResponseProto\"}, descFilePath = [\"Hadoop\",\"Protos\",\"DatanodeProtocolProtos\",\"ReportBadBlocksResponseProto.hs\"], isGroup = False, fields = fromList [], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".hadoop.hdfs.datanode.CommitBlockSynchronizationRequestProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"DatanodeProtocolProtos\"], baseName = MName \"CommitBlockSynchronizationRequestProto\"}, descFilePath = [\"Hadoop\",\"Protos\",\"DatanodeProtocolProtos\",\"CommitBlockSynchronizationRequestProto.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.datanode.CommitBlockSynchronizationRequestProto.block\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"DatanodeProtocolProtos\",MName \"CommitBlockSynchronizationRequestProto\"], baseName' = FName \"block\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".hadoop.hdfs.ExtendedBlockProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"HdfsProtos\"], baseName = MName \"ExtendedBlockProto\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.datanode.CommitBlockSynchronizationRequestProto.newGenStamp\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"DatanodeProtocolProtos\",MName \"CommitBlockSynchronizationRequestProto\"], baseName' = FName \"newGenStamp\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 16}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 4}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.datanode.CommitBlockSynchronizationRequestProto.newLength\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"DatanodeProtocolProtos\",MName \"CommitBlockSynchronizationRequestProto\"], baseName' = FName \"newLength\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 24}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 4}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.datanode.CommitBlockSynchronizationRequestProto.closeFile\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"DatanodeProtocolProtos\",MName \"CommitBlockSynchronizationRequestProto\"], baseName' = FName \"closeFile\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 4}, wireTag = WireTag {getWireTag = 32}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 8}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.datanode.CommitBlockSynchronizationRequestProto.deleteBlock\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"DatanodeProtocolProtos\",MName \"CommitBlockSynchronizationRequestProto\"], baseName' = FName \"deleteBlock\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 5}, wireTag = WireTag {getWireTag = 40}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 8}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.datanode.CommitBlockSynchronizationRequestProto.newTaragets\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"DatanodeProtocolProtos\",MName \"CommitBlockSynchronizationRequestProto\"], baseName' = FName \"newTaragets\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 6}, wireTag = WireTag {getWireTag = 50}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = True, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".hadoop.hdfs.DatanodeIDProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"HdfsProtos\"], baseName = MName \"DatanodeIDProto\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".hadoop.hdfs.datanode.CommitBlockSynchronizationRequestProto.newTargetStorages\", haskellPrefix' = [MName \"Hadoop\",MName \"Protos\"], parentModule' = [MName \"DatanodeProtocolProtos\",MName \"CommitBlockSynchronizationRequestProto\"], baseName' = FName \"newTargetStorages\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 7}, wireTag = WireTag {getWireTag = 58}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = True, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".hadoop.hdfs.datanode.CommitBlockSynchronizationResponseProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"DatanodeProtocolProtos\"], baseName = MName \"CommitBlockSynchronizationResponseProto\"}, descFilePath = [\"Hadoop\",\"Protos\",\"DatanodeProtocolProtos\",\"CommitBlockSynchronizationResponseProto.hs\"], isGroup = False, fields = fromList [], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False}], enums = [EnumInfo {enumName = ProtoName {protobufName = FIName \".hadoop.hdfs.datanode.DatanodeCommandProto.Type\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"DatanodeProtocolProtos\",MName \"DatanodeCommandProto\"], baseName = MName \"Type\"}, enumFilePath = [\"Hadoop\",\"Protos\",\"DatanodeProtocolProtos\",\"DatanodeCommandProto\",\"Type.hs\"], enumValues = [(EnumCode {getEnumCode = 0},\"BalancerBandwidthCommand\"),(EnumCode {getEnumCode = 1},\"BlockCommand\"),(EnumCode {getEnumCode = 2},\"BlockRecoveryCommand\"),(EnumCode {getEnumCode = 3},\"FinalizeCommand\"),(EnumCode {getEnumCode = 4},\"KeyUpdateCommand\"),(EnumCode {getEnumCode = 5},\"RegisterCommand\"),(EnumCode {getEnumCode = 6},\"UnusedUpgradeCommand\"),(EnumCode {getEnumCode = 7},\"NullDatanodeCommand\"),(EnumCode {getEnumCode = 8},\"BlockIdCommand\")]},EnumInfo {enumName = ProtoName {protobufName = FIName \".hadoop.hdfs.datanode.BlockCommandProto.Action\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"DatanodeProtocolProtos\",MName \"BlockCommandProto\"], baseName = MName \"Action\"}, enumFilePath = [\"Hadoop\",\"Protos\",\"DatanodeProtocolProtos\",\"BlockCommandProto\",\"Action.hs\"], enumValues = [(EnumCode {getEnumCode = 1},\"TRANSFER\"),(EnumCode {getEnumCode = 2},\"INVALIDATE\"),(EnumCode {getEnumCode = 3},\"SHUTDOWN\")]},EnumInfo {enumName = ProtoName {protobufName = FIName \".hadoop.hdfs.datanode.BlockIdCommandProto.Action\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"DatanodeProtocolProtos\",MName \"BlockIdCommandProto\"], baseName = MName \"Action\"}, enumFilePath = [\"Hadoop\",\"Protos\",\"DatanodeProtocolProtos\",\"BlockIdCommandProto\",\"Action.hs\"], enumValues = [(EnumCode {getEnumCode = 1},\"CACHE\"),(EnumCode {getEnumCode = 2},\"UNCACHE\")]},EnumInfo {enumName = ProtoName {protobufName = FIName \".hadoop.hdfs.datanode.ReceivedDeletedBlockInfoProto.BlockStatus\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"DatanodeProtocolProtos\",MName \"ReceivedDeletedBlockInfoProto\"], baseName = MName \"BlockStatus\"}, enumFilePath = [\"Hadoop\",\"Protos\",\"DatanodeProtocolProtos\",\"ReceivedDeletedBlockInfoProto\",\"BlockStatus.hs\"], enumValues = [(EnumCode {getEnumCode = 1},\"RECEIVING\"),(EnumCode {getEnumCode = 2},\"RECEIVED\"),(EnumCode {getEnumCode = 3},\"DELETED\")]},EnumInfo {enumName = ProtoName {protobufName = FIName \".hadoop.hdfs.datanode.ErrorReportRequestProto.ErrorCode\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"DatanodeProtocolProtos\",MName \"ErrorReportRequestProto\"], baseName = MName \"ErrorCode\"}, enumFilePath = [\"Hadoop\",\"Protos\",\"DatanodeProtocolProtos\",\"ErrorReportRequestProto\",\"ErrorCode.hs\"], enumValues = [(EnumCode {getEnumCode = 0},\"NOTIFY\"),(EnumCode {getEnumCode = 1},\"DISK_ERROR\"),(EnumCode {getEnumCode = 2},\"INVALID_BLOCK\"),(EnumCode {getEnumCode = 3},\"FATAL_DISK_ERROR\")]}], oneofs = [], services = [ServiceInfo {serviceName = ProtoName {protobufName = FIName \".hadoop.hdfs.datanode.DatanodeProtocolService\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"DatanodeProtocolProtos\"], baseName = MName \"DatanodeProtocolService\"}, serviceMethods = [MethodInfo {methodName = ProtoName {protobufName = FIName \".hadoop.hdfs.datanode.DatanodeProtocolService.registerDatanode\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"DatanodeProtocolProtos\",MName \"DatanodeProtocolService\"], baseName = MName \"RegisterDatanode\"}, methodInput = ProtoName {protobufName = FIName \".hadoop.hdfs.datanode.RegisterDatanodeRequestProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"DatanodeProtocolProtos\"], baseName = MName \"RegisterDatanodeRequestProto\"}, methodOutput = ProtoName {protobufName = FIName \".hadoop.hdfs.datanode.RegisterDatanodeResponseProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"DatanodeProtocolProtos\"], baseName = MName \"RegisterDatanodeResponseProto\"}},MethodInfo {methodName = ProtoName {protobufName = FIName \".hadoop.hdfs.datanode.DatanodeProtocolService.sendHeartbeat\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"DatanodeProtocolProtos\",MName \"DatanodeProtocolService\"], baseName = MName \"SendHeartbeat\"}, methodInput = ProtoName {protobufName = FIName \".hadoop.hdfs.datanode.HeartbeatRequestProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"DatanodeProtocolProtos\"], baseName = MName \"HeartbeatRequestProto\"}, methodOutput = ProtoName {protobufName = FIName \".hadoop.hdfs.datanode.HeartbeatResponseProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"DatanodeProtocolProtos\"], baseName = MName \"HeartbeatResponseProto\"}},MethodInfo {methodName = ProtoName {protobufName = FIName \".hadoop.hdfs.datanode.DatanodeProtocolService.blockReport\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"DatanodeProtocolProtos\",MName \"DatanodeProtocolService\"], baseName = MName \"BlockReport\"}, methodInput = ProtoName {protobufName = FIName \".hadoop.hdfs.datanode.BlockReportRequestProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"DatanodeProtocolProtos\"], baseName = MName \"BlockReportRequestProto\"}, methodOutput = ProtoName {protobufName = FIName \".hadoop.hdfs.datanode.BlockReportResponseProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"DatanodeProtocolProtos\"], baseName = MName \"BlockReportResponseProto\"}},MethodInfo {methodName = ProtoName {protobufName = FIName \".hadoop.hdfs.datanode.DatanodeProtocolService.cacheReport\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"DatanodeProtocolProtos\",MName \"DatanodeProtocolService\"], baseName = MName \"CacheReport\"}, methodInput = ProtoName {protobufName = FIName \".hadoop.hdfs.datanode.CacheReportRequestProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"DatanodeProtocolProtos\"], baseName = MName \"CacheReportRequestProto\"}, methodOutput = ProtoName {protobufName = FIName \".hadoop.hdfs.datanode.CacheReportResponseProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"DatanodeProtocolProtos\"], baseName = MName \"CacheReportResponseProto\"}},MethodInfo {methodName = ProtoName {protobufName = FIName \".hadoop.hdfs.datanode.DatanodeProtocolService.blockReceivedAndDeleted\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"DatanodeProtocolProtos\",MName \"DatanodeProtocolService\"], baseName = MName \"BlockReceivedAndDeleted\"}, methodInput = ProtoName {protobufName = FIName \".hadoop.hdfs.datanode.BlockReceivedAndDeletedRequestProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"DatanodeProtocolProtos\"], baseName = MName \"BlockReceivedAndDeletedRequestProto\"}, methodOutput = ProtoName {protobufName = FIName \".hadoop.hdfs.datanode.BlockReceivedAndDeletedResponseProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"DatanodeProtocolProtos\"], baseName = MName \"BlockReceivedAndDeletedResponseProto\"}},MethodInfo {methodName = ProtoName {protobufName = FIName \".hadoop.hdfs.datanode.DatanodeProtocolService.errorReport\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"DatanodeProtocolProtos\",MName \"DatanodeProtocolService\"], baseName = MName \"ErrorReport\"}, methodInput = ProtoName {protobufName = FIName \".hadoop.hdfs.datanode.ErrorReportRequestProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"DatanodeProtocolProtos\"], baseName = MName \"ErrorReportRequestProto\"}, methodOutput = ProtoName {protobufName = FIName \".hadoop.hdfs.datanode.ErrorReportResponseProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"DatanodeProtocolProtos\"], baseName = MName \"ErrorReportResponseProto\"}},MethodInfo {methodName = ProtoName {protobufName = FIName \".hadoop.hdfs.datanode.DatanodeProtocolService.versionRequest\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"DatanodeProtocolProtos\",MName \"DatanodeProtocolService\"], baseName = MName \"VersionRequest\"}, methodInput = ProtoName {protobufName = FIName \".hadoop.hdfs.VersionRequestProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"HdfsProtos\"], baseName = MName \"VersionRequestProto\"}, methodOutput = ProtoName {protobufName = FIName \".hadoop.hdfs.VersionResponseProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"HdfsProtos\"], baseName = MName \"VersionResponseProto\"}},MethodInfo {methodName = ProtoName {protobufName = FIName \".hadoop.hdfs.datanode.DatanodeProtocolService.reportBadBlocks\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"DatanodeProtocolProtos\",MName \"DatanodeProtocolService\"], baseName = MName \"ReportBadBlocks\"}, methodInput = ProtoName {protobufName = FIName \".hadoop.hdfs.datanode.ReportBadBlocksRequestProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"DatanodeProtocolProtos\"], baseName = MName \"ReportBadBlocksRequestProto\"}, methodOutput = ProtoName {protobufName = FIName \".hadoop.hdfs.datanode.ReportBadBlocksResponseProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"DatanodeProtocolProtos\"], baseName = MName \"ReportBadBlocksResponseProto\"}},MethodInfo {methodName = ProtoName {protobufName = FIName \".hadoop.hdfs.datanode.DatanodeProtocolService.commitBlockSynchronization\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"DatanodeProtocolProtos\",MName \"DatanodeProtocolService\"], baseName = MName \"CommitBlockSynchronization\"}, methodInput = ProtoName {protobufName = FIName \".hadoop.hdfs.datanode.CommitBlockSynchronizationRequestProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"DatanodeProtocolProtos\"], baseName = MName \"CommitBlockSynchronizationRequestProto\"}, methodOutput = ProtoName {protobufName = FIName \".hadoop.hdfs.datanode.CommitBlockSynchronizationResponseProto\", haskellPrefix = [MName \"Hadoop\",MName \"Protos\"], parentModule = [MName \"DatanodeProtocolProtos\"], baseName = MName \"CommitBlockSynchronizationResponseProto\"}}], serviceFilePath = [\"Hadoop\",\"Protos\",\"DatanodeProtocolProtos\",\"DatanodeProtocolService.hs\"]}], knownKeyMap = fromList []}"
 
fileDescriptorProto :: FileDescriptorProto
fileDescriptorProto
 = P'.getFromBS (P'.wireGet 11)
    (P'.pack
      "\165\164\SOH\n\SYNDatanodeProtocol.proto\DC2\DC4hadoop.hdfs.datanode\SUB\ETBHAServiceProtocol.proto\SUB\nhdfs.proto\"\205\SOH\n\EMDatanodeRegistrationProto\DC20\n\ndatanodeID\CAN\SOH \STX(\v2\FS.hadoop.hdfs.DatanodeIDProto\DC22\n\vstorageInfo\CAN\STX \STX(\v2\GS.hadoop.hdfs.StorageInfoProto\DC21\n\EOTkeys\CAN\ETX \STX(\v2#.hadoop.hdfs.ExportedBlockKeysProto\DC2\ETB\n\SIsoftwareVersion\CAN\EOT \STX(\t\"\253\ENQ\n\DC4DatanodeCommandProto\DC2@\n\acmdType\CAN\SOH \STX(\SO2/.hadoop.hdfs.datanode.DatanodeCommandProto.Type\DC2H\n\vbalancerCmd\CAN\STX \SOH(\v23.hadoop.hdfs.datanode.BalancerBandwidthCommandProto\DC27\n\ACKblkCmd\CAN\ETX \SOH(\v2'.hadoop.hdfs.datanode.BlockCommandProto\DC2D\n\vrecoveryCmd\CAN\EOT \SOH(\v2/.hadoop.hdfs.datanode.BlockRecoveryCommandProto\DC2?\n\vfinalizeCmd\CAN\ENQ \SOH(\v2*.hadoop.hdfs.datanode.FinalizeCommandProto\DC2A\n\fkeyUpdateCmd\CAN\ACK \SOH(\v2+.hadoop.hdfs.datanode.KeyUpdateCommandProto\DC2?\n\vregisterCmd\CAN\a \SOH(\v2*.hadoop.hdfs.datanode.RegisterCommandProto\DC2;\n\bblkIdCmd\CAN\b \SOH(\v2).hadoop.hdfs.datanode.BlockIdCommandProto\"\215\SOH\n\EOTType\DC2\FS\n\CANBalancerBandwidthCommand\DLE\NUL\DC2\DLE\n\fBlockCommand\DLE\SOH\DC2\CAN\n\DC4BlockRecoveryCommand\DLE\STX\DC2\DC3\n\SIFinalizeCommand\DLE\ETX\DC2\DC4\n\DLEKeyUpdateCommand\DLE\EOT\DC2\DC3\n\SIRegisterCommand\DLE\ENQ\DC2\CAN\n\DC4UnusedUpgradeCommand\DLE\ACK\DC2\ETB\n\DC3NullDatanodeCommand\DLE\a\DC2\DC2\n\SOBlockIdCommand\DLE\b\"2\n\GSBalancerBandwidthCommandProto\DC2\DC1\n\tbandwidth\CAN\SOH \STX(\EOT\"\241\STX\n\DC1BlockCommandProto\DC2>\n\ACKaction\CAN\SOH \STX(\SO2..hadoop.hdfs.datanode.BlockCommandProto.Action\DC2\DC3\n\vblockPoolId\CAN\STX \STX(\t\DC2'\n\ACKblocks\CAN\ETX \ETX(\v2\ETB.hadoop.hdfs.BlockProto\DC20\n\atargets\CAN\EOT \ETX(\v2\US.hadoop.hdfs.DatanodeInfosProto\DC2:\n\DC2targetStorageUuids\CAN\ENQ \ETX(\v2\RS.hadoop.hdfs.StorageUuidsProto\DC2:\n\DC2targetStorageTypes\CAN\ACK \ETX(\v2\RS.hadoop.hdfs.StorageTypesProto\"4\n\ACKAction\DC2\f\n\bTRANSFER\DLE\SOH\DC2\SO\n\nINVALIDATE\DLE\STX\DC2\f\n\bSHUTDOWN\DLE\ETX\"\174\SOH\n\DC3BlockIdCommandProto\DC2@\n\ACKaction\CAN\SOH \STX(\SO20.hadoop.hdfs.datanode.BlockIdCommandProto.Action\DC2\DC3\n\vblockPoolId\CAN\STX \STX(\t\DC2\RS\n\bblockIds\CAN\ETX \ETX(\EOTB\f\b\NUL\DLE\SOH\CAN\NUL(\NUL0\NULP\NUL\" \n\ACKAction\DC2\t\n\ENQCACHE\DLE\SOH\DC2\v\n\aUNCACHE\DLE\STX\"N\n\EMBlockRecoveryCommandProto\DC21\n\ACKblocks\CAN\SOH \ETX(\v2!.hadoop.hdfs.RecoveringBlockProto\"+\n\DC4FinalizeCommandProto\DC2\DC3\n\vblockPoolId\CAN\SOH \STX(\t\"J\n\NAKKeyUpdateCommandProto\DC21\n\EOTkeys\CAN\SOH \STX(\v2#.hadoop.hdfs.ExportedBlockKeysProto\"\SYN\n\DC4RegisterCommandProto\"e\n\FSRegisterDatanodeRequestProto\DC2E\n\fregistration\CAN\SOH \STX(\v2/.hadoop.hdfs.datanode.DatanodeRegistrationProto\"f\n\GSRegisterDatanodeResponseProto\DC2E\n\fregistration\CAN\SOH \STX(\v2/.hadoop.hdfs.datanode.DatanodeRegistrationProto\"~\n\EMVolumeFailureSummaryProto\DC2\RS\n\SYNfailedStorageLocations\CAN\SOH \ETX(\t\DC2\GS\n\NAKlastVolumeFailureDate\CAN\STX \STX(\EOT\DC2\"\n\SUBestimatedCapacityLostTotal\CAN\ETX \STX(\EOT\"\138\ETX\n\NAKHeartbeatRequestProto\DC2E\n\fregistration\CAN\SOH \STX(\v2/.hadoop.hdfs.datanode.DatanodeRegistrationProto\DC20\n\areports\CAN\STX \ETX(\v2\US.hadoop.hdfs.StorageReportProto\DC2\SUB\n\SIxmitsInProgress\CAN\ETX \SOH(\r:\SOH0\DC2\ETB\n\fxceiverCount\CAN\EOT \SOH(\r:\SOH0\DC2\CAN\n\rfailedVolumes\CAN\ENQ \SOH(\r:\SOH0\DC2\CAN\n\rcacheCapacity\CAN\ACK \SOH(\EOT:\SOH0\DC2\DC4\n\tcacheUsed\CAN\a \SOH(\EOT:\SOH0\DC2M\n\DC4volumeFailureSummary\CAN\b \SOH(\v2/.hadoop.hdfs.datanode.VolumeFailureSummaryProto\DC2*\n\ESCrequestFullBlockReportLease\CAN\t \SOH(\b:\ENQfalse\"[\n\CANNNHAStatusHeartbeatProto\DC21\n\ENQstate\CAN\SOH \STX(\SO2\".hadoop.common.HAServiceStateProto\DC2\f\n\EOTtxid\CAN\STX \STX(\EOT\"\253\SOH\n\SYNHeartbeatResponseProto\DC28\n\EOTcmds\CAN\SOH \ETX(\v2*.hadoop.hdfs.datanode.DatanodeCommandProto\DC2@\n\bhaStatus\CAN\STX \STX(\v2..hadoop.hdfs.datanode.NNHAStatusHeartbeatProto\DC2D\n\DC4rollingUpgradeStatus\CAN\ETX \SOH(\v2&.hadoop.hdfs.RollingUpgradeStatusProto\DC2!\n\SYNfullBlockReportLeaseId\CAN\EOT \SOH(\EOT:\SOH0\"\245\SOH\n\ETBBlockReportRequestProto\DC2E\n\fregistration\CAN\SOH \STX(\v2/.hadoop.hdfs.datanode.DatanodeRegistrationProto\DC2\DC3\n\vblockPoolId\CAN\STX \STX(\t\DC2>\n\areports\CAN\ETX \ETX(\v2-.hadoop.hdfs.datanode.StorageBlockReportProto\DC2>\n\acontext\CAN\EOT \SOH(\v2-.hadoop.hdfs.datanode.BlockReportContextProto\"\\\n\ETBBlockReportContextProto\DC2\DC1\n\ttotalRpcs\CAN\SOH \STX(\ENQ\DC2\SO\n\ACKcurRpc\CAN\STX \STX(\ENQ\DC2\n\n\STXid\CAN\ETX \STX(\ETX\DC2\DC2\n\aleaseId\CAN\EOT \SOH(\EOT:\SOH0\"\154\SOH\n\ETBStorageBlockReportProto\DC22\n\astorage\CAN\SOH \STX(\v2!.hadoop.hdfs.DatanodeStorageProto\DC2\FS\n\ACKblocks\CAN\STX \ETX(\EOTB\f\b\NUL\DLE\SOH\CAN\NUL(\NUL0\NULP\NUL\DC2\SYN\n\SOnumberOfBlocks\CAN\ETX \SOH(\EOT\DC2\NAK\n\rblocksBuffers\CAN\EOT \ETX(\f\"S\n\CANBlockReportResponseProto\DC27\n\ETXcmd\CAN\SOH \SOH(\v2*.hadoop.hdfs.datanode.DatanodeCommandProto\"\147\SOH\n\ETBCacheReportRequestProto\DC2E\n\fregistration\CAN\SOH \STX(\v2/.hadoop.hdfs.datanode.DatanodeRegistrationProto\DC2\DC3\n\vblockPoolId\CAN\STX \STX(\t\DC2\FS\n\ACKblocks\CAN\ETX \ETX(\EOTB\f\b\NUL\DLE\SOH\CAN\NUL(\NUL0\NULP\NUL\"S\n\CANCacheReportResponseProto\DC27\n\ETXcmd\CAN\SOH \SOH(\v2*.hadoop.hdfs.datanode.DatanodeCommandProto\"\229\SOH\n\GSReceivedDeletedBlockInfoProto\DC2&\n\ENQblock\CAN\SOH \STX(\v2\ETB.hadoop.hdfs.BlockProto\DC2O\n\ACKstatus\CAN\ETX \STX(\SO2?.hadoop.hdfs.datanode.ReceivedDeletedBlockInfoProto.BlockStatus\DC2\DC2\n\ndeleteHint\CAN\STX \SOH(\t\"7\n\vBlockStatus\DC2\r\n\tRECEIVING\DLE\SOH\DC2\f\n\bRECEIVED\DLE\STX\DC2\v\n\aDELETED\DLE\ETX\"\189\SOH\n!StorageReceivedDeletedBlocksProto\DC2\US\n\vstorageUuid\CAN\SOH \STX(\tB\n\b\NUL\CAN\SOH(\NUL0\NULP\NUL\DC2C\n\ACKblocks\CAN\STX \ETX(\v23.hadoop.hdfs.datanode.ReceivedDeletedBlockInfoProto\DC22\n\astorage\CAN\ETX \SOH(\v2!.hadoop.hdfs.DatanodeStorageProto\"\202\SOH\n#BlockReceivedAndDeletedRequestProto\DC2E\n\fregistration\CAN\SOH \STX(\v2/.hadoop.hdfs.datanode.DatanodeRegistrationProto\DC2\DC3\n\vblockPoolId\CAN\STX \STX(\t\DC2G\n\ACKblocks\CAN\ETX \ETX(\v27.hadoop.hdfs.datanode.StorageReceivedDeletedBlocksProto\"&\n$BlockReceivedAndDeletedResponseProto\"\210\SOH\n\ETBErrorReportRequestProto\DC2E\n\fregistartion\CAN\SOH \STX(\v2/.hadoop.hdfs.datanode.DatanodeRegistrationProto\DC2\DC1\n\terrorCode\CAN\STX \STX(\r\DC2\v\n\ETXmsg\CAN\ETX \STX(\t\"P\n\tErrorCode\DC2\n\n\ACKNOTIFY\DLE\NUL\DC2\SO\n\nDISK_ERROR\DLE\SOH\DC2\DC1\n\rINVALID_BLOCK\DLE\STX\DC2\DC4\n\DLEFATAL_DISK_ERROR\DLE\ETX\"\SUB\n\CANErrorReportResponseProto\"M\n\ESCReportBadBlocksRequestProto\DC2.\n\ACKblocks\CAN\SOH \ETX(\v2\RS.hadoop.hdfs.LocatedBlockProto\"\RS\n\FSReportBadBlocksResponseProto\"\246\SOH\n&CommitBlockSynchronizationRequestProto\DC2.\n\ENQblock\CAN\SOH \STX(\v2\US.hadoop.hdfs.ExtendedBlockProto\DC2\DC3\n\vnewGenStamp\CAN\STX \STX(\EOT\DC2\DC1\n\tnewLength\CAN\ETX \STX(\EOT\DC2\DC1\n\tcloseFile\CAN\EOT \STX(\b\DC2\DC3\n\vdeleteBlock\CAN\ENQ \STX(\b\DC21\n\vnewTaragets\CAN\ACK \ETX(\v2\FS.hadoop.hdfs.DatanodeIDProto\DC2\EM\n\DC1newTargetStorages\CAN\a \ETX(\t\")\n'CommitBlockSynchronizationResponseProto2\240\b\n\ETBDatanodeProtocolService\DC2\DEL\n\DLEregisterDatanode\DC22.hadoop.hdfs.datanode.RegisterDatanodeRequestProto\SUB3.hadoop.hdfs.datanode.RegisterDatanodeResponseProto(\NUL0\NUL\DC2n\n\rsendHeartbeat\DC2+.hadoop.hdfs.datanode.HeartbeatRequestProto\SUB,.hadoop.hdfs.datanode.HeartbeatResponseProto(\NUL0\NUL\DC2p\n\vblockReport\DC2-.hadoop.hdfs.datanode.BlockReportRequestProto\SUB..hadoop.hdfs.datanode.BlockReportResponseProto(\NUL0\NUL\DC2p\n\vcacheReport\DC2-.hadoop.hdfs.datanode.CacheReportRequestProto\SUB..hadoop.hdfs.datanode.CacheReportResponseProto(\NUL0\NUL\DC2\148\SOH\n\ETBblockReceivedAndDeleted\DC29.hadoop.hdfs.datanode.BlockReceivedAndDeletedRequestProto\SUB:.hadoop.hdfs.datanode.BlockReceivedAndDeletedResponseProto(\NUL0\NUL\DC2p\n\verrorReport\DC2-.hadoop.hdfs.datanode.ErrorReportRequestProto\SUB..hadoop.hdfs.datanode.ErrorReportResponseProto(\NUL0\NUL\DC2Y\n\SOversionRequest\DC2 .hadoop.hdfs.VersionRequestProto\SUB!.hadoop.hdfs.VersionResponseProto(\NUL0\NUL\DC2|\n\SIreportBadBlocks\DC21.hadoop.hdfs.datanode.ReportBadBlocksRequestProto\SUB2.hadoop.hdfs.datanode.ReportBadBlocksResponseProto(\NUL0\NUL\DC2\157\SOH\n\SUBcommitBlockSynchronization\DC2<.hadoop.hdfs.datanode.CommitBlockSynchronizationRequestProto\SUB=.hadoop.hdfs.datanode.CommitBlockSynchronizationResponseProto(\NUL0\NULBX\n%org.apache.hadoop.hdfs.protocol.protoB\SYNDatanodeProtocolProtosH\SOHP\NUL\128\SOH\NUL\136\SOH\SOH\144\SOH\NUL\160\SOH\SOH\184\SOH\NUL\216\SOH\NUL\248\SOH\NULJ\235r\n\t\n\NUL\DC2\ENQ\ESC\NUL\181\ETX\SOH\n\b\n\SOH\b\DC2\ETX\ESC\NUL>\n\v\n\EOT\b\231\a\NUL\DC2\ETX\ESC\NUL>\n\f\n\ENQ\b\231\a\NUL\STX\DC2\ETX\ESC\a\DC3\n\r\n\ACK\b\231\a\NUL\STX\NUL\DC2\ETX\ESC\a\DC3\n\SO\n\a\b\231\a\NUL\STX\NUL\SOH\DC2\ETX\ESC\a\DC3\n\f\n\ENQ\b\231\a\NUL\a\DC2\ETX\ESC\SYN=\n\b\n\SOH\b\DC2\ETX\FS\NUL7\n\v\n\EOT\b\231\a\SOH\DC2\ETX\FS\NUL7\n\f\n\ENQ\b\231\a\SOH\STX\DC2\ETX\FS\a\ESC\n\r\n\ACK\b\231\a\SOH\STX\NUL\DC2\ETX\FS\a\ESC\n\SO\n\a\b\231\a\SOH\STX\NUL\SOH\DC2\ETX\FS\a\ESC\n\f\n\ENQ\b\231\a\SOH\a\DC2\ETX\FS\RS6\n\b\n\SOH\b\DC2\ETX\GS\NUL$\n\v\n\EOT\b\231\a\STX\DC2\ETX\GS\NUL$\n\f\n\ENQ\b\231\a\STX\STX\DC2\ETX\GS\a\FS\n\r\n\ACK\b\231\a\STX\STX\NUL\DC2\ETX\GS\a\FS\n\SO\n\a\b\231\a\STX\STX\NUL\SOH\DC2\ETX\GS\a\FS\n\f\n\ENQ\b\231\a\STX\ETX\DC2\ETX\GS\US#\n\b\n\SOH\b\DC2\ETX\RS\NUL,\n\v\n\EOT\b\231\a\ETX\DC2\ETX\RS\NUL,\n\f\n\ENQ\b\231\a\ETX\STX\DC2\ETX\RS\a$\n\r\n\ACK\b\231\a\ETX\STX\NUL\DC2\ETX\RS\a$\n\SO\n\a\b\231\a\ETX\STX\NUL\SOH\DC2\ETX\RS\a$\n\f\n\ENQ\b\231\a\ETX\ETX\DC2\ETX\RS'+\n\b\n\SOH\STX\DC2\ETX\US\b\FS\n\t\n\STX\ETX\NUL\DC2\ETX!\a \n\t\n\STX\ETX\SOH\DC2\ETX\"\a\DC3\n@\n\STX\EOT\NUL\DC2\EOT'\NUL,\SOH\SUB4*\n Information to identify a datanode to a namenode\n\n\n\n\ETX\EOT\NUL\SOH\DC2\ETX'\b!\n#\n\EOT\EOT\NUL\STX\NUL\DC2\ETX(\STX*\"\SYN Datanode information\n\n\f\n\ENQ\EOT\NUL\STX\NUL\EOT\DC2\ETX(\STX\n\n\f\n\ENQ\EOT\NUL\STX\NUL\ACK\DC2\ETX(\v\SUB\n\f\n\ENQ\EOT\NUL\STX\NUL\SOH\DC2\ETX(\ESC%\n\f\n\ENQ\EOT\NUL\STX\NUL\ETX\DC2\ETX(()\n\US\n\EOT\EOT\NUL\STX\SOH\DC2\ETX)\STX,\"\DC2 Node information\n\n\f\n\ENQ\EOT\NUL\STX\SOH\EOT\DC2\ETX)\STX\n\n\f\n\ENQ\EOT\NUL\STX\SOH\ACK\DC2\ETX)\v\ESC\n\f\n\ENQ\EOT\NUL\STX\SOH\SOH\DC2\ETX)\FS'\n\f\n\ENQ\EOT\NUL\STX\SOH\ETX\DC2\ETX)*+\n\EM\n\EOT\EOT\NUL\STX\STX\DC2\ETX*\STX+\"\f Block keys\n\n\f\n\ENQ\EOT\NUL\STX\STX\EOT\DC2\ETX*\STX\n\n\f\n\ENQ\EOT\NUL\STX\STX\ACK\DC2\ETX*\v!\n\f\n\ENQ\EOT\NUL\STX\STX\SOH\DC2\ETX*\"&\n\f\n\ENQ\EOT\NUL\STX\STX\ETX\DC2\ETX*)*\n7\n\EOT\EOT\NUL\STX\ETX\DC2\ETX+\STX&\"* Software version of the DN, e.g. \"2.0.0\"\n\n\f\n\ENQ\EOT\NUL\STX\ETX\EOT\DC2\ETX+\STX\n\n\f\n\ENQ\EOT\NUL\STX\ETX\ENQ\DC2\ETX+\v\DC1\n\f\n\ENQ\EOT\NUL\STX\ETX\SOH\DC2\ETX+\DC2!\n\f\n\ENQ\EOT\NUL\STX\ETX\ETX\DC2\ETX+$%\n<\n\STX\EOT\SOH\DC2\EOT1\NULI\SOH\SUB0*\n Commands sent from namenode to the datanodes\n\n\n\n\ETX\EOT\SOH\SOH\DC2\ETX1\b\FS\n\f\n\EOT\EOT\SOH\EOT\NUL\DC2\EOT2\STX<\ETX\n\f\n\ENQ\EOT\SOH\EOT\NUL\SOH\DC2\ETX2\a\v\n\r\n\ACK\EOT\SOH\EOT\NUL\STX\NUL\DC2\ETX3\EOT!\n\SO\n\a\EOT\SOH\EOT\NUL\STX\NUL\SOH\DC2\ETX3\EOT\FS\n\SO\n\a\EOT\SOH\EOT\NUL\STX\NUL\STX\DC2\ETX3\US \n\r\n\ACK\EOT\SOH\EOT\NUL\STX\SOH\DC2\ETX4\EOT\NAK\n\SO\n\a\EOT\SOH\EOT\NUL\STX\SOH\SOH\DC2\ETX4\EOT\DLE\n\SO\n\a\EOT\SOH\EOT\NUL\STX\SOH\STX\DC2\ETX4\DC3\DC4\n\r\n\ACK\EOT\SOH\EOT\NUL\STX\STX\DC2\ETX5\EOT\GS\n\SO\n\a\EOT\SOH\EOT\NUL\STX\STX\SOH\DC2\ETX5\EOT\CAN\n\SO\n\a\EOT\SOH\EOT\NUL\STX\STX\STX\DC2\ETX5\ESC\FS\n\r\n\ACK\EOT\SOH\EOT\NUL\STX\ETX\DC2\ETX6\EOT\CAN\n\SO\n\a\EOT\SOH\EOT\NUL\STX\ETX\SOH\DC2\ETX6\EOT\DC3\n\SO\n\a\EOT\SOH\EOT\NUL\STX\ETX\STX\DC2\ETX6\SYN\ETB\n\r\n\ACK\EOT\SOH\EOT\NUL\STX\EOT\DC2\ETX7\EOT\EM\n\SO\n\a\EOT\SOH\EOT\NUL\STX\EOT\SOH\DC2\ETX7\EOT\DC4\n\SO\n\a\EOT\SOH\EOT\NUL\STX\EOT\STX\DC2\ETX7\ETB\CAN\n\r\n\ACK\EOT\SOH\EOT\NUL\STX\ENQ\DC2\ETX8\EOT\CAN\n\SO\n\a\EOT\SOH\EOT\NUL\STX\ENQ\SOH\DC2\ETX8\EOT\DC3\n\SO\n\a\EOT\SOH\EOT\NUL\STX\ENQ\STX\DC2\ETX8\SYN\ETB\n\r\n\ACK\EOT\SOH\EOT\NUL\STX\ACK\DC2\ETX9\EOT\GS\n\SO\n\a\EOT\SOH\EOT\NUL\STX\ACK\SOH\DC2\ETX9\EOT\CAN\n\SO\n\a\EOT\SOH\EOT\NUL\STX\ACK\STX\DC2\ETX9\ESC\FS\n\r\n\ACK\EOT\SOH\EOT\NUL\STX\a\DC2\ETX:\EOT\FS\n\SO\n\a\EOT\SOH\EOT\NUL\STX\a\SOH\DC2\ETX:\EOT\ETB\n\SO\n\a\EOT\SOH\EOT\NUL\STX\a\STX\DC2\ETX:\SUB\ESC\n\r\n\ACK\EOT\SOH\EOT\NUL\STX\b\DC2\ETX;\EOT\ETB\n\SO\n\a\EOT\SOH\EOT\NUL\STX\b\SOH\DC2\ETX;\EOT\DC2\n\SO\n\a\EOT\SOH\EOT\NUL\STX\b\STX\DC2\ETX;\NAK\SYN\n\"\n\EOT\EOT\SOH\STX\NUL\DC2\ETX>\STX\FS\"\NAK Type of the command\n\n\f\n\ENQ\EOT\SOH\STX\NUL\EOT\DC2\ETX>\STX\n\n\f\n\ENQ\EOT\SOH\STX\NUL\ACK\DC2\ETX>\v\SI\n\f\n\ENQ\EOT\SOH\STX\NUL\SOH\DC2\ETX>\DLE\ETB\n\f\n\ENQ\EOT\SOH\STX\NUL\ETX\DC2\ETX>\SUB\ESC\n_\n\EOT\EOT\SOH\STX\SOH\DC2\ETXB\STX9\SUBR One of the following command is available when the corresponding\n cmdType is set\n\n\f\n\ENQ\EOT\SOH\STX\SOH\EOT\DC2\ETXB\STX\n\n\f\n\ENQ\EOT\SOH\STX\SOH\ACK\DC2\ETXB\v(\n\f\n\ENQ\EOT\SOH\STX\SOH\SOH\DC2\ETXB)4\n\f\n\ENQ\EOT\SOH\STX\SOH\ETX\DC2\ETXB78\n\v\n\EOT\EOT\SOH\STX\STX\DC2\ETXC\STX(\n\f\n\ENQ\EOT\SOH\STX\STX\EOT\DC2\ETXC\STX\n\n\f\n\ENQ\EOT\SOH\STX\STX\ACK\DC2\ETXC\v\FS\n\f\n\ENQ\EOT\SOH\STX\STX\SOH\DC2\ETXC\GS#\n\f\n\ENQ\EOT\SOH\STX\STX\ETX\DC2\ETXC&'\n\v\n\EOT\EOT\SOH\STX\ETX\DC2\ETXD\STX5\n\f\n\ENQ\EOT\SOH\STX\ETX\EOT\DC2\ETXD\STX\n\n\f\n\ENQ\EOT\SOH\STX\ETX\ACK\DC2\ETXD\v$\n\f\n\ENQ\EOT\SOH\STX\ETX\SOH\DC2\ETXD%0\n\f\n\ENQ\EOT\SOH\STX\ETX\ETX\DC2\ETXD34\n\v\n\EOT\EOT\SOH\STX\EOT\DC2\ETXE\STX0\n\f\n\ENQ\EOT\SOH\STX\EOT\EOT\DC2\ETXE\STX\n\n\f\n\ENQ\EOT\SOH\STX\EOT\ACK\DC2\ETXE\v\US\n\f\n\ENQ\EOT\SOH\STX\EOT\SOH\DC2\ETXE +\n\f\n\ENQ\EOT\SOH\STX\EOT\ETX\DC2\ETXE./\n\v\n\EOT\EOT\SOH\STX\ENQ\DC2\ETXF\STX2\n\f\n\ENQ\EOT\SOH\STX\ENQ\EOT\DC2\ETXF\STX\n\n\f\n\ENQ\EOT\SOH\STX\ENQ\ACK\DC2\ETXF\v \n\f\n\ENQ\EOT\SOH\STX\ENQ\SOH\DC2\ETXF!-\n\f\n\ENQ\EOT\SOH\STX\ENQ\ETX\DC2\ETXF01\n\v\n\EOT\EOT\SOH\STX\ACK\DC2\ETXG\STX0\n\f\n\ENQ\EOT\SOH\STX\ACK\EOT\DC2\ETXG\STX\n\n\f\n\ENQ\EOT\SOH\STX\ACK\ACK\DC2\ETXG\v\US\n\f\n\ENQ\EOT\SOH\STX\ACK\SOH\DC2\ETXG +\n\f\n\ENQ\EOT\SOH\STX\ACK\ETX\DC2\ETXG./\n\v\n\EOT\EOT\SOH\STX\a\DC2\ETXH\STX,\n\f\n\ENQ\EOT\SOH\STX\a\EOT\DC2\ETXH\STX\n\n\f\n\ENQ\EOT\SOH\STX\a\ACK\DC2\ETXH\v\RS\n\f\n\ENQ\EOT\SOH\STX\a\SOH\DC2\ETXH\US'\n\f\n\ENQ\EOT\SOH\STX\a\ETX\DC2\ETXH*+\nn\n\STX\EOT\STX\DC2\EOTO\NULS\SOH\SUBb*\n Command sent from namenode to datanode to set the\n maximum bandwidth to be used for balancing.\n\n\n\n\ETX\EOT\STX\SOH\DC2\ETXO\b%\nE\n\EOT\EOT\STX\STX\NUL\DC2\ETXR\STX \SUB8 Maximum bandwidth to be used by datanode for balancing\n\n\f\n\ENQ\EOT\STX\STX\NUL\EOT\DC2\ETXR\STX\n\n\f\n\ENQ\EOT\STX\STX\NUL\ENQ\DC2\ETXR\v\DC1\n\f\n\ENQ\EOT\STX\STX\NUL\SOH\DC2\ETXR\DC2\ESC\n\f\n\ENQ\EOT\STX\STX\NUL\ETX\DC2\ETXR\RS\US\nd\n\STX\EOT\ETX\DC2\EOTY\NULf\SOH\SUBX*\n Command to instruct datanodes to perform certain action\n on the given set of blocks.\n\n\n\n\ETX\EOT\ETX\SOH\DC2\ETXY\b\EM\n\f\n\EOT\EOT\ETX\EOT\NUL\DC2\EOTZ\STX^\ETX\n\f\n\ENQ\EOT\ETX\EOT\NUL\SOH\DC2\ETXZ\a\r\n4\n\ACK\EOT\ETX\EOT\NUL\STX\NUL\DC2\ETX[\EOT\DC1\"% Transfer blocks to another datanode\n\n\SO\n\a\EOT\ETX\EOT\NUL\STX\NUL\SOH\DC2\ETX[\EOT\f\n\SO\n\a\EOT\ETX\EOT\NUL\STX\NUL\STX\DC2\ETX[\SI\DLE\n\"\n\ACK\EOT\ETX\EOT\NUL\STX\SOH\DC2\ETX\\\EOT\DC3\"\DC3 Invalidate blocks\n\n\SO\n\a\EOT\ETX\EOT\NUL\STX\SOH\SOH\DC2\ETX\\\EOT\SO\n\SO\n\a\EOT\ETX\EOT\NUL\STX\SOH\STX\DC2\ETX\\\DC1\DC2\n&\n\ACK\EOT\ETX\EOT\NUL\STX\STX\DC2\ETX]\EOT\DC1\"\ETB Shutdown the datanode\n\n\SO\n\a\EOT\ETX\EOT\NUL\STX\STX\SOH\DC2\ETX]\EOT\f\n\SO\n\a\EOT\ETX\EOT\NUL\STX\STX\STX\DC2\ETX]\SI\DLE\n\v\n\EOT\EOT\ETX\STX\NUL\DC2\ETX`\STX\GS\n\f\n\ENQ\EOT\ETX\STX\NUL\EOT\DC2\ETX`\STX\n\n\f\n\ENQ\EOT\ETX\STX\NUL\ACK\DC2\ETX`\v\DC1\n\f\n\ENQ\EOT\ETX\STX\NUL\SOH\DC2\ETX`\DC2\CAN\n\f\n\ENQ\EOT\ETX\STX\NUL\ETX\DC2\ETX`\ESC\FS\n\v\n\EOT\EOT\ETX\STX\SOH\DC2\ETXa\STX\"\n\f\n\ENQ\EOT\ETX\STX\SOH\EOT\DC2\ETXa\STX\n\n\f\n\ENQ\EOT\ETX\STX\SOH\ENQ\DC2\ETXa\v\DC1\n\f\n\ENQ\EOT\ETX\STX\SOH\SOH\DC2\ETXa\DC2\GS\n\f\n\ENQ\EOT\ETX\STX\SOH\ETX\DC2\ETXa !\n\v\n\EOT\EOT\ETX\STX\STX\DC2\ETXb\STX!\n\f\n\ENQ\EOT\ETX\STX\STX\EOT\DC2\ETXb\STX\n\n\f\n\ENQ\EOT\ETX\STX\STX\ACK\DC2\ETXb\v\NAK\n\f\n\ENQ\EOT\ETX\STX\STX\SOH\DC2\ETXb\SYN\FS\n\f\n\ENQ\EOT\ETX\STX\STX\ETX\DC2\ETXb\US \n\v\n\EOT\EOT\ETX\STX\ETX\DC2\ETXc\STX*\n\f\n\ENQ\EOT\ETX\STX\ETX\EOT\DC2\ETXc\STX\n\n\f\n\ENQ\EOT\ETX\STX\ETX\ACK\DC2\ETXc\v\GS\n\f\n\ENQ\EOT\ETX\STX\ETX\SOH\DC2\ETXc\RS%\n\f\n\ENQ\EOT\ETX\STX\ETX\ETX\DC2\ETXc()\n\v\n\EOT\EOT\ETX\STX\EOT\DC2\ETXd\STX4\n\f\n\ENQ\EOT\ETX\STX\EOT\EOT\DC2\ETXd\STX\n\n\f\n\ENQ\EOT\ETX\STX\EOT\ACK\DC2\ETXd\v\FS\n\f\n\ENQ\EOT\ETX\STX\EOT\SOH\DC2\ETXd\GS/\n\f\n\ENQ\EOT\ETX\STX\EOT\ETX\DC2\ETXd23\n\v\n\EOT\EOT\ETX\STX\ENQ\DC2\ETXe\STX4\n\f\n\ENQ\EOT\ETX\STX\ENQ\EOT\DC2\ETXe\STX\n\n\f\n\ENQ\EOT\ETX\STX\ENQ\ACK\DC2\ETXe\v\FS\n\f\n\ENQ\EOT\ETX\STX\ENQ\SOH\DC2\ETXe\GS/\n\f\n\ENQ\EOT\ETX\STX\ENQ\ETX\DC2\ETXe23\ng\n\STX\EOT\EOT\DC2\EOTl\NULt\SOH\SUB[*\n Command to instruct datanodes to perform certain action\n on the given set of block IDs.\n\n\n\n\ETX\EOT\EOT\SOH\DC2\ETXl\b\ESC\n\f\n\EOT\EOT\EOT\EOT\NUL\DC2\EOTm\STXp\ETX\n\f\n\ENQ\EOT\EOT\EOT\NUL\SOH\DC2\ETXm\a\r\n\r\n\ACK\EOT\EOT\EOT\NUL\STX\NUL\DC2\ETXn\EOT\SO\n\SO\n\a\EOT\EOT\EOT\NUL\STX\NUL\SOH\DC2\ETXn\EOT\t\n\SO\n\a\EOT\EOT\EOT\NUL\STX\NUL\STX\DC2\ETXn\f\r\n\r\n\ACK\EOT\EOT\EOT\NUL\STX\SOH\DC2\ETXo\EOT\DLE\n\SO\n\a\EOT\EOT\EOT\NUL\STX\SOH\SOH\DC2\ETXo\EOT\v\n\SO\n\a\EOT\EOT\EOT\NUL\STX\SOH\STX\DC2\ETXo\SO\SI\n\v\n\EOT\EOT\EOT\STX\NUL\DC2\ETXq\STX\GS\n\f\n\ENQ\EOT\EOT\STX\NUL\EOT\DC2\ETXq\STX\n\n\f\n\ENQ\EOT\EOT\STX\NUL\ACK\DC2\ETXq\v\DC1\n\f\n\ENQ\EOT\EOT\STX\NUL\SOH\DC2\ETXq\DC2\CAN\n\f\n\ENQ\EOT\EOT\STX\NUL\ETX\DC2\ETXq\ESC\FS\n\v\n\EOT\EOT\EOT\STX\SOH\DC2\ETXr\STX\"\n\f\n\ENQ\EOT\EOT\STX\SOH\EOT\DC2\ETXr\STX\n\n\f\n\ENQ\EOT\EOT\STX\SOH\ENQ\DC2\ETXr\v\DC1\n\f\n\ENQ\EOT\EOT\STX\SOH\SOH\DC2\ETXr\DC2\GS\n\f\n\ENQ\EOT\EOT\STX\SOH\ETX\DC2\ETXr !\n\v\n\EOT\EOT\EOT\STX\STX\DC2\ETXs\STX-\n\f\n\ENQ\EOT\EOT\STX\STX\EOT\DC2\ETXs\STX\n\n\f\n\ENQ\EOT\EOT\STX\STX\ENQ\DC2\ETXs\v\DC1\n\f\n\ENQ\EOT\EOT\STX\STX\SOH\DC2\ETXs\DC2\SUB\n\f\n\ENQ\EOT\EOT\STX\STX\ETX\DC2\ETXs\GS\RS\n\f\n\ENQ\EOT\EOT\STX\STX\b\DC2\ETXs\US,\n\SI\n\b\EOT\EOT\STX\STX\b\231\a\NUL\DC2\ETXs +\n\DLE\n\t\EOT\EOT\STX\STX\b\231\a\NUL\STX\DC2\ETXs &\n\DC1\n\n\EOT\EOT\STX\STX\b\231\a\NUL\STX\NUL\DC2\ETXs &\n\DC2\n\v\EOT\EOT\STX\STX\b\231\a\NUL\STX\NUL\SOH\DC2\ETXs &\n\DLE\n\t\EOT\EOT\STX\STX\b\231\a\NUL\ETX\DC2\ETXs'+\n>\n\STX\EOT\ENQ\DC2\EOTy\NUL{\SOH\SUB2*\n List of blocks to be recovered by the datanode\n\n\n\n\ETX\EOT\ENQ\SOH\DC2\ETXy\b!\n\v\n\EOT\EOT\ENQ\STX\NUL\DC2\ETXz\STX+\n\f\n\ENQ\EOT\ENQ\STX\NUL\EOT\DC2\ETXz\STX\n\n\f\n\ENQ\EOT\ENQ\STX\NUL\ACK\DC2\ETXz\v\US\n\f\n\ENQ\EOT\ENQ\STX\NUL\SOH\DC2\ETXz &\n\f\n\ENQ\EOT\ENQ\STX\NUL\ETX\DC2\ETXz)*\n6\n\STX\EOT\ACK\DC2\ACK\128\SOH\NUL\130\SOH\SOH\SUB(*\n Finalize the upgrade at the datanode\n\n\v\n\ETX\EOT\ACK\SOH\DC2\EOT\128\SOH\b\FS\n*\n\EOT\EOT\ACK\STX\NUL\DC2\EOT\129\SOH\STX\"\"\FS Block pool to be finalized\n\n\r\n\ENQ\EOT\ACK\STX\NUL\EOT\DC2\EOT\129\SOH\STX\n\n\r\n\ENQ\EOT\ACK\STX\NUL\ENQ\DC2\EOT\129\SOH\v\DC1\n\r\n\ENQ\EOT\ACK\STX\NUL\SOH\DC2\EOT\129\SOH\DC2\GS\n\r\n\ENQ\EOT\ACK\STX\NUL\ETX\DC2\EOT\129\SOH !\n7\n\STX\EOT\a\DC2\ACK\135\SOH\NUL\137\SOH\SOH\SUB)*\n Update the block keys at the datanode\n\n\v\n\ETX\EOT\a\SOH\DC2\EOT\135\SOH\b\GS\n\f\n\EOT\EOT\a\STX\NUL\DC2\EOT\136\SOH\STX+\n\r\n\ENQ\EOT\a\STX\NUL\EOT\DC2\EOT\136\SOH\STX\n\n\r\n\ENQ\EOT\a\STX\NUL\ACK\DC2\EOT\136\SOH\v!\n\r\n\ENQ\EOT\a\STX\NUL\SOH\DC2\EOT\136\SOH\"&\n\r\n\ENQ\EOT\a\STX\NUL\ETX\DC2\EOT\136\SOH)*\nI\n\STX\EOT\b\DC2\ACK\142\SOH\NUL\144\SOH\SOH\SUB3*\n Instruct datanode to register with the namenode\n\"\ACK void\n\n\v\n\ETX\EOT\b\SOH\DC2\EOT\142\SOH\b\FS\nZ\n\STX\EOT\t\DC2\ACK\149\SOH\NUL\151\SOH\SOH\SUBL*\n registration - Information of the datanode registering with the namenode\n\n\v\n\ETX\EOT\t\SOH\DC2\EOT\149\SOH\b$\n\GS\n\EOT\EOT\t\STX\NUL\DC2\EOT\150\SOH\STX6\"\SI Datanode info\n\n\r\n\ENQ\EOT\t\STX\NUL\EOT\DC2\EOT\150\SOH\STX\n\n\r\n\ENQ\EOT\t\STX\NUL\ACK\DC2\EOT\150\SOH\v$\n\r\n\ENQ\EOT\t\STX\NUL\SOH\DC2\EOT\150\SOH%1\n\r\n\ENQ\EOT\t\STX\NUL\ETX\DC2\EOT\150\SOH45\n\236\SOH\n\STX\EOT\n\DC2\ACK\158\SOH\NUL\160\SOH\SOH\SUB\221\SOH*\n registration - Update registration of the datanode that successfully \n                registered. StorageInfo will be updated to include new \n                storage ID if the datanode did not have one in the request.\n\n\v\n\ETX\EOT\n\SOH\DC2\EOT\158\SOH\b%\n\GS\n\EOT\EOT\n\STX\NUL\DC2\EOT\159\SOH\STX6\"\SI Datanode info\n\n\r\n\ENQ\EOT\n\STX\NUL\EOT\DC2\EOT\159\SOH\STX\n\n\r\n\ENQ\EOT\n\STX\NUL\ACK\DC2\EOT\159\SOH\v$\n\r\n\ENQ\EOT\n\STX\NUL\SOH\DC2\EOT\159\SOH%1\n\r\n\ENQ\EOT\n\STX\NUL\ETX\DC2\EOT\159\SOH45\n\216\SOH\n\STX\EOT\v\DC2\ACK\167\SOH\NUL\171\SOH\SOH\SUB\201\SOH*\n failedStorageLocations - storage locations that have failed\n lastVolumeFailureDate - date/time of last volume failure\n estimatedCapacityLost - estimate of total capacity lost due to volume failures\n\n\v\n\ETX\EOT\v\SOH\DC2\EOT\167\SOH\b!\n\f\n\EOT\EOT\v\STX\NUL\DC2\EOT\168\SOH\STX-\n\r\n\ENQ\EOT\v\STX\NUL\EOT\DC2\EOT\168\SOH\STX\n\n\r\n\ENQ\EOT\v\STX\NUL\ENQ\DC2\EOT\168\SOH\v\DC1\n\r\n\ENQ\EOT\v\STX\NUL\SOH\DC2\EOT\168\SOH\DC2(\n\r\n\ENQ\EOT\v\STX\NUL\ETX\DC2\EOT\168\SOH+,\n\f\n\EOT\EOT\v\STX\SOH\DC2\EOT\169\SOH\STX,\n\r\n\ENQ\EOT\v\STX\SOH\EOT\DC2\EOT\169\SOH\STX\n\n\r\n\ENQ\EOT\v\STX\SOH\ENQ\DC2\EOT\169\SOH\v\DC1\n\r\n\ENQ\EOT\v\STX\SOH\SOH\DC2\EOT\169\SOH\DC2'\n\r\n\ENQ\EOT\v\STX\SOH\ETX\DC2\EOT\169\SOH*+\n\f\n\EOT\EOT\v\STX\STX\DC2\EOT\170\SOH\STX1\n\r\n\ENQ\EOT\v\STX\STX\EOT\DC2\EOT\170\SOH\STX\n\n\r\n\ENQ\EOT\v\STX\STX\ENQ\DC2\EOT\170\SOH\v\DC1\n\r\n\ENQ\EOT\v\STX\STX\SOH\DC2\EOT\170\SOH\DC2,\n\r\n\ENQ\EOT\v\STX\STX\ETX\DC2\EOT\170\SOH/0\n\198\ENQ\n\STX\EOT\f\DC2\ACK\188\SOH\NUL\198\SOH\SOH\SUB\183\ENQ*\n registration - datanode registration information\n capacity - total storage capacity available at the datanode\n dfsUsed - storage used by HDFS\n remaining - remaining storage available for HDFS\n blockPoolUsed - storage used by the block pool\n xmitsInProgress - number of transfers from this datanode to others\n xceiverCount - number of active transceiver threads\n failedVolumes - number of failed volumes.  This is redundant with the\n     information included in volumeFailureSummary, but the field is retained\n     for backwards compatibility.\n cacheCapacity - total cache capacity available at the datanode\n cacheUsed - amount of cache used\n volumeFailureSummary - info about volume failures\n\n\v\n\ETX\EOT\f\SOH\DC2\EOT\188\SOH\b\GS\n\GS\n\EOT\EOT\f\STX\NUL\DC2\EOT\189\SOH\STX6\"\SI Datanode info\n\n\r\n\ENQ\EOT\f\STX\NUL\EOT\DC2\EOT\189\SOH\STX\n\n\r\n\ENQ\EOT\f\STX\NUL\ACK\DC2\EOT\189\SOH\v$\n\r\n\ENQ\EOT\f\STX\NUL\SOH\DC2\EOT\189\SOH%1\n\r\n\ENQ\EOT\f\STX\NUL\ETX\DC2\EOT\189\SOH45\n\f\n\EOT\EOT\f\STX\SOH\DC2\EOT\190\SOH\STX*\n\r\n\ENQ\EOT\f\STX\SOH\EOT\DC2\EOT\190\SOH\STX\n\n\r\n\ENQ\EOT\f\STX\SOH\ACK\DC2\EOT\190\SOH\v\GS\n\r\n\ENQ\EOT\f\STX\SOH\SOH\DC2\EOT\190\SOH\RS%\n\r\n\ENQ\EOT\f\STX\SOH\ETX\DC2\EOT\190\SOH()\n\f\n\EOT\EOT\f\STX\STX\DC2\EOT\191\SOH\STX6\n\r\n\ENQ\EOT\f\STX\STX\EOT\DC2\EOT\191\SOH\STX\n\n\r\n\ENQ\EOT\f\STX\STX\ENQ\DC2\EOT\191\SOH\v\DC1\n\r\n\ENQ\EOT\f\STX\STX\SOH\DC2\EOT\191\SOH\DC2!\n\r\n\ENQ\EOT\f\STX\STX\ETX\DC2\EOT\191\SOH$%\n\r\n\ENQ\EOT\f\STX\STX\b\DC2\EOT\191\SOH&5\n\r\n\ENQ\EOT\f\STX\STX\a\DC2\EOT\191\SOH23\n\f\n\EOT\EOT\f\STX\ETX\DC2\EOT\192\SOH\STX3\n\r\n\ENQ\EOT\f\STX\ETX\EOT\DC2\EOT\192\SOH\STX\n\n\r\n\ENQ\EOT\f\STX\ETX\ENQ\DC2\EOT\192\SOH\v\DC1\n\r\n\ENQ\EOT\f\STX\ETX\SOH\DC2\EOT\192\SOH\DC2\RS\n\r\n\ENQ\EOT\f\STX\ETX\ETX\DC2\EOT\192\SOH!\"\n\r\n\ENQ\EOT\f\STX\ETX\b\DC2\EOT\192\SOH#2\n\r\n\ENQ\EOT\f\STX\ETX\a\DC2\EOT\192\SOH/0\n\f\n\EOT\EOT\f\STX\EOT\DC2\EOT\193\SOH\STX4\n\r\n\ENQ\EOT\f\STX\EOT\EOT\DC2\EOT\193\SOH\STX\n\n\r\n\ENQ\EOT\f\STX\EOT\ENQ\DC2\EOT\193\SOH\v\DC1\n\r\n\ENQ\EOT\f\STX\EOT\SOH\DC2\EOT\193\SOH\DC2\US\n\r\n\ENQ\EOT\f\STX\EOT\ETX\DC2\EOT\193\SOH\"#\n\r\n\ENQ\EOT\f\STX\EOT\b\DC2\EOT\193\SOH$3\n\r\n\ENQ\EOT\f\STX\EOT\a\DC2\EOT\193\SOH01\n\f\n\EOT\EOT\f\STX\ENQ\DC2\EOT\194\SOH\STX4\n\r\n\ENQ\EOT\f\STX\ENQ\EOT\DC2\EOT\194\SOH\STX\n\n\r\n\ENQ\EOT\f\STX\ENQ\ENQ\DC2\EOT\194\SOH\v\DC1\n\r\n\ENQ\EOT\f\STX\ENQ\SOH\DC2\EOT\194\SOH\DC2\US\n\r\n\ENQ\EOT\f\STX\ENQ\ETX\DC2\EOT\194\SOH\"#\n\r\n\ENQ\EOT\f\STX\ENQ\b\DC2\EOT\194\SOH$3\n\r\n\ENQ\EOT\f\STX\ENQ\a\DC2\EOT\194\SOH01\n\f\n\EOT\EOT\f\STX\ACK\DC2\EOT\195\SOH\STX/\n\r\n\ENQ\EOT\f\STX\ACK\EOT\DC2\EOT\195\SOH\STX\n\n\r\n\ENQ\EOT\f\STX\ACK\ENQ\DC2\EOT\195\SOH\v\DC1\n\r\n\ENQ\EOT\f\STX\ACK\SOH\DC2\EOT\195\SOH\DC2\ESC\n\r\n\ENQ\EOT\f\STX\ACK\ETX\DC2\EOT\195\SOH\RS\US\n\r\n\ENQ\EOT\f\STX\ACK\b\DC2\EOT\195\SOH .\n\r\n\ENQ\EOT\f\STX\ACK\a\DC2\EOT\195\SOH+,\n\f\n\EOT\EOT\f\STX\a\DC2\EOT\196\SOH\STX>\n\r\n\ENQ\EOT\f\STX\a\EOT\DC2\EOT\196\SOH\STX\n\n\r\n\ENQ\EOT\f\STX\a\ACK\DC2\EOT\196\SOH\v$\n\r\n\ENQ\EOT\f\STX\a\SOH\DC2\EOT\196\SOH%9\n\r\n\ENQ\EOT\f\STX\a\ETX\DC2\EOT\196\SOH<=\n\f\n\EOT\EOT\f\STX\b\DC2\EOT\197\SOH\STXD\n\r\n\ENQ\EOT\f\STX\b\EOT\DC2\EOT\197\SOH\STX\n\n\r\n\ENQ\EOT\f\STX\b\ENQ\DC2\EOT\197\SOH\v\SI\n\r\n\ENQ\EOT\f\STX\b\SOH\DC2\EOT\197\SOH\DLE+\n\r\n\ENQ\EOT\f\STX\b\ETX\DC2\EOT\197\SOH./\n\r\n\ENQ\EOT\f\STX\b\b\DC2\EOT\197\SOH0C\n\r\n\ENQ\EOT\f\STX\b\a\DC2\EOT\197\SOH<A\n~\n\STX\EOT\r\DC2\ACK\204\SOH\NUL\207\SOH\SOH\SUBp*\n state - State the NN is in when returning response to the DN\n txid - Highest transaction ID this NN has seen\n\n\v\n\ETX\EOT\r\SOH\DC2\EOT\204\SOH\b \n\f\n\EOT\EOT\r\STX\NUL\DC2\EOT\205\SOH\STX7\n\r\n\ENQ\EOT\r\STX\NUL\EOT\DC2\EOT\205\SOH\STX\n\n\r\n\ENQ\EOT\r\STX\NUL\ACK\DC2\EOT\205\SOH\v,\n\r\n\ENQ\EOT\r\STX\NUL\SOH\DC2\EOT\205\SOH-2\n\r\n\ENQ\EOT\r\STX\NUL\ETX\DC2\EOT\205\SOH56\n\f\n\EOT\EOT\r\STX\SOH\DC2\EOT\206\SOH\STX\ESC\n\r\n\ENQ\EOT\r\STX\SOH\EOT\DC2\EOT\206\SOH\STX\n\n\r\n\ENQ\EOT\r\STX\SOH\ENQ\DC2\EOT\206\SOH\v\DC1\n\r\n\ENQ\EOT\r\STX\SOH\SOH\DC2\EOT\206\SOH\DC2\SYN\n\r\n\ENQ\EOT\r\STX\SOH\ETX\DC2\EOT\206\SOH\EM\SUB\n\136\SOH\n\STX\EOT\SO\DC2\ACK\213\SOH\NUL\218\SOH\SOH\SUBz*\n cmds - Commands from namenode to datanode.\n haStatus - Status (from an HA perspective) of the NN sending this response\n\n\v\n\ETX\EOT\SO\SOH\DC2\EOT\213\SOH\b\RS\n-\n\EOT\EOT\SO\STX\NUL\DC2\EOT\214\SOH\STX)\"\US Returned commands can be null\n\n\r\n\ENQ\EOT\SO\STX\NUL\EOT\DC2\EOT\214\SOH\STX\n\n\r\n\ENQ\EOT\SO\STX\NUL\ACK\DC2\EOT\214\SOH\v\US\n\r\n\ENQ\EOT\SO\STX\NUL\SOH\DC2\EOT\214\SOH $\n\r\n\ENQ\EOT\SO\STX\NUL\ETX\DC2\EOT\214\SOH'(\n\f\n\EOT\EOT\SO\STX\SOH\DC2\EOT\215\SOH\STX1\n\r\n\ENQ\EOT\SO\STX\SOH\EOT\DC2\EOT\215\SOH\STX\n\n\r\n\ENQ\EOT\SO\STX\SOH\ACK\DC2\EOT\215\SOH\v#\n\r\n\ENQ\EOT\SO\STX\SOH\SOH\DC2\EOT\215\SOH$,\n\r\n\ENQ\EOT\SO\STX\SOH\ETX\DC2\EOT\215\SOH/0\n\f\n\EOT\EOT\SO\STX\STX\DC2\EOT\216\SOH\STX>\n\r\n\ENQ\EOT\SO\STX\STX\EOT\DC2\EOT\216\SOH\STX\n\n\r\n\ENQ\EOT\SO\STX\STX\ACK\DC2\EOT\216\SOH\v$\n\r\n\ENQ\EOT\SO\STX\STX\SOH\DC2\EOT\216\SOH%9\n\r\n\ENQ\EOT\SO\STX\STX\ETX\DC2\EOT\216\SOH<=\n\f\n\EOT\EOT\SO\STX\ETX\DC2\EOT\217\SOH\STX=\n\r\n\ENQ\EOT\SO\STX\ETX\EOT\DC2\EOT\217\SOH\STX\n\n\r\n\ENQ\EOT\SO\STX\ETX\ENQ\DC2\EOT\217\SOH\v\DC1\n\r\n\ENQ\EOT\SO\STX\ETX\SOH\DC2\EOT\217\SOH\DC2(\n\r\n\ENQ\EOT\SO\STX\ETX\ETX\DC2\EOT\217\SOH+,\n\r\n\ENQ\EOT\SO\STX\ETX\b\DC2\EOT\217\SOH-<\n\r\n\ENQ\EOT\SO\STX\ETX\a\DC2\EOT\217\SOH9:\n\141\EOT\n\STX\EOT\SI\DC2\ACK\231\SOH\NUL\236\SOH\SOH\SUB\254\ETX*\n registration - datanode registration information\n blockPoolID  - block pool ID of the reported blocks\n blocks       - each block is represented as multiple longs in the array.\n                first long represents block ID\n                second long represents length\n                third long represents gen stamp\n                fourth long (if under construction) represents replica state\n context      - An optional field containing information about the context\n                of this block report.\n\n\v\n\ETX\EOT\SI\SOH\DC2\EOT\231\SOH\b\US\n\f\n\EOT\EOT\SI\STX\NUL\DC2\EOT\232\SOH\STX6\n\r\n\ENQ\EOT\SI\STX\NUL\EOT\DC2\EOT\232\SOH\STX\n\n\r\n\ENQ\EOT\SI\STX\NUL\ACK\DC2\EOT\232\SOH\v$\n\r\n\ENQ\EOT\SI\STX\NUL\SOH\DC2\EOT\232\SOH%1\n\r\n\ENQ\EOT\SI\STX\NUL\ETX\DC2\EOT\232\SOH45\n\f\n\EOT\EOT\SI\STX\SOH\DC2\EOT\233\SOH\STX\"\n\r\n\ENQ\EOT\SI\STX\SOH\EOT\DC2\EOT\233\SOH\STX\n\n\r\n\ENQ\EOT\SI\STX\SOH\ENQ\DC2\EOT\233\SOH\v\DC1\n\r\n\ENQ\EOT\SI\STX\SOH\SOH\DC2\EOT\233\SOH\DC2\GS\n\r\n\ENQ\EOT\SI\STX\SOH\ETX\DC2\EOT\233\SOH !\n\f\n\EOT\EOT\SI\STX\STX\DC2\EOT\234\SOH\STX/\n\r\n\ENQ\EOT\SI\STX\STX\EOT\DC2\EOT\234\SOH\STX\n\n\r\n\ENQ\EOT\SI\STX\STX\ACK\DC2\EOT\234\SOH\v\"\n\r\n\ENQ\EOT\SI\STX\STX\SOH\DC2\EOT\234\SOH#*\n\r\n\ENQ\EOT\SI\STX\STX\ETX\DC2\EOT\234\SOH-.\n\f\n\EOT\EOT\SI\STX\ETX\DC2\EOT\235\SOH\STX/\n\r\n\ENQ\EOT\SI\STX\ETX\EOT\DC2\EOT\235\SOH\STX\n\n\r\n\ENQ\EOT\SI\STX\ETX\ACK\DC2\EOT\235\SOH\v\"\n\r\n\ENQ\EOT\SI\STX\ETX\SOH\DC2\EOT\235\SOH#*\n\r\n\ENQ\EOT\SI\STX\ETX\ETX\DC2\EOT\235\SOH-.\n\f\n\STX\EOT\DLE\DC2\ACK\238\SOH\NUL\251\SOH\SOH\n\v\n\ETX\EOT\DLE\SOH\DC2\EOT\238\SOH\b\US\nJ\n\EOT\EOT\DLE\STX\NUL\DC2\EOT\240\SOH\STX\US\SUB< The total number of RPCs this block report is broken into.\n\n\r\n\ENQ\EOT\DLE\STX\NUL\EOT\DC2\EOT\240\SOH\STX\n\n\r\n\ENQ\EOT\DLE\STX\NUL\ENQ\DC2\EOT\240\SOH\v\DLE\n\r\n\ENQ\EOT\DLE\STX\NUL\SOH\DC2\EOT\240\SOH\DC1\SUB\n\r\n\ENQ\EOT\DLE\STX\NUL\ETX\DC2\EOT\240\SOH\GS\RS\n9\n\EOT\EOT\DLE\STX\SOH\DC2\EOT\243\SOH\STX\FS\SUB+ The index of the current RPC (zero-based)\n\n\r\n\ENQ\EOT\DLE\STX\SOH\EOT\DC2\EOT\243\SOH\STX\n\n\r\n\ENQ\EOT\DLE\STX\SOH\ENQ\DC2\EOT\243\SOH\v\DLE\n\r\n\ENQ\EOT\DLE\STX\SOH\SOH\DC2\EOT\243\SOH\DC1\ETB\n\r\n\ENQ\EOT\DLE\STX\SOH\ETX\DC2\EOT\243\SOH\SUB\ESC\n9\n\EOT\EOT\DLE\STX\STX\DC2\EOT\246\SOH\STX\CAN\SUB+ The unique 64-bit ID of this block report\n\n\r\n\ENQ\EOT\DLE\STX\STX\EOT\DC2\EOT\246\SOH\STX\n\n\r\n\ENQ\EOT\DLE\STX\STX\ENQ\DC2\EOT\246\SOH\v\DLE\n\r\n\ENQ\EOT\DLE\STX\STX\SOH\DC2\EOT\246\SOH\DC1\DC3\n\r\n\ENQ\EOT\DLE\STX\STX\ETX\DC2\EOT\246\SOH\SYN\ETB\nk\n\EOT\EOT\DLE\STX\ETX\DC2\EOT\250\SOH\STX.\SUB] The block report lease ID, or 0 if we are sending without a lease to\n bypass rate-limiting.\n\n\r\n\ENQ\EOT\DLE\STX\ETX\EOT\DC2\EOT\250\SOH\STX\n\n\r\n\ENQ\EOT\DLE\STX\ETX\ENQ\DC2\EOT\250\SOH\v\DC1\n\r\n\ENQ\EOT\DLE\STX\ETX\SOH\DC2\EOT\250\SOH\DC2\EM\n\r\n\ENQ\EOT\DLE\STX\ETX\ETX\DC2\EOT\250\SOH\FS\GS\n\r\n\ENQ\EOT\DLE\STX\ETX\b\DC2\EOT\250\SOH\RS-\n\r\n\ENQ\EOT\DLE\STX\ETX\a\DC2\EOT\250\SOH*+\n/\n\STX\EOT\DC1\DC2\ACK\128\STX\NUL\133\STX\SOH\SUB!*\n Report of blocks in a storage\n\n\v\n\ETX\EOT\DC1\SOH\DC2\EOT\128\STX\b\US\n\ETB\n\EOT\EOT\DC1\STX\NUL\DC2\EOT\129\STX\STX,\"\t Storage\n\n\r\n\ENQ\EOT\DC1\STX\NUL\EOT\DC2\EOT\129\STX\STX\n\n\r\n\ENQ\EOT\DC1\STX\NUL\ACK\DC2\EOT\129\STX\v\US\n\r\n\ENQ\EOT\DC1\STX\NUL\SOH\DC2\EOT\129\STX '\n\r\n\ENQ\EOT\DC1\STX\NUL\ETX\DC2\EOT\129\STX*+\n\f\n\EOT\EOT\DC1\STX\SOH\DC2\EOT\130\STX\STX+\n\r\n\ENQ\EOT\DC1\STX\SOH\EOT\DC2\EOT\130\STX\STX\n\n\r\n\ENQ\EOT\DC1\STX\SOH\ENQ\DC2\EOT\130\STX\v\DC1\n\r\n\ENQ\EOT\DC1\STX\SOH\SOH\DC2\EOT\130\STX\DC2\CAN\n\r\n\ENQ\EOT\DC1\STX\SOH\ETX\DC2\EOT\130\STX\ESC\FS\n\r\n\ENQ\EOT\DC1\STX\SOH\b\DC2\EOT\130\STX\GS*\n\DLE\n\b\EOT\DC1\STX\SOH\b\231\a\NUL\DC2\EOT\130\STX\RS)\n\DC1\n\t\EOT\DC1\STX\SOH\b\231\a\NUL\STX\DC2\EOT\130\STX\RS$\n\DC2\n\n\EOT\DC1\STX\SOH\b\231\a\NUL\STX\NUL\DC2\EOT\130\STX\RS$\n\DC3\n\v\EOT\DC1\STX\SOH\b\231\a\NUL\STX\NUL\SOH\DC2\EOT\130\STX\RS$\n\DC1\n\t\EOT\DC1\STX\SOH\b\231\a\NUL\ETX\DC2\EOT\130\STX%)\n\f\n\EOT\EOT\DC1\STX\STX\DC2\EOT\131\STX\STX%\n\r\n\ENQ\EOT\DC1\STX\STX\EOT\DC2\EOT\131\STX\STX\n\n\r\n\ENQ\EOT\DC1\STX\STX\ENQ\DC2\EOT\131\STX\v\DC1\n\r\n\ENQ\EOT\DC1\STX\STX\SOH\DC2\EOT\131\STX\DC2 \n\r\n\ENQ\EOT\DC1\STX\STX\ETX\DC2\EOT\131\STX#$\n\f\n\EOT\EOT\DC1\STX\ETX\DC2\EOT\132\STX\STX#\n\r\n\ENQ\EOT\DC1\STX\ETX\EOT\DC2\EOT\132\STX\STX\n\n\r\n\ENQ\EOT\DC1\STX\ETX\ENQ\DC2\EOT\132\STX\v\DLE\n\r\n\ENQ\EOT\DC1\STX\ETX\SOH\DC2\EOT\132\STX\DC1\RS\n\r\n\ENQ\EOT\DC1\STX\ETX\ETX\DC2\EOT\132\STX!\"\n=\n\STX\EOT\DC2\DC2\ACK\138\STX\NUL\140\STX\SOH\SUB/*\n cmd - Command from namenode to the datanode\n\n\v\n\ETX\EOT\DC2\SOH\DC2\EOT\138\STX\b \n\f\n\EOT\EOT\DC2\STX\NUL\DC2\EOT\139\STX\STX(\n\r\n\ENQ\EOT\DC2\STX\NUL\EOT\DC2\EOT\139\STX\STX\n\n\r\n\ENQ\EOT\DC2\STX\NUL\ACK\DC2\EOT\139\STX\v\US\n\r\n\ENQ\EOT\DC2\STX\NUL\SOH\DC2\EOT\139\STX #\n\r\n\ENQ\EOT\DC2\STX\NUL\ETX\DC2\EOT\139\STX&'\n\193\SOH\n\STX\EOT\DC3\DC2\ACK\147\STX\NUL\151\STX\SOH\SUB\178\SOH*\n registration - datanode registration information\n blockPoolId  - block pool ID of the reported blocks\n blocks       - representation of blocks as longs for efficiency reasons\n\n\v\n\ETX\EOT\DC3\SOH\DC2\EOT\147\STX\b\US\n\f\n\EOT\EOT\DC3\STX\NUL\DC2\EOT\148\STX\STX6\n\r\n\ENQ\EOT\DC3\STX\NUL\EOT\DC2\EOT\148\STX\STX\n\n\r\n\ENQ\EOT\DC3\STX\NUL\ACK\DC2\EOT\148\STX\v$\n\r\n\ENQ\EOT\DC3\STX\NUL\SOH\DC2\EOT\148\STX%1\n\r\n\ENQ\EOT\DC3\STX\NUL\ETX\DC2\EOT\148\STX45\n\f\n\EOT\EOT\DC3\STX\SOH\DC2\EOT\149\STX\STX\"\n\r\n\ENQ\EOT\DC3\STX\SOH\EOT\DC2\EOT\149\STX\STX\n\n\r\n\ENQ\EOT\DC3\STX\SOH\ENQ\DC2\EOT\149\STX\v\DC1\n\r\n\ENQ\EOT\DC3\STX\SOH\SOH\DC2\EOT\149\STX\DC2\GS\n\r\n\ENQ\EOT\DC3\STX\SOH\ETX\DC2\EOT\149\STX !\n\f\n\EOT\EOT\DC3\STX\STX\DC2\EOT\150\STX\STX+\n\r\n\ENQ\EOT\DC3\STX\STX\EOT\DC2\EOT\150\STX\STX\n\n\r\n\ENQ\EOT\DC3\STX\STX\ENQ\DC2\EOT\150\STX\v\DC1\n\r\n\ENQ\EOT\DC3\STX\STX\SOH\DC2\EOT\150\STX\DC2\CAN\n\r\n\ENQ\EOT\DC3\STX\STX\ETX\DC2\EOT\150\STX\ESC\FS\n\r\n\ENQ\EOT\DC3\STX\STX\b\DC2\EOT\150\STX\GS*\n\DLE\n\b\EOT\DC3\STX\STX\b\231\a\NUL\DC2\EOT\150\STX\RS)\n\DC1\n\t\EOT\DC3\STX\STX\b\231\a\NUL\STX\DC2\EOT\150\STX\RS$\n\DC2\n\n\EOT\DC3\STX\STX\b\231\a\NUL\STX\NUL\DC2\EOT\150\STX\RS$\n\DC3\n\v\EOT\DC3\STX\STX\b\231\a\NUL\STX\NUL\SOH\DC2\EOT\150\STX\RS$\n\DC1\n\t\EOT\DC3\STX\STX\b\231\a\NUL\ETX\DC2\EOT\150\STX%)\n\f\n\STX\EOT\DC4\DC2\ACK\153\STX\NUL\155\STX\SOH\n\v\n\ETX\EOT\DC4\SOH\DC2\EOT\153\STX\b \n\f\n\EOT\EOT\DC4\STX\NUL\DC2\EOT\154\STX\STX(\n\r\n\ENQ\EOT\DC4\STX\NUL\EOT\DC2\EOT\154\STX\STX\n\n\r\n\ENQ\EOT\DC4\STX\NUL\ACK\DC2\EOT\154\STX\v\US\n\r\n\ENQ\EOT\DC4\STX\NUL\SOH\DC2\EOT\154\STX #\n\r\n\ENQ\EOT\DC4\STX\NUL\ETX\DC2\EOT\154\STX&'\nj\n\STX\EOT\NAK\DC2\ACK\161\STX\NUL\171\STX\SOH\SUB\\*\n Data structure to send received or deleted block information\n from datanode to namenode.\n\n\v\n\ETX\EOT\NAK\SOH\DC2\EOT\161\STX\b%\n\SO\n\EOT\EOT\NAK\EOT\NUL\DC2\ACK\162\STX\STX\166\STX\ETX\n\r\n\ENQ\EOT\NAK\EOT\NUL\SOH\DC2\EOT\162\STX\a\DC2\n%\n\ACK\EOT\NAK\EOT\NUL\STX\NUL\DC2\EOT\163\STX\EOT\DC2\"\NAK block being created\n\n\SI\n\a\EOT\NAK\EOT\NUL\STX\NUL\SOH\DC2\EOT\163\STX\EOT\r\n\SI\n\a\EOT\NAK\EOT\NUL\STX\NUL\STX\DC2\EOT\163\STX\DLE\DC1\n)\n\ACK\EOT\NAK\EOT\NUL\STX\SOH\DC2\EOT\164\STX\EOT\DC1\"\EM block creation complete\n\n\SI\n\a\EOT\NAK\EOT\NUL\STX\SOH\SOH\DC2\EOT\164\STX\EOT\f\n\SI\n\a\EOT\NAK\EOT\NUL\STX\SOH\STX\DC2\EOT\164\STX\SI\DLE\n\SO\n\ACK\EOT\NAK\EOT\NUL\STX\STX\DC2\EOT\165\STX\EOT\DLE\n\SI\n\a\EOT\NAK\EOT\NUL\STX\STX\SOH\DC2\EOT\165\STX\EOT\v\n\SI\n\a\EOT\NAK\EOT\NUL\STX\STX\STX\DC2\EOT\165\STX\SO\SI\n\f\n\EOT\EOT\NAK\STX\NUL\DC2\EOT\168\STX\STX \n\r\n\ENQ\EOT\NAK\STX\NUL\EOT\DC2\EOT\168\STX\STX\n\n\r\n\ENQ\EOT\NAK\STX\NUL\ACK\DC2\EOT\168\STX\v\NAK\n\r\n\ENQ\EOT\NAK\STX\NUL\SOH\DC2\EOT\168\STX\SYN\ESC\n\r\n\ENQ\EOT\NAK\STX\NUL\ETX\DC2\EOT\168\STX\RS\US\n\f\n\EOT\EOT\NAK\STX\SOH\DC2\EOT\169\STX\STX\"\n\r\n\ENQ\EOT\NAK\STX\SOH\EOT\DC2\EOT\169\STX\STX\n\n\r\n\ENQ\EOT\NAK\STX\SOH\ACK\DC2\EOT\169\STX\v\SYN\n\r\n\ENQ\EOT\NAK\STX\SOH\SOH\DC2\EOT\169\STX\ETB\GS\n\r\n\ENQ\EOT\NAK\STX\SOH\ETX\DC2\EOT\169\STX !\n\f\n\EOT\EOT\NAK\STX\STX\DC2\EOT\170\STX\STX!\n\r\n\ENQ\EOT\NAK\STX\STX\EOT\DC2\EOT\170\STX\STX\n\n\r\n\ENQ\EOT\NAK\STX\STX\ENQ\DC2\EOT\170\STX\v\DC1\n\r\n\ENQ\EOT\NAK\STX\STX\SOH\DC2\EOT\170\STX\DC2\FS\n\r\n\ENQ\EOT\NAK\STX\STX\ETX\DC2\EOT\170\STX\US \nD\n\STX\EOT\SYN\DC2\ACK\176\STX\NUL\180\STX\SOH\SUB6*\n List of blocks received and deleted for a storage.\n\n\v\n\ETX\EOT\SYN\SOH\DC2\EOT\176\STX\b)\n\f\n\EOT\EOT\SYN\STX\NUL\DC2\EOT\177\STX\STX8\n\r\n\ENQ\EOT\SYN\STX\NUL\EOT\DC2\EOT\177\STX\STX\n\n\r\n\ENQ\EOT\SYN\STX\NUL\ENQ\DC2\EOT\177\STX\v\DC1\n\r\n\ENQ\EOT\SYN\STX\NUL\SOH\DC2\EOT\177\STX\DC2\GS\n\r\n\ENQ\EOT\SYN\STX\NUL\ETX\DC2\EOT\177\STX !\n\r\n\ENQ\EOT\SYN\STX\NUL\b\DC2\EOT\177\STX\"7\n\DLE\n\b\EOT\SYN\STX\NUL\b\231\a\NUL\DC2\EOT\177\STX$5\n\DC1\n\t\EOT\SYN\STX\NUL\b\231\a\NUL\STX\DC2\EOT\177\STX$.\n\DC2\n\n\EOT\SYN\STX\NUL\b\231\a\NUL\STX\NUL\DC2\EOT\177\STX$.\n\DC3\n\v\EOT\SYN\STX\NUL\b\231\a\NUL\STX\NUL\SOH\DC2\EOT\177\STX$.\n\DC1\n\t\EOT\SYN\STX\NUL\b\231\a\NUL\ETX\DC2\EOT\177\STX15\n\f\n\EOT\EOT\SYN\STX\SOH\DC2\EOT\178\STX\STX4\n\r\n\ENQ\EOT\SYN\STX\SOH\EOT\DC2\EOT\178\STX\STX\n\n\r\n\ENQ\EOT\SYN\STX\SOH\ACK\DC2\EOT\178\STX\v(\n\r\n\ENQ\EOT\SYN\STX\SOH\SOH\DC2\EOT\178\STX)/\n\r\n\ENQ\EOT\SYN\STX\SOH\ETX\DC2\EOT\178\STX23\n'\n\EOT\EOT\SYN\STX\STX\DC2\EOT\179\STX\STX,\"\EM supersedes storageUuid.\n\n\r\n\ENQ\EOT\SYN\STX\STX\EOT\DC2\EOT\179\STX\STX\n\n\r\n\ENQ\EOT\SYN\STX\STX\ACK\DC2\EOT\179\STX\v\US\n\r\n\ENQ\EOT\SYN\STX\STX\SOH\DC2\EOT\179\STX '\n\r\n\ENQ\EOT\SYN\STX\STX\ETX\DC2\EOT\179\STX*+\n\164\SOH\n\STX\EOT\ETB\DC2\ACK\187\STX\NUL\191\STX\SOH\SUB\149\SOH*\n registration - datanode registration information\n blockPoolID  - block pool ID of the reported blocks\n blocks       - Received/deleted block list\n\n\v\n\ETX\EOT\ETB\SOH\DC2\EOT\187\STX\b+\n\f\n\EOT\EOT\ETB\STX\NUL\DC2\EOT\188\STX\STX6\n\r\n\ENQ\EOT\ETB\STX\NUL\EOT\DC2\EOT\188\STX\STX\n\n\r\n\ENQ\EOT\ETB\STX\NUL\ACK\DC2\EOT\188\STX\v$\n\r\n\ENQ\EOT\ETB\STX\NUL\SOH\DC2\EOT\188\STX%1\n\r\n\ENQ\EOT\ETB\STX\NUL\ETX\DC2\EOT\188\STX45\n\f\n\EOT\EOT\ETB\STX\SOH\DC2\EOT\189\STX\STX\"\n\r\n\ENQ\EOT\ETB\STX\SOH\EOT\DC2\EOT\189\STX\STX\n\n\r\n\ENQ\EOT\ETB\STX\SOH\ENQ\DC2\EOT\189\STX\v\DC1\n\r\n\ENQ\EOT\ETB\STX\SOH\SOH\DC2\EOT\189\STX\DC2\GS\n\r\n\ENQ\EOT\ETB\STX\SOH\ETX\DC2\EOT\189\STX !\n\f\n\EOT\EOT\ETB\STX\STX\DC2\EOT\190\STX\STX8\n\r\n\ENQ\EOT\ETB\STX\STX\EOT\DC2\EOT\190\STX\STX\n\n\r\n\ENQ\EOT\ETB\STX\STX\ACK\DC2\EOT\190\STX\v,\n\r\n\ENQ\EOT\ETB\STX\STX\SOH\DC2\EOT\190\STX-3\n\r\n\ENQ\EOT\ETB\STX\STX\ETX\DC2\EOT\190\STX67\n\US\n\STX\EOT\CAN\DC2\ACK\196\STX\NUL\197\STX\SOH\SUB\DC1*\n void response\n\n\v\n\ETX\EOT\CAN\SOH\DC2\EOT\196\STX\b,\n\149\SOH\n\STX\EOT\EM\DC2\ACK\204\STX\NUL\214\STX\SOH\SUB\134\SOH*\n registartion - Datanode reporting the error\n errorCode - error code indicating the error\n msg - Free text description of the error\n\n\v\n\ETX\EOT\EM\SOH\DC2\EOT\204\STX\b\US\n\SO\n\EOT\EOT\EM\EOT\NUL\DC2\ACK\205\STX\STX\210\STX\ETX\n\r\n\ENQ\EOT\EM\EOT\NUL\SOH\DC2\EOT\205\STX\a\DLE\n;\n\ACK\EOT\EM\EOT\NUL\STX\NUL\DC2\EOT\206\STX\EOT\SI\"+ Error report to be logged at the namenode\n\n\SI\n\a\EOT\EM\EOT\NUL\STX\NUL\SOH\DC2\EOT\206\STX\EOT\n\n\SI\n\a\EOT\EM\EOT\NUL\STX\NUL\STX\DC2\EOT\206\STX\r\SO\n@\n\ACK\EOT\EM\EOT\NUL\STX\SOH\DC2\EOT\207\STX\EOT\DC3\"0 DN has disk errors but still has valid volumes\n\n\SI\n\a\EOT\EM\EOT\NUL\STX\SOH\SOH\DC2\EOT\207\STX\EOT\SO\n\SI\n\a\EOT\EM\EOT\NUL\STX\SOH\STX\DC2\EOT\207\STX\DC1\DC2\n<\n\ACK\EOT\EM\EOT\NUL\STX\STX\DC2\EOT\208\STX\EOT\SYN\", Command from namenode has invalid block ID\n\n\SI\n\a\EOT\EM\EOT\NUL\STX\STX\SOH\DC2\EOT\208\STX\EOT\DC1\n\SI\n\a\EOT\EM\EOT\NUL\STX\STX\STX\DC2\EOT\208\STX\DC4\NAK\n3\n\ACK\EOT\EM\EOT\NUL\STX\ETX\DC2\EOT\209\STX\EOT\EM\"# No valid volumes left on datanode\n\n\SI\n\a\EOT\EM\EOT\NUL\STX\ETX\SOH\DC2\EOT\209\STX\EOT\DC4\n\SI\n\a\EOT\EM\EOT\NUL\STX\ETX\STX\DC2\EOT\209\STX\ETB\CAN\n!\n\EOT\EOT\EM\STX\NUL\DC2\EOT\211\STX\STX6\"\DC3 Registartion info\n\n\r\n\ENQ\EOT\EM\STX\NUL\EOT\DC2\EOT\211\STX\STX\n\n\r\n\ENQ\EOT\EM\STX\NUL\ACK\DC2\EOT\211\STX\v$\n\r\n\ENQ\EOT\EM\STX\NUL\SOH\DC2\EOT\211\STX%1\n\r\n\ENQ\EOT\EM\STX\NUL\ETX\DC2\EOT\211\STX45\n\SUB\n\EOT\EOT\EM\STX\SOH\DC2\EOT\212\STX\STX \"\f Error code\n\n\r\n\ENQ\EOT\EM\STX\SOH\EOT\DC2\EOT\212\STX\STX\n\n\r\n\ENQ\EOT\EM\STX\SOH\ENQ\DC2\EOT\212\STX\v\DC1\n\r\n\ENQ\EOT\EM\STX\SOH\SOH\DC2\EOT\212\STX\DC2\ESC\n\r\n\ENQ\EOT\EM\STX\SOH\ETX\DC2\EOT\212\STX\RS\US\n\GS\n\EOT\EOT\EM\STX\STX\DC2\EOT\213\STX\STX\SUB\"\SI Error message\n\n\r\n\ENQ\EOT\EM\STX\STX\EOT\DC2\EOT\213\STX\STX\n\n\r\n\ENQ\EOT\EM\STX\STX\ENQ\DC2\EOT\213\STX\v\DC1\n\r\n\ENQ\EOT\EM\STX\STX\SOH\DC2\EOT\213\STX\DC2\NAK\n\r\n\ENQ\EOT\EM\STX\STX\ETX\DC2\EOT\213\STX\CAN\EM\n\US\n\STX\EOT\SUB\DC2\ACK\219\STX\NUL\220\STX\SOH\SUB\DC1*\n void response\n\n\v\n\ETX\EOT\SUB\SOH\DC2\EOT\219\STX\b \nF\n\STX\EOT\ESC\DC2\ACK\225\STX\NUL\227\STX\SOH\SUB8*\n blocks - list of blocks that are reported as corrupt\n\n\v\n\ETX\EOT\ESC\SOH\DC2\EOT\225\STX\b#\n\f\n\EOT\EOT\ESC\STX\NUL\DC2\EOT\226\STX\STX(\n\r\n\ENQ\EOT\ESC\STX\NUL\EOT\DC2\EOT\226\STX\STX\n\n\r\n\ENQ\EOT\ESC\STX\NUL\ACK\DC2\EOT\226\STX\v\FS\n\r\n\ENQ\EOT\ESC\STX\NUL\SOH\DC2\EOT\226\STX\GS#\n\r\n\ENQ\EOT\ESC\STX\NUL\ETX\DC2\EOT\226\STX&'\n\US\n\STX\EOT\FS\DC2\ACK\232\STX\NUL\233\STX\SOH\SUB\DC1*\n void response\n\n\v\n\ETX\EOT\FS\SOH\DC2\EOT\232\STX\b$\nL\n\STX\EOT\GS\DC2\ACK\238\STX\NUL\246\STX\SOH\SUB>*\n Commit block synchronization request during lease recovery\n\n\v\n\ETX\EOT\GS\SOH\DC2\EOT\238\STX\b.\n\f\n\EOT\EOT\GS\STX\NUL\DC2\EOT\239\STX\STX(\n\r\n\ENQ\EOT\GS\STX\NUL\EOT\DC2\EOT\239\STX\STX\n\n\r\n\ENQ\EOT\GS\STX\NUL\ACK\DC2\EOT\239\STX\v\GS\n\r\n\ENQ\EOT\GS\STX\NUL\SOH\DC2\EOT\239\STX\RS#\n\r\n\ENQ\EOT\GS\STX\NUL\ETX\DC2\EOT\239\STX&'\n\f\n\EOT\EOT\GS\STX\SOH\DC2\EOT\240\STX\STX\"\n\r\n\ENQ\EOT\GS\STX\SOH\EOT\DC2\EOT\240\STX\STX\n\n\r\n\ENQ\EOT\GS\STX\SOH\ENQ\DC2\EOT\240\STX\v\DC1\n\r\n\ENQ\EOT\GS\STX\SOH\SOH\DC2\EOT\240\STX\DC2\GS\n\r\n\ENQ\EOT\GS\STX\SOH\ETX\DC2\EOT\240\STX !\n\f\n\EOT\EOT\GS\STX\STX\DC2\EOT\241\STX\STX \n\r\n\ENQ\EOT\GS\STX\STX\EOT\DC2\EOT\241\STX\STX\n\n\r\n\ENQ\EOT\GS\STX\STX\ENQ\DC2\EOT\241\STX\v\DC1\n\r\n\ENQ\EOT\GS\STX\STX\SOH\DC2\EOT\241\STX\DC2\ESC\n\r\n\ENQ\EOT\GS\STX\STX\ETX\DC2\EOT\241\STX\RS\US\n\f\n\EOT\EOT\GS\STX\ETX\DC2\EOT\242\STX\STX\RS\n\r\n\ENQ\EOT\GS\STX\ETX\EOT\DC2\EOT\242\STX\STX\n\n\r\n\ENQ\EOT\GS\STX\ETX\ENQ\DC2\EOT\242\STX\v\SI\n\r\n\ENQ\EOT\GS\STX\ETX\SOH\DC2\EOT\242\STX\DLE\EM\n\r\n\ENQ\EOT\GS\STX\ETX\ETX\DC2\EOT\242\STX\FS\GS\n\f\n\EOT\EOT\GS\STX\EOT\DC2\EOT\243\STX\STX \n\r\n\ENQ\EOT\GS\STX\EOT\EOT\DC2\EOT\243\STX\STX\n\n\r\n\ENQ\EOT\GS\STX\EOT\ENQ\DC2\EOT\243\STX\v\SI\n\r\n\ENQ\EOT\GS\STX\EOT\SOH\DC2\EOT\243\STX\DLE\ESC\n\r\n\ENQ\EOT\GS\STX\EOT\ETX\DC2\EOT\243\STX\RS\US\n\f\n\EOT\EOT\GS\STX\ENQ\DC2\EOT\244\STX\STX+\n\r\n\ENQ\EOT\GS\STX\ENQ\EOT\DC2\EOT\244\STX\STX\n\n\r\n\ENQ\EOT\GS\STX\ENQ\ACK\DC2\EOT\244\STX\v\SUB\n\r\n\ENQ\EOT\GS\STX\ENQ\SOH\DC2\EOT\244\STX\ESC&\n\r\n\ENQ\EOT\GS\STX\ENQ\ETX\DC2\EOT\244\STX)*\n\f\n\EOT\EOT\GS\STX\ACK\DC2\EOT\245\STX\STX(\n\r\n\ENQ\EOT\GS\STX\ACK\EOT\DC2\EOT\245\STX\STX\n\n\r\n\ENQ\EOT\GS\STX\ACK\ENQ\DC2\EOT\245\STX\v\DC1\n\r\n\ENQ\EOT\GS\STX\ACK\SOH\DC2\EOT\245\STX\DC2#\n\r\n\ENQ\EOT\GS\STX\ACK\ETX\DC2\EOT\245\STX&'\n\US\n\STX\EOT\RS\DC2\ACK\251\STX\NUL\252\STX\SOH\SUB\DC1*\n void response\n\n\v\n\ETX\EOT\RS\SOH\DC2\EOT\251\STX\b/\nt\n\STX\ACK\NUL\DC2\ACK\130\ETX\NUL\181\ETX\SOH\SUBf*\n Protocol used from datanode to the namenode\n See the request and response for details of rpc call.\n\n\v\n\ETX\ACK\NUL\SOH\DC2\EOT\130\ETX\b\US\n5\n\EOT\ACK\NUL\STX\NUL\DC2\ACK\134\ETX\STX\135\ETX-\SUB%*\n Register a datanode at a namenode\n\n\r\n\ENQ\ACK\NUL\STX\NUL\SOH\DC2\EOT\134\ETX\ACK\SYN\n\r\n\ENQ\ACK\NUL\STX\NUL\STX\DC2\EOT\134\ETX\ETB3\n\r\n\ENQ\ACK\NUL\STX\NUL\ETX\DC2\EOT\135\ETX\SO+\n:\n\EOT\ACK\NUL\STX\SOH\DC2\EOT\140\ETX\STXK\SUB,*\n Send heartbeat from datanode to namenode\n\n\r\n\ENQ\ACK\NUL\STX\SOH\SOH\DC2\EOT\140\ETX\ACK\DC3\n\r\n\ENQ\ACK\NUL\STX\SOH\STX\DC2\EOT\140\ETX\DC4)\n\r\n\ENQ\ACK\NUL\STX\SOH\ETX\DC2\EOT\140\ETX3I\nC\n\EOT\ACK\NUL\STX\STX\DC2\EOT\145\ETX\STXM\SUB5*\n Report blocks at a given datanode to the namenode\n\n\r\n\ENQ\ACK\NUL\STX\STX\SOH\DC2\EOT\145\ETX\ACK\DC1\n\r\n\ENQ\ACK\NUL\STX\STX\STX\DC2\EOT\145\ETX\DC2)\n\r\n\ENQ\ACK\NUL\STX\STX\ETX\DC2\EOT\145\ETX3K\nD\n\EOT\ACK\NUL\STX\ETX\DC2\EOT\150\ETX\STXM\SUB6*\n Report cached blocks at a datanode to the namenode\n\n\r\n\ENQ\ACK\NUL\STX\ETX\SOH\DC2\EOT\150\ETX\ACK\DC1\n\r\n\ENQ\ACK\NUL\STX\ETX\STX\DC2\EOT\150\ETX\DC2)\n\r\n\ENQ\ACK\NUL\STX\ETX\ETX\DC2\EOT\150\ETX3K\n\168\SOH\n\EOT\ACK\NUL\STX\EOT\DC2\ACK\157\ETX\STX\158\ETX4\SUB\151\SOH*\n Incremental block report from the DN. This contains info about recently\n received and deleted blocks, as well as when blocks start being\n received.\n\n\r\n\ENQ\ACK\NUL\STX\EOT\SOH\DC2\EOT\157\ETX\ACK\GS\n\r\n\ENQ\ACK\NUL\STX\EOT\STX\DC2\EOT\157\ETX\RSA\n\r\n\ENQ\ACK\NUL\STX\EOT\ETX\DC2\EOT\158\ETX\SO2\na\n\EOT\ACK\NUL\STX\ENQ\DC2\EOT\164\ETX\STXM\SUBS*\n Report from a datanode of an error to the active namenode.\n Used for debugging.\n\n\r\n\ENQ\ACK\NUL\STX\ENQ\SOH\DC2\EOT\164\ETX\ACK\DC1\n\r\n\ENQ\ACK\NUL\STX\ENQ\STX\DC2\EOT\164\ETX\DC2)\n\r\n\ENQ\ACK\NUL\STX\ENQ\ETX\DC2\EOT\164\ETX3K\n%\n\EOT\ACK\NUL\STX\ACK\DC2\EOT\169\ETX\STXH\SUB\ETB*\n Request the version\n\n\r\n\ENQ\ACK\NUL\STX\ACK\SOH\DC2\EOT\169\ETX\ACK\DC4\n\r\n\ENQ\ACK\NUL\STX\ACK\STX\DC2\EOT\169\ETX\NAK(\n\r\n\ENQ\ACK\NUL\STX\ACK\ETX\DC2\EOT\169\ETX2F\nA\n\EOT\ACK\NUL\STX\a\DC2\EOT\174\ETX\STXY\SUB3*\n Report corrupt blocks at the specified location\n\n\r\n\ENQ\ACK\NUL\STX\a\SOH\DC2\EOT\174\ETX\ACK\NAK\n\r\n\ENQ\ACK\NUL\STX\a\STX\DC2\EOT\174\ETX\SYN1\n\r\n\ENQ\ACK\NUL\STX\a\ETX\DC2\EOT\174\ETX;W\nG\n\EOT\ACK\NUL\STX\b\DC2\ACK\179\ETX\STX\180\ETX7\SUB7*\n Commit block synchronization during lease recovery.\n\n\r\n\ENQ\ACK\NUL\STX\b\SOH\DC2\EOT\179\ETX\ACK \n\r\n\ENQ\ACK\NUL\STX\b\STX\DC2\EOT\179\ETX!G\n\r\n\ENQ\ACK\NUL\STX\b\ETX\DC2\EOT\180\ETX\SO5")